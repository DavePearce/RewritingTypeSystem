import org.junit.FixMethodOrder;
import org.junit.runners.MethodSorters;
import org.junit.Test;
import types.testing.AbstractTestSuite;
import types.core.SyntacticType;
import types.core.SubtypeQuery;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class TestSuite_2_2 extends AbstractTestSuite {
	public static class Part_0 {
		private static final SubtypeQuery test_0_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("!int"));
		@Test public void test_0() { testValid(test_0_query); }

		private static final SubtypeQuery test_1_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("(any | any)"));
		@Test public void test_1() { testInvalid(test_1_query); }

		private static final SubtypeQuery test_2_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("(any & any)"));
		@Test public void test_2() { testInvalid(test_2_query); }

		private static final SubtypeQuery test_3_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{{int, int}}"));
		@Test public void test_3() { testValid(test_3_query); }

		private static final SubtypeQuery test_4_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("!(int | int)"));
		@Test public void test_4() { testValid(test_4_query); }

		private static final SubtypeQuery test_5_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{{any, any}, any}"));
		@Test public void test_5() { testValid(test_5_query); }

		private static final SubtypeQuery test_6_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{{any, int}, any}"));
		@Test public void test_6() { testValid(test_6_query); }

		private static final SubtypeQuery test_7_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{{any}, int}"));
		@Test public void test_7() { testValid(test_7_query); }

		private static final SubtypeQuery test_8_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{{any, any}, int}"));
		@Test public void test_8() { testValid(test_8_query); }

		private static final SubtypeQuery test_9_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{(any | int), int}"));
		@Test public void test_9() { testValid(test_9_query); }

		private static final SubtypeQuery test_10_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_10() { testValid(test_10_query); }

		private static final SubtypeQuery test_11_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{!any, {int}}"));
		@Test public void test_11() { testValid(test_11_query); }

		private static final SubtypeQuery test_12_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_12() { testValid(test_12_query); }

		private static final SubtypeQuery test_13_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_13() { testValid(test_13_query); }

		private static final SubtypeQuery test_14_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{any, !any}"));
		@Test public void test_14() { testValid(test_14_query); }

		private static final SubtypeQuery test_15_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{{any}, !int}"));
		@Test public void test_15() { testValid(test_15_query); }

		private static final SubtypeQuery test_16_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_16() { testValid(test_16_query); }

		private static final SubtypeQuery test_17_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_17() { testValid(test_17_query); }

		private static final SubtypeQuery test_18_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{(int & int), !int}"));
		@Test public void test_18() { testValid(test_18_query); }

		private static final SubtypeQuery test_19_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_19() { testValid(test_19_query); }

		private static final SubtypeQuery test_20_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_20() { testValid(test_20_query); }

		private static final SubtypeQuery test_21_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_21() { testValid(test_21_query); }

		private static final SubtypeQuery test_22_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_22() { testValid(test_22_query); }

		private static final SubtypeQuery test_23_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_23() { testValid(test_23_query); }

		private static final SubtypeQuery test_24_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_24() { testValid(test_24_query); }

		private static final SubtypeQuery test_25_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_25() { testValid(test_25_query); }

		private static final SubtypeQuery test_26_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{any, {any, int}}"));
		@Test public void test_26() { testValid(test_26_query); }

		private static final SubtypeQuery test_27_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_27() { testValid(test_27_query); }

		private static final SubtypeQuery test_28_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_28() { testValid(test_28_query); }

		private static final SubtypeQuery test_29_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_29() { testValid(test_29_query); }

		private static final SubtypeQuery test_30_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_30() { testValid(test_30_query); }

		private static final SubtypeQuery test_31_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_31() { testValid(test_31_query); }

		private static final SubtypeQuery test_32_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_32() { testValid(test_32_query); }

		private static final SubtypeQuery test_33_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_33() { testValid(test_33_query); }

		private static final SubtypeQuery test_34_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_34() { testValid(test_34_query); }

		private static final SubtypeQuery test_35_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_35() { testValid(test_35_query); }

		private static final SubtypeQuery test_36_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_36() { testValid(test_36_query); }

		private static final SubtypeQuery test_37_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{int, (int | int)}"));
		@Test public void test_37() { testValid(test_37_query); }

		private static final SubtypeQuery test_38_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_38() { testValid(test_38_query); }

		private static final SubtypeQuery test_39_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{any, (any & any)}"));
		@Test public void test_39() { testValid(test_39_query); }

		private static final SubtypeQuery test_40_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_40() { testValid(test_40_query); }

		private static final SubtypeQuery test_41_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_41() { testValid(test_41_query); }

		private static final SubtypeQuery test_42_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_42() { testValid(test_42_query); }

		private static final SubtypeQuery test_43_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_43() { testValid(test_43_query); }

		private static final SubtypeQuery test_44_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_44() { testValid(test_44_query); }

		private static final SubtypeQuery test_45_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_45() { testValid(test_45_query); }

		private static final SubtypeQuery test_46_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_46() { testValid(test_46_query); }

		private static final SubtypeQuery test_47_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_47() { testValid(test_47_query); }

		private static final SubtypeQuery test_48_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{any, (any & int)}"));
		@Test public void test_48() { testValid(test_48_query); }

		private static final SubtypeQuery test_49_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_49() { testValid(test_49_query); }

		private static final SubtypeQuery test_50_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_50() { testValid(test_50_query); }

		private static final SubtypeQuery test_51_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_51() { testValid(test_51_query); }

		private static final SubtypeQuery test_52_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{int, (int & int)}"));
		@Test public void test_52() { testValid(test_52_query); }

		private static final SubtypeQuery test_53_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_53() { testValid(test_53_query); }

		private static final SubtypeQuery test_54_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_54() { testValid(test_54_query); }

		private static final SubtypeQuery test_55_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_55() { testValid(test_55_query); }

		private static final SubtypeQuery test_56_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("(!any | any)"));
		@Test public void test_56() { testInvalid(test_56_query); }

		private static final SubtypeQuery test_57_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("({int, any} | any)"));
		@Test public void test_57() { testInvalid(test_57_query); }

		private static final SubtypeQuery test_58_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("({any, int} | any)"));
		@Test public void test_58() { testInvalid(test_58_query); }

		private static final SubtypeQuery test_59_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("((int & int) | any)"));
		@Test public void test_59() { testInvalid(test_59_query); }

		private static final SubtypeQuery test_60_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("({int, int} | int)"));
		@Test public void test_60() { testInvalid(test_60_query); }

		private static final SubtypeQuery test_61_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("((any | any) | int)"));
		@Test public void test_61() { testInvalid(test_61_query); }

		private static final SubtypeQuery test_62_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("((int | any) | int)"));
		@Test public void test_62() { testInvalid(test_62_query); }

		private static final SubtypeQuery test_63_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("(any | {any})"));
		@Test public void test_63() { testInvalid(test_63_query); }

		private static final SubtypeQuery test_64_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("(int | {any})"));
		@Test public void test_64() { testInvalid(test_64_query); }

		private static final SubtypeQuery test_65_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("({any, any} | {any})"));
		@Test public void test_65() { testValid(test_65_query); }

		private static final SubtypeQuery test_66_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("(any | {int})"));
		@Test public void test_66() { testInvalid(test_66_query); }

		private static final SubtypeQuery test_67_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("((any | any) | {int})"));
		@Test public void test_67() { testInvalid(test_67_query); }

		private static final SubtypeQuery test_68_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("(!int | !any)"));
		@Test public void test_68() { testValid(test_68_query); }

		private static final SubtypeQuery test_69_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("({int, any} | !any)"));
		@Test public void test_69() { testValid(test_69_query); }

		private static final SubtypeQuery test_70_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("((any | any) | !any)"));
		@Test public void test_70() { testInvalid(test_70_query); }

		private static final SubtypeQuery test_71_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("({int} | !int)"));
		@Test public void test_71() { testValid(test_71_query); }

		private static final SubtypeQuery test_72_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("(!any | !int)"));
		@Test public void test_72() { testValid(test_72_query); }

		private static final SubtypeQuery test_73_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("(!int | {any, any})"));
		@Test public void test_73() { testValid(test_73_query); }

		private static final SubtypeQuery test_74_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_74() { testInvalid(test_74_query); }

		private static final SubtypeQuery test_75_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_75() { testInvalid(test_75_query); }

		private static final SubtypeQuery test_76_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_76() { testValid(test_76_query); }

		private static final SubtypeQuery test_77_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_77() { testInvalid(test_77_query); }

		private static final SubtypeQuery test_78_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_78() { testInvalid(test_78_query); }

		private static final SubtypeQuery test_79_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_79() { testInvalid(test_79_query); }

		private static final SubtypeQuery test_80_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("({int} | (any | any))"));
		@Test public void test_80() { testInvalid(test_80_query); }

		private static final SubtypeQuery test_81_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_81() { testInvalid(test_81_query); }

		private static final SubtypeQuery test_82_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_82() { testInvalid(test_82_query); }

		private static final SubtypeQuery test_83_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_83() { testInvalid(test_83_query); }

		private static final SubtypeQuery test_84_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_84() { testInvalid(test_84_query); }

		private static final SubtypeQuery test_85_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_85() { testInvalid(test_85_query); }

		private static final SubtypeQuery test_86_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_86() { testInvalid(test_86_query); }

		private static final SubtypeQuery test_87_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("(int | (any | int))"));
		@Test public void test_87() { testInvalid(test_87_query); }

		private static final SubtypeQuery test_88_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_88() { testInvalid(test_88_query); }

		private static final SubtypeQuery test_89_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_89() { testInvalid(test_89_query); }

		private static final SubtypeQuery test_90_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_90() { testInvalid(test_90_query); }

		private static final SubtypeQuery test_91_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_91() { testInvalid(test_91_query); }

		private static final SubtypeQuery test_92_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("(!any | (int | int))"));
		@Test public void test_92() { testInvalid(test_92_query); }

		private static final SubtypeQuery test_93_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_93() { testInvalid(test_93_query); }

		private static final SubtypeQuery test_94_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("(int | (any & any))"));
		@Test public void test_94() { testInvalid(test_94_query); }

		private static final SubtypeQuery test_95_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("(!any | (any & any))"));
		@Test public void test_95() { testInvalid(test_95_query); }

		private static final SubtypeQuery test_96_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_96() { testInvalid(test_96_query); }

		private static final SubtypeQuery test_97_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_97() { testInvalid(test_97_query); }

		private static final SubtypeQuery test_98_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_98() { testInvalid(test_98_query); }

		private static final SubtypeQuery test_99_query = createSubtypeQuery(parseWhiley("!int"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_99() { testInvalid(test_99_query); }

		private static final SubtypeQuery test_100_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("!int"));
		@Test public void test_100() { testValid(test_100_query); }

		private static final SubtypeQuery test_101_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("(any | any)"));
		@Test public void test_101() { testValid(test_101_query); }

		private static final SubtypeQuery test_102_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("(any & any)"));
		@Test public void test_102() { testValid(test_102_query); }

		private static final SubtypeQuery test_103_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{{int, int}}"));
		@Test public void test_103() { testValid(test_103_query); }

		private static final SubtypeQuery test_104_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("!(int | int)"));
		@Test public void test_104() { testValid(test_104_query); }

		private static final SubtypeQuery test_105_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{{any, any}, any}"));
		@Test public void test_105() { testValid(test_105_query); }

		private static final SubtypeQuery test_106_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{{any, int}, any}"));
		@Test public void test_106() { testValid(test_106_query); }

		private static final SubtypeQuery test_107_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{{any}, int}"));
		@Test public void test_107() { testValid(test_107_query); }

		private static final SubtypeQuery test_108_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{{any, any}, int}"));
		@Test public void test_108() { testValid(test_108_query); }

		private static final SubtypeQuery test_109_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{(any | int), int}"));
		@Test public void test_109() { testValid(test_109_query); }

		private static final SubtypeQuery test_110_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_110() { testValid(test_110_query); }

		private static final SubtypeQuery test_111_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{!any, {int}}"));
		@Test public void test_111() { testValid(test_111_query); }

		private static final SubtypeQuery test_112_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_112() { testValid(test_112_query); }

		private static final SubtypeQuery test_113_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_113() { testValid(test_113_query); }

		private static final SubtypeQuery test_114_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{any, !any}"));
		@Test public void test_114() { testValid(test_114_query); }

		private static final SubtypeQuery test_115_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{{any}, !int}"));
		@Test public void test_115() { testValid(test_115_query); }

		private static final SubtypeQuery test_116_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_116() { testValid(test_116_query); }

		private static final SubtypeQuery test_117_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_117() { testValid(test_117_query); }

		private static final SubtypeQuery test_118_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{(int & int), !int}"));
		@Test public void test_118() { testValid(test_118_query); }

		private static final SubtypeQuery test_119_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_119() { testValid(test_119_query); }

		private static final SubtypeQuery test_120_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_120() { testValid(test_120_query); }

		private static final SubtypeQuery test_121_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_121() { testValid(test_121_query); }

		private static final SubtypeQuery test_122_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_122() { testValid(test_122_query); }

		private static final SubtypeQuery test_123_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_123() { testValid(test_123_query); }

		private static final SubtypeQuery test_124_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_124() { testValid(test_124_query); }

		private static final SubtypeQuery test_125_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_125() { testValid(test_125_query); }

		private static final SubtypeQuery test_126_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{any, {any, int}}"));
		@Test public void test_126() { testValid(test_126_query); }

		private static final SubtypeQuery test_127_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_127() { testValid(test_127_query); }

		private static final SubtypeQuery test_128_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_128() { testValid(test_128_query); }

		private static final SubtypeQuery test_129_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_129() { testValid(test_129_query); }

		private static final SubtypeQuery test_130_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_130() { testValid(test_130_query); }

		private static final SubtypeQuery test_131_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_131() { testValid(test_131_query); }

		private static final SubtypeQuery test_132_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_132() { testValid(test_132_query); }

		private static final SubtypeQuery test_133_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_133() { testValid(test_133_query); }

		private static final SubtypeQuery test_134_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_134() { testValid(test_134_query); }

		private static final SubtypeQuery test_135_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_135() { testValid(test_135_query); }

		private static final SubtypeQuery test_136_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_136() { testValid(test_136_query); }

		private static final SubtypeQuery test_137_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{int, (int | int)}"));
		@Test public void test_137() { testValid(test_137_query); }

		private static final SubtypeQuery test_138_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_138() { testValid(test_138_query); }

		private static final SubtypeQuery test_139_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{any, (any & any)}"));
		@Test public void test_139() { testValid(test_139_query); }

		private static final SubtypeQuery test_140_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_140() { testValid(test_140_query); }

		private static final SubtypeQuery test_141_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_141() { testValid(test_141_query); }

		private static final SubtypeQuery test_142_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_142() { testValid(test_142_query); }

		private static final SubtypeQuery test_143_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_143() { testValid(test_143_query); }

		private static final SubtypeQuery test_144_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_144() { testValid(test_144_query); }

		private static final SubtypeQuery test_145_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_145() { testValid(test_145_query); }

		private static final SubtypeQuery test_146_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_146() { testValid(test_146_query); }

		private static final SubtypeQuery test_147_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_147() { testValid(test_147_query); }

		private static final SubtypeQuery test_148_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{any, (any & int)}"));
		@Test public void test_148() { testValid(test_148_query); }

		private static final SubtypeQuery test_149_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_149() { testValid(test_149_query); }

		private static final SubtypeQuery test_150_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_150() { testValid(test_150_query); }

		private static final SubtypeQuery test_151_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_151() { testValid(test_151_query); }

		private static final SubtypeQuery test_152_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{int, (int & int)}"));
		@Test public void test_152() { testValid(test_152_query); }

		private static final SubtypeQuery test_153_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_153() { testValid(test_153_query); }

		private static final SubtypeQuery test_154_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_154() { testValid(test_154_query); }

		private static final SubtypeQuery test_155_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_155() { testValid(test_155_query); }

		private static final SubtypeQuery test_156_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("(!any | any)"));
		@Test public void test_156() { testValid(test_156_query); }

		private static final SubtypeQuery test_157_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("({int, any} | any)"));
		@Test public void test_157() { testValid(test_157_query); }

		private static final SubtypeQuery test_158_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("({any, int} | any)"));
		@Test public void test_158() { testValid(test_158_query); }

		private static final SubtypeQuery test_159_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("((int & int) | any)"));
		@Test public void test_159() { testValid(test_159_query); }

		private static final SubtypeQuery test_160_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("({int, int} | int)"));
		@Test public void test_160() { testValid(test_160_query); }

		private static final SubtypeQuery test_161_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("((any | any) | int)"));
		@Test public void test_161() { testValid(test_161_query); }

		private static final SubtypeQuery test_162_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("((int | any) | int)"));
		@Test public void test_162() { testValid(test_162_query); }

		private static final SubtypeQuery test_163_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("(any | {any})"));
		@Test public void test_163() { testValid(test_163_query); }

		private static final SubtypeQuery test_164_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("(int | {any})"));
		@Test public void test_164() { testValid(test_164_query); }

		private static final SubtypeQuery test_165_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("({any, any} | {any})"));
		@Test public void test_165() { testValid(test_165_query); }

		private static final SubtypeQuery test_166_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("(any | {int})"));
		@Test public void test_166() { testValid(test_166_query); }

		private static final SubtypeQuery test_167_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("((any | any) | {int})"));
		@Test public void test_167() { testValid(test_167_query); }

		private static final SubtypeQuery test_168_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("(!int | !any)"));
		@Test public void test_168() { testValid(test_168_query); }

		private static final SubtypeQuery test_169_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("({int, any} | !any)"));
		@Test public void test_169() { testValid(test_169_query); }

		private static final SubtypeQuery test_170_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("((any | any) | !any)"));
		@Test public void test_170() { testValid(test_170_query); }

		private static final SubtypeQuery test_171_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("({int} | !int)"));
		@Test public void test_171() { testValid(test_171_query); }

		private static final SubtypeQuery test_172_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("(!any | !int)"));
		@Test public void test_172() { testValid(test_172_query); }

		private static final SubtypeQuery test_173_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("(!int | {any, any})"));
		@Test public void test_173() { testValid(test_173_query); }

		private static final SubtypeQuery test_174_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_174() { testValid(test_174_query); }

		private static final SubtypeQuery test_175_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_175() { testValid(test_175_query); }

		private static final SubtypeQuery test_176_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_176() { testValid(test_176_query); }

		private static final SubtypeQuery test_177_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_177() { testValid(test_177_query); }

		private static final SubtypeQuery test_178_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_178() { testValid(test_178_query); }

		private static final SubtypeQuery test_179_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_179() { testValid(test_179_query); }

		private static final SubtypeQuery test_180_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("({int} | (any | any))"));
		@Test public void test_180() { testValid(test_180_query); }

		private static final SubtypeQuery test_181_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_181() { testValid(test_181_query); }

		private static final SubtypeQuery test_182_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_182() { testValid(test_182_query); }

		private static final SubtypeQuery test_183_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_183() { testValid(test_183_query); }

		private static final SubtypeQuery test_184_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_184() { testValid(test_184_query); }

		private static final SubtypeQuery test_185_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_185() { testValid(test_185_query); }

		private static final SubtypeQuery test_186_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_186() { testValid(test_186_query); }

		private static final SubtypeQuery test_187_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("(int | (any | int))"));
		@Test public void test_187() { testValid(test_187_query); }

		private static final SubtypeQuery test_188_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_188() { testValid(test_188_query); }

		private static final SubtypeQuery test_189_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_189() { testValid(test_189_query); }

		private static final SubtypeQuery test_190_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_190() { testValid(test_190_query); }

		private static final SubtypeQuery test_191_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_191() { testValid(test_191_query); }

		private static final SubtypeQuery test_192_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("(!any | (int | int))"));
		@Test public void test_192() { testValid(test_192_query); }

		private static final SubtypeQuery test_193_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_193() { testValid(test_193_query); }

		private static final SubtypeQuery test_194_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("(int | (any & any))"));
		@Test public void test_194() { testValid(test_194_query); }

		private static final SubtypeQuery test_195_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("(!any | (any & any))"));
		@Test public void test_195() { testValid(test_195_query); }

		private static final SubtypeQuery test_196_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_196() { testValid(test_196_query); }

		private static final SubtypeQuery test_197_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_197() { testValid(test_197_query); }

		private static final SubtypeQuery test_198_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_198() { testValid(test_198_query); }

		private static final SubtypeQuery test_199_query = createSubtypeQuery(parseWhiley("(any | any)"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_199() { testValid(test_199_query); }

		private static final SubtypeQuery test_200_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("!int"));
		@Test public void test_200() { testValid(test_200_query); }

		private static final SubtypeQuery test_201_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("(any | any)"));
		@Test public void test_201() { testValid(test_201_query); }

		private static final SubtypeQuery test_202_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("(any & any)"));
		@Test public void test_202() { testValid(test_202_query); }

		private static final SubtypeQuery test_203_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{{int, int}}"));
		@Test public void test_203() { testValid(test_203_query); }

		private static final SubtypeQuery test_204_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("!(int | int)"));
		@Test public void test_204() { testValid(test_204_query); }

		private static final SubtypeQuery test_205_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{{any, any}, any}"));
		@Test public void test_205() { testValid(test_205_query); }

		private static final SubtypeQuery test_206_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{{any, int}, any}"));
		@Test public void test_206() { testValid(test_206_query); }

		private static final SubtypeQuery test_207_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{{any}, int}"));
		@Test public void test_207() { testValid(test_207_query); }

		private static final SubtypeQuery test_208_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{{any, any}, int}"));
		@Test public void test_208() { testValid(test_208_query); }

		private static final SubtypeQuery test_209_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{(any | int), int}"));
		@Test public void test_209() { testValid(test_209_query); }

		private static final SubtypeQuery test_210_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_210() { testValid(test_210_query); }

		private static final SubtypeQuery test_211_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{!any, {int}}"));
		@Test public void test_211() { testValid(test_211_query); }

		private static final SubtypeQuery test_212_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_212() { testValid(test_212_query); }

		private static final SubtypeQuery test_213_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_213() { testValid(test_213_query); }

		private static final SubtypeQuery test_214_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{any, !any}"));
		@Test public void test_214() { testValid(test_214_query); }

		private static final SubtypeQuery test_215_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{{any}, !int}"));
		@Test public void test_215() { testValid(test_215_query); }

		private static final SubtypeQuery test_216_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_216() { testValid(test_216_query); }

		private static final SubtypeQuery test_217_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_217() { testValid(test_217_query); }

		private static final SubtypeQuery test_218_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{(int & int), !int}"));
		@Test public void test_218() { testValid(test_218_query); }

		private static final SubtypeQuery test_219_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_219() { testValid(test_219_query); }

		private static final SubtypeQuery test_220_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_220() { testValid(test_220_query); }

		private static final SubtypeQuery test_221_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_221() { testValid(test_221_query); }

		private static final SubtypeQuery test_222_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_222() { testValid(test_222_query); }

		private static final SubtypeQuery test_223_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_223() { testValid(test_223_query); }

		private static final SubtypeQuery test_224_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_224() { testValid(test_224_query); }

		private static final SubtypeQuery test_225_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_225() { testValid(test_225_query); }

		private static final SubtypeQuery test_226_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{any, {any, int}}"));
		@Test public void test_226() { testValid(test_226_query); }

		private static final SubtypeQuery test_227_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_227() { testValid(test_227_query); }

		private static final SubtypeQuery test_228_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_228() { testValid(test_228_query); }

		private static final SubtypeQuery test_229_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_229() { testValid(test_229_query); }

		private static final SubtypeQuery test_230_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_230() { testValid(test_230_query); }

		private static final SubtypeQuery test_231_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_231() { testValid(test_231_query); }

		private static final SubtypeQuery test_232_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_232() { testValid(test_232_query); }

		private static final SubtypeQuery test_233_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_233() { testValid(test_233_query); }

		private static final SubtypeQuery test_234_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_234() { testValid(test_234_query); }

		private static final SubtypeQuery test_235_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_235() { testValid(test_235_query); }

		private static final SubtypeQuery test_236_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_236() { testValid(test_236_query); }

		private static final SubtypeQuery test_237_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{int, (int | int)}"));
		@Test public void test_237() { testValid(test_237_query); }

		private static final SubtypeQuery test_238_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_238() { testValid(test_238_query); }

		private static final SubtypeQuery test_239_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{any, (any & any)}"));
		@Test public void test_239() { testValid(test_239_query); }

		private static final SubtypeQuery test_240_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_240() { testValid(test_240_query); }

		private static final SubtypeQuery test_241_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_241() { testValid(test_241_query); }

		private static final SubtypeQuery test_242_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_242() { testValid(test_242_query); }

		private static final SubtypeQuery test_243_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_243() { testValid(test_243_query); }

		private static final SubtypeQuery test_244_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_244() { testValid(test_244_query); }

		private static final SubtypeQuery test_245_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_245() { testValid(test_245_query); }

		private static final SubtypeQuery test_246_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_246() { testValid(test_246_query); }

		private static final SubtypeQuery test_247_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_247() { testValid(test_247_query); }

		private static final SubtypeQuery test_248_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{any, (any & int)}"));
		@Test public void test_248() { testValid(test_248_query); }

		private static final SubtypeQuery test_249_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_249() { testValid(test_249_query); }

		private static final SubtypeQuery test_250_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_250() { testValid(test_250_query); }

		private static final SubtypeQuery test_251_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_251() { testValid(test_251_query); }

		private static final SubtypeQuery test_252_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{int, (int & int)}"));
		@Test public void test_252() { testValid(test_252_query); }

		private static final SubtypeQuery test_253_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_253() { testValid(test_253_query); }

		private static final SubtypeQuery test_254_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_254() { testValid(test_254_query); }

		private static final SubtypeQuery test_255_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_255() { testValid(test_255_query); }

		private static final SubtypeQuery test_256_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("(!any | any)"));
		@Test public void test_256() { testValid(test_256_query); }

		private static final SubtypeQuery test_257_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("({int, any} | any)"));
		@Test public void test_257() { testValid(test_257_query); }

		private static final SubtypeQuery test_258_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("({any, int} | any)"));
		@Test public void test_258() { testValid(test_258_query); }

		private static final SubtypeQuery test_259_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("((int & int) | any)"));
		@Test public void test_259() { testValid(test_259_query); }

		private static final SubtypeQuery test_260_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("({int, int} | int)"));
		@Test public void test_260() { testValid(test_260_query); }

		private static final SubtypeQuery test_261_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("((any | any) | int)"));
		@Test public void test_261() { testValid(test_261_query); }

		private static final SubtypeQuery test_262_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("((int | any) | int)"));
		@Test public void test_262() { testValid(test_262_query); }

		private static final SubtypeQuery test_263_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("(any | {any})"));
		@Test public void test_263() { testValid(test_263_query); }

		private static final SubtypeQuery test_264_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("(int | {any})"));
		@Test public void test_264() { testValid(test_264_query); }

		private static final SubtypeQuery test_265_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("({any, any} | {any})"));
		@Test public void test_265() { testValid(test_265_query); }

		private static final SubtypeQuery test_266_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("(any | {int})"));
		@Test public void test_266() { testValid(test_266_query); }

		private static final SubtypeQuery test_267_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("((any | any) | {int})"));
		@Test public void test_267() { testValid(test_267_query); }

		private static final SubtypeQuery test_268_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("(!int | !any)"));
		@Test public void test_268() { testValid(test_268_query); }

		private static final SubtypeQuery test_269_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("({int, any} | !any)"));
		@Test public void test_269() { testValid(test_269_query); }

		private static final SubtypeQuery test_270_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("((any | any) | !any)"));
		@Test public void test_270() { testValid(test_270_query); }

		private static final SubtypeQuery test_271_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("({int} | !int)"));
		@Test public void test_271() { testValid(test_271_query); }

		private static final SubtypeQuery test_272_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("(!any | !int)"));
		@Test public void test_272() { testValid(test_272_query); }

		private static final SubtypeQuery test_273_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("(!int | {any, any})"));
		@Test public void test_273() { testValid(test_273_query); }

		private static final SubtypeQuery test_274_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_274() { testValid(test_274_query); }

		private static final SubtypeQuery test_275_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_275() { testValid(test_275_query); }

		private static final SubtypeQuery test_276_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_276() { testValid(test_276_query); }

		private static final SubtypeQuery test_277_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_277() { testValid(test_277_query); }

		private static final SubtypeQuery test_278_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_278() { testValid(test_278_query); }

		private static final SubtypeQuery test_279_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_279() { testValid(test_279_query); }

		private static final SubtypeQuery test_280_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("({int} | (any | any))"));
		@Test public void test_280() { testValid(test_280_query); }

		private static final SubtypeQuery test_281_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_281() { testValid(test_281_query); }

		private static final SubtypeQuery test_282_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_282() { testValid(test_282_query); }

		private static final SubtypeQuery test_283_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_283() { testValid(test_283_query); }

		private static final SubtypeQuery test_284_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_284() { testValid(test_284_query); }

		private static final SubtypeQuery test_285_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_285() { testValid(test_285_query); }

		private static final SubtypeQuery test_286_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_286() { testValid(test_286_query); }

		private static final SubtypeQuery test_287_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("(int | (any | int))"));
		@Test public void test_287() { testValid(test_287_query); }

		private static final SubtypeQuery test_288_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_288() { testValid(test_288_query); }

		private static final SubtypeQuery test_289_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_289() { testValid(test_289_query); }

		private static final SubtypeQuery test_290_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_290() { testValid(test_290_query); }

		private static final SubtypeQuery test_291_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_291() { testValid(test_291_query); }

		private static final SubtypeQuery test_292_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("(!any | (int | int))"));
		@Test public void test_292() { testValid(test_292_query); }

		private static final SubtypeQuery test_293_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_293() { testValid(test_293_query); }

		private static final SubtypeQuery test_294_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("(int | (any & any))"));
		@Test public void test_294() { testValid(test_294_query); }

		private static final SubtypeQuery test_295_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("(!any | (any & any))"));
		@Test public void test_295() { testValid(test_295_query); }

		private static final SubtypeQuery test_296_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_296() { testValid(test_296_query); }

		private static final SubtypeQuery test_297_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_297() { testValid(test_297_query); }

		private static final SubtypeQuery test_298_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_298() { testValid(test_298_query); }

		private static final SubtypeQuery test_299_query = createSubtypeQuery(parseWhiley("(any & any)"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_299() { testValid(test_299_query); }

		private static final SubtypeQuery test_300_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("!int"));
		@Test public void test_300() { testInvalid(test_300_query); }

		private static final SubtypeQuery test_301_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("(any | any)"));
		@Test public void test_301() { testInvalid(test_301_query); }

		private static final SubtypeQuery test_302_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("(any & any)"));
		@Test public void test_302() { testInvalid(test_302_query); }

		private static final SubtypeQuery test_303_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{{int, int}}"));
		@Test public void test_303() { testValid(test_303_query); }

		private static final SubtypeQuery test_304_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("!(int | int)"));
		@Test public void test_304() { testInvalid(test_304_query); }

		private static final SubtypeQuery test_305_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_305() { testInvalid(test_305_query); }

		private static final SubtypeQuery test_306_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_306() { testInvalid(test_306_query); }

		private static final SubtypeQuery test_307_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{{any}, int}"));
		@Test public void test_307() { testInvalid(test_307_query); }

		private static final SubtypeQuery test_308_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_308() { testInvalid(test_308_query); }

		private static final SubtypeQuery test_309_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{(any | int), int}"));
		@Test public void test_309() { testInvalid(test_309_query); }

		private static final SubtypeQuery test_310_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_310() { testInvalid(test_310_query); }

		private static final SubtypeQuery test_311_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{!any, {int}}"));
		@Test public void test_311() { testValid(test_311_query); }

		private static final SubtypeQuery test_312_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_312() { testInvalid(test_312_query); }

		private static final SubtypeQuery test_313_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_313() { testInvalid(test_313_query); }

		private static final SubtypeQuery test_314_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{any, !any}"));
		@Test public void test_314() { testValid(test_314_query); }

		private static final SubtypeQuery test_315_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{{any}, !int}"));
		@Test public void test_315() { testInvalid(test_315_query); }

		private static final SubtypeQuery test_316_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_316() { testInvalid(test_316_query); }

		private static final SubtypeQuery test_317_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_317() { testInvalid(test_317_query); }

		private static final SubtypeQuery test_318_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_318() { testInvalid(test_318_query); }

		private static final SubtypeQuery test_319_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_319() { testInvalid(test_319_query); }

		private static final SubtypeQuery test_320_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_320() { testInvalid(test_320_query); }

		private static final SubtypeQuery test_321_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_321() { testInvalid(test_321_query); }

		private static final SubtypeQuery test_322_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_322() { testInvalid(test_322_query); }

		private static final SubtypeQuery test_323_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_323() { testInvalid(test_323_query); }

		private static final SubtypeQuery test_324_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_324() { testInvalid(test_324_query); }

		private static final SubtypeQuery test_325_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_325() { testInvalid(test_325_query); }

		private static final SubtypeQuery test_326_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_326() { testInvalid(test_326_query); }

		private static final SubtypeQuery test_327_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_327() { testInvalid(test_327_query); }

		private static final SubtypeQuery test_328_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_328() { testInvalid(test_328_query); }

		private static final SubtypeQuery test_329_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_329() { testValid(test_329_query); }

		private static final SubtypeQuery test_330_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_330() { testInvalid(test_330_query); }

		private static final SubtypeQuery test_331_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_331() { testInvalid(test_331_query); }

		private static final SubtypeQuery test_332_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_332() { testInvalid(test_332_query); }

		private static final SubtypeQuery test_333_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_333() { testInvalid(test_333_query); }

		private static final SubtypeQuery test_334_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_334() { testInvalid(test_334_query); }

		private static final SubtypeQuery test_335_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_335() { testInvalid(test_335_query); }

		private static final SubtypeQuery test_336_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_336() { testInvalid(test_336_query); }

		private static final SubtypeQuery test_337_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_337() { testInvalid(test_337_query); }

		private static final SubtypeQuery test_338_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_338() { testInvalid(test_338_query); }

		private static final SubtypeQuery test_339_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_339() { testInvalid(test_339_query); }

		private static final SubtypeQuery test_340_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_340() { testInvalid(test_340_query); }

		private static final SubtypeQuery test_341_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_341() { testValid(test_341_query); }

		private static final SubtypeQuery test_342_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_342() { testInvalid(test_342_query); }

		private static final SubtypeQuery test_343_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_343() { testInvalid(test_343_query); }

		private static final SubtypeQuery test_344_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_344() { testInvalid(test_344_query); }

		private static final SubtypeQuery test_345_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_345() { testInvalid(test_345_query); }

		private static final SubtypeQuery test_346_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_346() { testInvalid(test_346_query); }

		private static final SubtypeQuery test_347_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_347() { testInvalid(test_347_query); }

		private static final SubtypeQuery test_348_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_348() { testInvalid(test_348_query); }

		private static final SubtypeQuery test_349_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_349() { testInvalid(test_349_query); }

		private static final SubtypeQuery test_350_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_350() { testInvalid(test_350_query); }

		private static final SubtypeQuery test_351_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_351() { testInvalid(test_351_query); }

		private static final SubtypeQuery test_352_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_352() { testInvalid(test_352_query); }

		private static final SubtypeQuery test_353_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_353() { testInvalid(test_353_query); }

		private static final SubtypeQuery test_354_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_354() { testInvalid(test_354_query); }

		private static final SubtypeQuery test_355_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_355() { testInvalid(test_355_query); }

		private static final SubtypeQuery test_356_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("(!any | any)"));
		@Test public void test_356() { testInvalid(test_356_query); }

		private static final SubtypeQuery test_357_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("({int, any} | any)"));
		@Test public void test_357() { testInvalid(test_357_query); }

		private static final SubtypeQuery test_358_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("({any, int} | any)"));
		@Test public void test_358() { testInvalid(test_358_query); }

		private static final SubtypeQuery test_359_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("((int & int) | any)"));
		@Test public void test_359() { testInvalid(test_359_query); }

		private static final SubtypeQuery test_360_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("({int, int} | int)"));
		@Test public void test_360() { testInvalid(test_360_query); }

		private static final SubtypeQuery test_361_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("((any | any) | int)"));
		@Test public void test_361() { testInvalid(test_361_query); }

		private static final SubtypeQuery test_362_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("((int | any) | int)"));
		@Test public void test_362() { testInvalid(test_362_query); }

		private static final SubtypeQuery test_363_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("(any | {any})"));
		@Test public void test_363() { testInvalid(test_363_query); }

		private static final SubtypeQuery test_364_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("(int | {any})"));
		@Test public void test_364() { testInvalid(test_364_query); }

		private static final SubtypeQuery test_365_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_365() { testInvalid(test_365_query); }

		private static final SubtypeQuery test_366_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("(any | {int})"));
		@Test public void test_366() { testInvalid(test_366_query); }

		private static final SubtypeQuery test_367_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_367() { testInvalid(test_367_query); }

		private static final SubtypeQuery test_368_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("(!int | !any)"));
		@Test public void test_368() { testInvalid(test_368_query); }

		private static final SubtypeQuery test_369_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_369() { testInvalid(test_369_query); }

		private static final SubtypeQuery test_370_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_370() { testInvalid(test_370_query); }

		private static final SubtypeQuery test_371_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("({int} | !int)"));
		@Test public void test_371() { testInvalid(test_371_query); }

		private static final SubtypeQuery test_372_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("(!any | !int)"));
		@Test public void test_372() { testInvalid(test_372_query); }

		private static final SubtypeQuery test_373_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_373() { testInvalid(test_373_query); }

		private static final SubtypeQuery test_374_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_374() { testInvalid(test_374_query); }

		private static final SubtypeQuery test_375_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_375() { testInvalid(test_375_query); }

		private static final SubtypeQuery test_376_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_376() { testInvalid(test_376_query); }

		private static final SubtypeQuery test_377_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_377() { testInvalid(test_377_query); }

		private static final SubtypeQuery test_378_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_378() { testInvalid(test_378_query); }

		private static final SubtypeQuery test_379_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_379() { testInvalid(test_379_query); }

		private static final SubtypeQuery test_380_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_380() { testInvalid(test_380_query); }

		private static final SubtypeQuery test_381_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_381() { testInvalid(test_381_query); }

		private static final SubtypeQuery test_382_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_382() { testInvalid(test_382_query); }

		private static final SubtypeQuery test_383_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_383() { testInvalid(test_383_query); }

		private static final SubtypeQuery test_384_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_384() { testInvalid(test_384_query); }

		private static final SubtypeQuery test_385_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_385() { testInvalid(test_385_query); }

		private static final SubtypeQuery test_386_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_386() { testInvalid(test_386_query); }

		private static final SubtypeQuery test_387_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("(int | (any | int))"));
		@Test public void test_387() { testInvalid(test_387_query); }

		private static final SubtypeQuery test_388_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_388() { testInvalid(test_388_query); }

		private static final SubtypeQuery test_389_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_389() { testInvalid(test_389_query); }

		private static final SubtypeQuery test_390_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_390() { testInvalid(test_390_query); }

		private static final SubtypeQuery test_391_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_391() { testInvalid(test_391_query); }

		private static final SubtypeQuery test_392_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_392() { testInvalid(test_392_query); }

		private static final SubtypeQuery test_393_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_393() { testInvalid(test_393_query); }

		private static final SubtypeQuery test_394_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("(int | (any & any))"));
		@Test public void test_394() { testInvalid(test_394_query); }

		private static final SubtypeQuery test_395_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_395() { testInvalid(test_395_query); }

		private static final SubtypeQuery test_396_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_396() { testInvalid(test_396_query); }

		private static final SubtypeQuery test_397_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_397() { testInvalid(test_397_query); }

		private static final SubtypeQuery test_398_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_398() { testInvalid(test_398_query); }

		private static final SubtypeQuery test_399_query = createSubtypeQuery(parseWhiley("{{int, int}}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_399() { testInvalid(test_399_query); }

		private static final SubtypeQuery test_400_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("!int"));
		@Test public void test_400() { testValid(test_400_query); }

		private static final SubtypeQuery test_401_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("(any | any)"));
		@Test public void test_401() { testInvalid(test_401_query); }

		private static final SubtypeQuery test_402_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("(any & any)"));
		@Test public void test_402() { testInvalid(test_402_query); }

		private static final SubtypeQuery test_403_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{{int, int}}"));
		@Test public void test_403() { testValid(test_403_query); }

		private static final SubtypeQuery test_404_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("!(int | int)"));
		@Test public void test_404() { testValid(test_404_query); }

		private static final SubtypeQuery test_405_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{{any, any}, any}"));
		@Test public void test_405() { testValid(test_405_query); }

		private static final SubtypeQuery test_406_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{{any, int}, any}"));
		@Test public void test_406() { testValid(test_406_query); }

		private static final SubtypeQuery test_407_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{{any}, int}"));
		@Test public void test_407() { testValid(test_407_query); }

		private static final SubtypeQuery test_408_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{{any, any}, int}"));
		@Test public void test_408() { testValid(test_408_query); }

		private static final SubtypeQuery test_409_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{(any | int), int}"));
		@Test public void test_409() { testValid(test_409_query); }

		private static final SubtypeQuery test_410_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_410() { testValid(test_410_query); }

		private static final SubtypeQuery test_411_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{!any, {int}}"));
		@Test public void test_411() { testValid(test_411_query); }

		private static final SubtypeQuery test_412_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_412() { testValid(test_412_query); }

		private static final SubtypeQuery test_413_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_413() { testValid(test_413_query); }

		private static final SubtypeQuery test_414_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{any, !any}"));
		@Test public void test_414() { testValid(test_414_query); }

		private static final SubtypeQuery test_415_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{{any}, !int}"));
		@Test public void test_415() { testValid(test_415_query); }

		private static final SubtypeQuery test_416_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_416() { testValid(test_416_query); }

		private static final SubtypeQuery test_417_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_417() { testValid(test_417_query); }

		private static final SubtypeQuery test_418_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{(int & int), !int}"));
		@Test public void test_418() { testValid(test_418_query); }

		private static final SubtypeQuery test_419_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_419() { testValid(test_419_query); }

		private static final SubtypeQuery test_420_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_420() { testValid(test_420_query); }

		private static final SubtypeQuery test_421_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_421() { testValid(test_421_query); }

		private static final SubtypeQuery test_422_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_422() { testValid(test_422_query); }

		private static final SubtypeQuery test_423_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_423() { testValid(test_423_query); }

		private static final SubtypeQuery test_424_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_424() { testValid(test_424_query); }

		private static final SubtypeQuery test_425_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_425() { testValid(test_425_query); }

		private static final SubtypeQuery test_426_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{any, {any, int}}"));
		@Test public void test_426() { testValid(test_426_query); }

		private static final SubtypeQuery test_427_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_427() { testValid(test_427_query); }

		private static final SubtypeQuery test_428_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_428() { testValid(test_428_query); }

		private static final SubtypeQuery test_429_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_429() { testValid(test_429_query); }

		private static final SubtypeQuery test_430_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_430() { testValid(test_430_query); }

		private static final SubtypeQuery test_431_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_431() { testValid(test_431_query); }

		private static final SubtypeQuery test_432_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_432() { testValid(test_432_query); }

		private static final SubtypeQuery test_433_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_433() { testValid(test_433_query); }

		private static final SubtypeQuery test_434_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_434() { testValid(test_434_query); }

		private static final SubtypeQuery test_435_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_435() { testValid(test_435_query); }

		private static final SubtypeQuery test_436_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_436() { testValid(test_436_query); }

		private static final SubtypeQuery test_437_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{int, (int | int)}"));
		@Test public void test_437() { testValid(test_437_query); }

		private static final SubtypeQuery test_438_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_438() { testValid(test_438_query); }

		private static final SubtypeQuery test_439_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{any, (any & any)}"));
		@Test public void test_439() { testValid(test_439_query); }

		private static final SubtypeQuery test_440_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_440() { testValid(test_440_query); }

		private static final SubtypeQuery test_441_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_441() { testValid(test_441_query); }

		private static final SubtypeQuery test_442_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_442() { testValid(test_442_query); }

		private static final SubtypeQuery test_443_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_443() { testValid(test_443_query); }

		private static final SubtypeQuery test_444_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_444() { testValid(test_444_query); }

		private static final SubtypeQuery test_445_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_445() { testValid(test_445_query); }

		private static final SubtypeQuery test_446_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_446() { testValid(test_446_query); }

		private static final SubtypeQuery test_447_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_447() { testValid(test_447_query); }

		private static final SubtypeQuery test_448_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{any, (any & int)}"));
		@Test public void test_448() { testValid(test_448_query); }

		private static final SubtypeQuery test_449_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_449() { testValid(test_449_query); }

		private static final SubtypeQuery test_450_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_450() { testValid(test_450_query); }

		private static final SubtypeQuery test_451_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_451() { testValid(test_451_query); }

		private static final SubtypeQuery test_452_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{int, (int & int)}"));
		@Test public void test_452() { testValid(test_452_query); }

		private static final SubtypeQuery test_453_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_453() { testValid(test_453_query); }

		private static final SubtypeQuery test_454_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_454() { testValid(test_454_query); }

		private static final SubtypeQuery test_455_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_455() { testValid(test_455_query); }

		private static final SubtypeQuery test_456_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("(!any | any)"));
		@Test public void test_456() { testInvalid(test_456_query); }

		private static final SubtypeQuery test_457_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("({int, any} | any)"));
		@Test public void test_457() { testInvalid(test_457_query); }

		private static final SubtypeQuery test_458_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("({any, int} | any)"));
		@Test public void test_458() { testInvalid(test_458_query); }

		private static final SubtypeQuery test_459_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("((int & int) | any)"));
		@Test public void test_459() { testInvalid(test_459_query); }

		private static final SubtypeQuery test_460_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("({int, int} | int)"));
		@Test public void test_460() { testInvalid(test_460_query); }

		private static final SubtypeQuery test_461_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("((any | any) | int)"));
		@Test public void test_461() { testInvalid(test_461_query); }

		private static final SubtypeQuery test_462_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("((int | any) | int)"));
		@Test public void test_462() { testInvalid(test_462_query); }

		private static final SubtypeQuery test_463_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("(any | {any})"));
		@Test public void test_463() { testInvalid(test_463_query); }

		private static final SubtypeQuery test_464_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("(int | {any})"));
		@Test public void test_464() { testInvalid(test_464_query); }

		private static final SubtypeQuery test_465_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("({any, any} | {any})"));
		@Test public void test_465() { testValid(test_465_query); }

		private static final SubtypeQuery test_466_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("(any | {int})"));
		@Test public void test_466() { testInvalid(test_466_query); }

		private static final SubtypeQuery test_467_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("((any | any) | {int})"));
		@Test public void test_467() { testInvalid(test_467_query); }

		private static final SubtypeQuery test_468_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("(!int | !any)"));
		@Test public void test_468() { testValid(test_468_query); }

		private static final SubtypeQuery test_469_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("({int, any} | !any)"));
		@Test public void test_469() { testValid(test_469_query); }

		private static final SubtypeQuery test_470_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("((any | any) | !any)"));
		@Test public void test_470() { testInvalid(test_470_query); }

		private static final SubtypeQuery test_471_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("({int} | !int)"));
		@Test public void test_471() { testValid(test_471_query); }

		private static final SubtypeQuery test_472_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("(!any | !int)"));
		@Test public void test_472() { testValid(test_472_query); }

		private static final SubtypeQuery test_473_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("(!int | {any, any})"));
		@Test public void test_473() { testValid(test_473_query); }

		private static final SubtypeQuery test_474_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_474() { testInvalid(test_474_query); }

		private static final SubtypeQuery test_475_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_475() { testInvalid(test_475_query); }

		private static final SubtypeQuery test_476_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_476() { testValid(test_476_query); }

		private static final SubtypeQuery test_477_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_477() { testInvalid(test_477_query); }

		private static final SubtypeQuery test_478_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_478() { testInvalid(test_478_query); }

		private static final SubtypeQuery test_479_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_479() { testInvalid(test_479_query); }

		private static final SubtypeQuery test_480_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("({int} | (any | any))"));
		@Test public void test_480() { testInvalid(test_480_query); }

		private static final SubtypeQuery test_481_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_481() { testInvalid(test_481_query); }

		private static final SubtypeQuery test_482_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_482() { testInvalid(test_482_query); }

		private static final SubtypeQuery test_483_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_483() { testInvalid(test_483_query); }

		private static final SubtypeQuery test_484_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_484() { testInvalid(test_484_query); }

		private static final SubtypeQuery test_485_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_485() { testInvalid(test_485_query); }

		private static final SubtypeQuery test_486_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_486() { testInvalid(test_486_query); }

		private static final SubtypeQuery test_487_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("(int | (any | int))"));
		@Test public void test_487() { testInvalid(test_487_query); }

		private static final SubtypeQuery test_488_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_488() { testInvalid(test_488_query); }

		private static final SubtypeQuery test_489_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_489() { testInvalid(test_489_query); }

		private static final SubtypeQuery test_490_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_490() { testInvalid(test_490_query); }

		private static final SubtypeQuery test_491_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_491() { testInvalid(test_491_query); }

		private static final SubtypeQuery test_492_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("(!any | (int | int))"));
		@Test public void test_492() { testInvalid(test_492_query); }

		private static final SubtypeQuery test_493_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_493() { testInvalid(test_493_query); }

		private static final SubtypeQuery test_494_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("(int | (any & any))"));
		@Test public void test_494() { testInvalid(test_494_query); }

		private static final SubtypeQuery test_495_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("(!any | (any & any))"));
		@Test public void test_495() { testInvalid(test_495_query); }

		private static final SubtypeQuery test_496_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_496() { testInvalid(test_496_query); }

		private static final SubtypeQuery test_497_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_497() { testInvalid(test_497_query); }

		private static final SubtypeQuery test_498_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_498() { testInvalid(test_498_query); }

		private static final SubtypeQuery test_499_query = createSubtypeQuery(parseWhiley("!(int | int)"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_499() { testInvalid(test_499_query); }

		private static final SubtypeQuery test_500_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("!int"));
		@Test public void test_500() { testInvalid(test_500_query); }

		private static final SubtypeQuery test_501_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("(any | any)"));
		@Test public void test_501() { testInvalid(test_501_query); }

		private static final SubtypeQuery test_502_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("(any & any)"));
		@Test public void test_502() { testInvalid(test_502_query); }

		private static final SubtypeQuery test_503_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{{int, int}}"));
		@Test public void test_503() { testInvalid(test_503_query); }

		private static final SubtypeQuery test_504_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("!(int | int)"));
		@Test public void test_504() { testInvalid(test_504_query); }

		private static final SubtypeQuery test_505_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_505() { testValid(test_505_query); }

		private static final SubtypeQuery test_506_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_506() { testValid(test_506_query); }

		private static final SubtypeQuery test_507_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{{any}, int}"));
		@Test public void test_507() { testInvalid(test_507_query); }

		private static final SubtypeQuery test_508_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_508() { testValid(test_508_query); }

		private static final SubtypeQuery test_509_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{(any | int), int}"));
		@Test public void test_509() { testInvalid(test_509_query); }

		private static final SubtypeQuery test_510_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_510() { testInvalid(test_510_query); }

		private static final SubtypeQuery test_511_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{!any, {int}}"));
		@Test public void test_511() { testValid(test_511_query); }

		private static final SubtypeQuery test_512_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_512() { testValid(test_512_query); }

		private static final SubtypeQuery test_513_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_513() { testInvalid(test_513_query); }

		private static final SubtypeQuery test_514_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{any, !any}"));
		@Test public void test_514() { testValid(test_514_query); }

		private static final SubtypeQuery test_515_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{{any}, !int}"));
		@Test public void test_515() { testInvalid(test_515_query); }

		private static final SubtypeQuery test_516_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_516() { testValid(test_516_query); }

		private static final SubtypeQuery test_517_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_517() { testValid(test_517_query); }

		private static final SubtypeQuery test_518_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_518() { testInvalid(test_518_query); }

		private static final SubtypeQuery test_519_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_519() { testInvalid(test_519_query); }

		private static final SubtypeQuery test_520_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_520() { testInvalid(test_520_query); }

		private static final SubtypeQuery test_521_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_521() { testInvalid(test_521_query); }

		private static final SubtypeQuery test_522_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_522() { testInvalid(test_522_query); }

		private static final SubtypeQuery test_523_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_523() { testValid(test_523_query); }

		private static final SubtypeQuery test_524_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_524() { testInvalid(test_524_query); }

		private static final SubtypeQuery test_525_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_525() { testInvalid(test_525_query); }

		private static final SubtypeQuery test_526_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_526() { testInvalid(test_526_query); }

		private static final SubtypeQuery test_527_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_527() { testInvalid(test_527_query); }

		private static final SubtypeQuery test_528_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_528() { testValid(test_528_query); }

		private static final SubtypeQuery test_529_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_529() { testValid(test_529_query); }

		private static final SubtypeQuery test_530_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_530() { testInvalid(test_530_query); }

		private static final SubtypeQuery test_531_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_531() { testInvalid(test_531_query); }

		private static final SubtypeQuery test_532_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_532() { testInvalid(test_532_query); }

		private static final SubtypeQuery test_533_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_533() { testInvalid(test_533_query); }

		private static final SubtypeQuery test_534_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_534() { testInvalid(test_534_query); }

		private static final SubtypeQuery test_535_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_535() { testInvalid(test_535_query); }

		private static final SubtypeQuery test_536_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_536() { testValid(test_536_query); }

		private static final SubtypeQuery test_537_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_537() { testInvalid(test_537_query); }

		private static final SubtypeQuery test_538_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_538() { testValid(test_538_query); }

		private static final SubtypeQuery test_539_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_539() { testInvalid(test_539_query); }

		private static final SubtypeQuery test_540_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_540() { testInvalid(test_540_query); }

		private static final SubtypeQuery test_541_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_541() { testValid(test_541_query); }

		private static final SubtypeQuery test_542_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_542() { testInvalid(test_542_query); }

		private static final SubtypeQuery test_543_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_543() { testInvalid(test_543_query); }

		private static final SubtypeQuery test_544_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_544() { testInvalid(test_544_query); }

		private static final SubtypeQuery test_545_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_545() { testValid(test_545_query); }

		private static final SubtypeQuery test_546_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_546() { testInvalid(test_546_query); }

		private static final SubtypeQuery test_547_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_547() { testInvalid(test_547_query); }

		private static final SubtypeQuery test_548_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_548() { testInvalid(test_548_query); }

		private static final SubtypeQuery test_549_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_549() { testInvalid(test_549_query); }

		private static final SubtypeQuery test_550_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_550() { testValid(test_550_query); }

		private static final SubtypeQuery test_551_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_551() { testValid(test_551_query); }

		private static final SubtypeQuery test_552_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_552() { testInvalid(test_552_query); }

		private static final SubtypeQuery test_553_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_553() { testInvalid(test_553_query); }

		private static final SubtypeQuery test_554_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_554() { testValid(test_554_query); }

		private static final SubtypeQuery test_555_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_555() { testInvalid(test_555_query); }

		private static final SubtypeQuery test_556_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("(!any | any)"));
		@Test public void test_556() { testInvalid(test_556_query); }

		private static final SubtypeQuery test_557_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("({int, any} | any)"));
		@Test public void test_557() { testInvalid(test_557_query); }

		private static final SubtypeQuery test_558_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("({any, int} | any)"));
		@Test public void test_558() { testInvalid(test_558_query); }

		private static final SubtypeQuery test_559_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("((int & int) | any)"));
		@Test public void test_559() { testInvalid(test_559_query); }

		private static final SubtypeQuery test_560_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("({int, int} | int)"));
		@Test public void test_560() { testInvalid(test_560_query); }

		private static final SubtypeQuery test_561_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("((any | any) | int)"));
		@Test public void test_561() { testInvalid(test_561_query); }

		private static final SubtypeQuery test_562_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("((int | any) | int)"));
		@Test public void test_562() { testInvalid(test_562_query); }

		private static final SubtypeQuery test_563_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("(any | {any})"));
		@Test public void test_563() { testInvalid(test_563_query); }

		private static final SubtypeQuery test_564_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("(int | {any})"));
		@Test public void test_564() { testInvalid(test_564_query); }

		private static final SubtypeQuery test_565_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_565() { testInvalid(test_565_query); }

		private static final SubtypeQuery test_566_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("(any | {int})"));
		@Test public void test_566() { testInvalid(test_566_query); }

		private static final SubtypeQuery test_567_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_567() { testInvalid(test_567_query); }

		private static final SubtypeQuery test_568_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("(!int | !any)"));
		@Test public void test_568() { testInvalid(test_568_query); }

		private static final SubtypeQuery test_569_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_569() { testInvalid(test_569_query); }

		private static final SubtypeQuery test_570_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_570() { testInvalid(test_570_query); }

		private static final SubtypeQuery test_571_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("({int} | !int)"));
		@Test public void test_571() { testInvalid(test_571_query); }

		private static final SubtypeQuery test_572_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("(!any | !int)"));
		@Test public void test_572() { testInvalid(test_572_query); }

		private static final SubtypeQuery test_573_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_573() { testInvalid(test_573_query); }

		private static final SubtypeQuery test_574_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_574() { testInvalid(test_574_query); }

		private static final SubtypeQuery test_575_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_575() { testInvalid(test_575_query); }

		private static final SubtypeQuery test_576_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_576() { testInvalid(test_576_query); }

		private static final SubtypeQuery test_577_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_577() { testInvalid(test_577_query); }

		private static final SubtypeQuery test_578_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_578() { testInvalid(test_578_query); }

		private static final SubtypeQuery test_579_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_579() { testInvalid(test_579_query); }

		private static final SubtypeQuery test_580_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_580() { testInvalid(test_580_query); }

		private static final SubtypeQuery test_581_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_581() { testInvalid(test_581_query); }

		private static final SubtypeQuery test_582_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_582() { testInvalid(test_582_query); }

		private static final SubtypeQuery test_583_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_583() { testInvalid(test_583_query); }

		private static final SubtypeQuery test_584_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_584() { testInvalid(test_584_query); }

		private static final SubtypeQuery test_585_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_585() { testInvalid(test_585_query); }

		private static final SubtypeQuery test_586_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_586() { testInvalid(test_586_query); }

		private static final SubtypeQuery test_587_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("(int | (any | int))"));
		@Test public void test_587() { testInvalid(test_587_query); }

		private static final SubtypeQuery test_588_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_588() { testInvalid(test_588_query); }

		private static final SubtypeQuery test_589_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_589() { testInvalid(test_589_query); }

		private static final SubtypeQuery test_590_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_590() { testInvalid(test_590_query); }

		private static final SubtypeQuery test_591_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_591() { testInvalid(test_591_query); }

		private static final SubtypeQuery test_592_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_592() { testInvalid(test_592_query); }

		private static final SubtypeQuery test_593_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_593() { testInvalid(test_593_query); }

		private static final SubtypeQuery test_594_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("(int | (any & any))"));
		@Test public void test_594() { testInvalid(test_594_query); }

		private static final SubtypeQuery test_595_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_595() { testInvalid(test_595_query); }

		private static final SubtypeQuery test_596_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_596() { testInvalid(test_596_query); }

		private static final SubtypeQuery test_597_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_597() { testInvalid(test_597_query); }

		private static final SubtypeQuery test_598_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_598() { testInvalid(test_598_query); }

		private static final SubtypeQuery test_599_query = createSubtypeQuery(parseWhiley("{{any, any}, any}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_599() { testInvalid(test_599_query); }

		private static final SubtypeQuery test_600_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("!int"));
		@Test public void test_600() { testInvalid(test_600_query); }

		private static final SubtypeQuery test_601_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("(any | any)"));
		@Test public void test_601() { testInvalid(test_601_query); }

		private static final SubtypeQuery test_602_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("(any & any)"));
		@Test public void test_602() { testInvalid(test_602_query); }

		private static final SubtypeQuery test_603_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{{int, int}}"));
		@Test public void test_603() { testInvalid(test_603_query); }

		private static final SubtypeQuery test_604_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("!(int | int)"));
		@Test public void test_604() { testInvalid(test_604_query); }

		private static final SubtypeQuery test_605_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_605() { testInvalid(test_605_query); }

		private static final SubtypeQuery test_606_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_606() { testValid(test_606_query); }

		private static final SubtypeQuery test_607_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{{any}, int}"));
		@Test public void test_607() { testInvalid(test_607_query); }

		private static final SubtypeQuery test_608_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_608() { testInvalid(test_608_query); }

		private static final SubtypeQuery test_609_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{(any | int), int}"));
		@Test public void test_609() { testInvalid(test_609_query); }

		private static final SubtypeQuery test_610_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_610() { testInvalid(test_610_query); }

		private static final SubtypeQuery test_611_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{!any, {int}}"));
		@Test public void test_611() { testValid(test_611_query); }

		private static final SubtypeQuery test_612_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_612() { testValid(test_612_query); }

		private static final SubtypeQuery test_613_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_613() { testInvalid(test_613_query); }

		private static final SubtypeQuery test_614_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{any, !any}"));
		@Test public void test_614() { testValid(test_614_query); }

		private static final SubtypeQuery test_615_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{{any}, !int}"));
		@Test public void test_615() { testInvalid(test_615_query); }

		private static final SubtypeQuery test_616_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_616() { testInvalid(test_616_query); }

		private static final SubtypeQuery test_617_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_617() { testValid(test_617_query); }

		private static final SubtypeQuery test_618_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_618() { testInvalid(test_618_query); }

		private static final SubtypeQuery test_619_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_619() { testInvalid(test_619_query); }

		private static final SubtypeQuery test_620_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_620() { testInvalid(test_620_query); }

		private static final SubtypeQuery test_621_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_621() { testInvalid(test_621_query); }

		private static final SubtypeQuery test_622_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_622() { testInvalid(test_622_query); }

		private static final SubtypeQuery test_623_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_623() { testInvalid(test_623_query); }

		private static final SubtypeQuery test_624_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_624() { testInvalid(test_624_query); }

		private static final SubtypeQuery test_625_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_625() { testInvalid(test_625_query); }

		private static final SubtypeQuery test_626_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_626() { testInvalid(test_626_query); }

		private static final SubtypeQuery test_627_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_627() { testInvalid(test_627_query); }

		private static final SubtypeQuery test_628_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_628() { testInvalid(test_628_query); }

		private static final SubtypeQuery test_629_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_629() { testValid(test_629_query); }

		private static final SubtypeQuery test_630_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_630() { testInvalid(test_630_query); }

		private static final SubtypeQuery test_631_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_631() { testInvalid(test_631_query); }

		private static final SubtypeQuery test_632_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_632() { testInvalid(test_632_query); }

		private static final SubtypeQuery test_633_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_633() { testInvalid(test_633_query); }

		private static final SubtypeQuery test_634_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_634() { testInvalid(test_634_query); }

		private static final SubtypeQuery test_635_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_635() { testInvalid(test_635_query); }

		private static final SubtypeQuery test_636_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_636() { testValid(test_636_query); }

		private static final SubtypeQuery test_637_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_637() { testInvalid(test_637_query); }

		private static final SubtypeQuery test_638_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_638() { testInvalid(test_638_query); }

		private static final SubtypeQuery test_639_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_639() { testInvalid(test_639_query); }

		private static final SubtypeQuery test_640_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_640() { testInvalid(test_640_query); }

		private static final SubtypeQuery test_641_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_641() { testValid(test_641_query); }

		private static final SubtypeQuery test_642_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_642() { testInvalid(test_642_query); }

		private static final SubtypeQuery test_643_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_643() { testInvalid(test_643_query); }

		private static final SubtypeQuery test_644_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_644() { testInvalid(test_644_query); }

		private static final SubtypeQuery test_645_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_645() { testValid(test_645_query); }

		private static final SubtypeQuery test_646_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_646() { testInvalid(test_646_query); }

		private static final SubtypeQuery test_647_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_647() { testInvalid(test_647_query); }

		private static final SubtypeQuery test_648_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_648() { testInvalid(test_648_query); }

		private static final SubtypeQuery test_649_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_649() { testInvalid(test_649_query); }

		private static final SubtypeQuery test_650_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_650() { testInvalid(test_650_query); }

		private static final SubtypeQuery test_651_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_651() { testInvalid(test_651_query); }

		private static final SubtypeQuery test_652_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_652() { testInvalid(test_652_query); }

		private static final SubtypeQuery test_653_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_653() { testInvalid(test_653_query); }

		private static final SubtypeQuery test_654_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_654() { testValid(test_654_query); }

		private static final SubtypeQuery test_655_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_655() { testInvalid(test_655_query); }

		private static final SubtypeQuery test_656_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("(!any | any)"));
		@Test public void test_656() { testInvalid(test_656_query); }

		private static final SubtypeQuery test_657_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("({int, any} | any)"));
		@Test public void test_657() { testInvalid(test_657_query); }

		private static final SubtypeQuery test_658_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("({any, int} | any)"));
		@Test public void test_658() { testInvalid(test_658_query); }

		private static final SubtypeQuery test_659_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("((int & int) | any)"));
		@Test public void test_659() { testInvalid(test_659_query); }

		private static final SubtypeQuery test_660_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("({int, int} | int)"));
		@Test public void test_660() { testInvalid(test_660_query); }

		private static final SubtypeQuery test_661_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("((any | any) | int)"));
		@Test public void test_661() { testInvalid(test_661_query); }

		private static final SubtypeQuery test_662_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("((int | any) | int)"));
		@Test public void test_662() { testInvalid(test_662_query); }

		private static final SubtypeQuery test_663_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("(any | {any})"));
		@Test public void test_663() { testInvalid(test_663_query); }

		private static final SubtypeQuery test_664_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("(int | {any})"));
		@Test public void test_664() { testInvalid(test_664_query); }

		private static final SubtypeQuery test_665_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_665() { testInvalid(test_665_query); }

		private static final SubtypeQuery test_666_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("(any | {int})"));
		@Test public void test_666() { testInvalid(test_666_query); }

		private static final SubtypeQuery test_667_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_667() { testInvalid(test_667_query); }

		private static final SubtypeQuery test_668_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("(!int | !any)"));
		@Test public void test_668() { testInvalid(test_668_query); }

		private static final SubtypeQuery test_669_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_669() { testInvalid(test_669_query); }

		private static final SubtypeQuery test_670_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_670() { testInvalid(test_670_query); }

		private static final SubtypeQuery test_671_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("({int} | !int)"));
		@Test public void test_671() { testInvalid(test_671_query); }

		private static final SubtypeQuery test_672_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("(!any | !int)"));
		@Test public void test_672() { testInvalid(test_672_query); }

		private static final SubtypeQuery test_673_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_673() { testInvalid(test_673_query); }

		private static final SubtypeQuery test_674_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_674() { testInvalid(test_674_query); }

		private static final SubtypeQuery test_675_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_675() { testInvalid(test_675_query); }

		private static final SubtypeQuery test_676_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_676() { testInvalid(test_676_query); }

		private static final SubtypeQuery test_677_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_677() { testInvalid(test_677_query); }

		private static final SubtypeQuery test_678_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_678() { testInvalid(test_678_query); }

		private static final SubtypeQuery test_679_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_679() { testInvalid(test_679_query); }

		private static final SubtypeQuery test_680_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_680() { testInvalid(test_680_query); }

		private static final SubtypeQuery test_681_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_681() { testInvalid(test_681_query); }

		private static final SubtypeQuery test_682_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_682() { testInvalid(test_682_query); }

		private static final SubtypeQuery test_683_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_683() { testInvalid(test_683_query); }

		private static final SubtypeQuery test_684_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_684() { testInvalid(test_684_query); }

		private static final SubtypeQuery test_685_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_685() { testInvalid(test_685_query); }

		private static final SubtypeQuery test_686_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_686() { testInvalid(test_686_query); }

		private static final SubtypeQuery test_687_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("(int | (any | int))"));
		@Test public void test_687() { testInvalid(test_687_query); }

		private static final SubtypeQuery test_688_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_688() { testInvalid(test_688_query); }

		private static final SubtypeQuery test_689_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_689() { testInvalid(test_689_query); }

		private static final SubtypeQuery test_690_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_690() { testInvalid(test_690_query); }

		private static final SubtypeQuery test_691_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_691() { testInvalid(test_691_query); }

		private static final SubtypeQuery test_692_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_692() { testInvalid(test_692_query); }

		private static final SubtypeQuery test_693_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_693() { testInvalid(test_693_query); }

		private static final SubtypeQuery test_694_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("(int | (any & any))"));
		@Test public void test_694() { testInvalid(test_694_query); }

		private static final SubtypeQuery test_695_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_695() { testInvalid(test_695_query); }

		private static final SubtypeQuery test_696_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_696() { testInvalid(test_696_query); }

		private static final SubtypeQuery test_697_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_697() { testInvalid(test_697_query); }

		private static final SubtypeQuery test_698_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_698() { testInvalid(test_698_query); }

		private static final SubtypeQuery test_699_query = createSubtypeQuery(parseWhiley("{{any, int}, any}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_699() { testInvalid(test_699_query); }

		private static final SubtypeQuery test_700_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("!int"));
		@Test public void test_700() { testInvalid(test_700_query); }

		private static final SubtypeQuery test_701_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("(any | any)"));
		@Test public void test_701() { testInvalid(test_701_query); }

		private static final SubtypeQuery test_702_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("(any & any)"));
		@Test public void test_702() { testInvalid(test_702_query); }

		private static final SubtypeQuery test_703_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{{int, int}}"));
		@Test public void test_703() { testInvalid(test_703_query); }

		private static final SubtypeQuery test_704_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("!(int | int)"));
		@Test public void test_704() { testInvalid(test_704_query); }

		private static final SubtypeQuery test_705_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_705() { testInvalid(test_705_query); }

		private static final SubtypeQuery test_706_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_706() { testInvalid(test_706_query); }

		private static final SubtypeQuery test_707_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{{any}, int}"));
		@Test public void test_707() { testValid(test_707_query); }

		private static final SubtypeQuery test_708_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_708() { testInvalid(test_708_query); }

		private static final SubtypeQuery test_709_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{(any | int), int}"));
		@Test public void test_709() { testInvalid(test_709_query); }

		private static final SubtypeQuery test_710_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_710() { testInvalid(test_710_query); }

		private static final SubtypeQuery test_711_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{!any, {int}}"));
		@Test public void test_711() { testValid(test_711_query); }

		private static final SubtypeQuery test_712_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_712() { testInvalid(test_712_query); }

		private static final SubtypeQuery test_713_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_713() { testInvalid(test_713_query); }

		private static final SubtypeQuery test_714_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{any, !any}"));
		@Test public void test_714() { testValid(test_714_query); }

		private static final SubtypeQuery test_715_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{{any}, !int}"));
		@Test public void test_715() { testInvalid(test_715_query); }

		private static final SubtypeQuery test_716_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_716() { testInvalid(test_716_query); }

		private static final SubtypeQuery test_717_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_717() { testInvalid(test_717_query); }

		private static final SubtypeQuery test_718_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_718() { testInvalid(test_718_query); }

		private static final SubtypeQuery test_719_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_719() { testInvalid(test_719_query); }

		private static final SubtypeQuery test_720_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_720() { testInvalid(test_720_query); }

		private static final SubtypeQuery test_721_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_721() { testInvalid(test_721_query); }

		private static final SubtypeQuery test_722_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_722() { testInvalid(test_722_query); }

		private static final SubtypeQuery test_723_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_723() { testInvalid(test_723_query); }

		private static final SubtypeQuery test_724_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_724() { testInvalid(test_724_query); }

		private static final SubtypeQuery test_725_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_725() { testInvalid(test_725_query); }

		private static final SubtypeQuery test_726_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_726() { testInvalid(test_726_query); }

		private static final SubtypeQuery test_727_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_727() { testInvalid(test_727_query); }

		private static final SubtypeQuery test_728_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_728() { testInvalid(test_728_query); }

		private static final SubtypeQuery test_729_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_729() { testValid(test_729_query); }

		private static final SubtypeQuery test_730_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_730() { testInvalid(test_730_query); }

		private static final SubtypeQuery test_731_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_731() { testInvalid(test_731_query); }

		private static final SubtypeQuery test_732_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_732() { testInvalid(test_732_query); }

		private static final SubtypeQuery test_733_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_733() { testInvalid(test_733_query); }

		private static final SubtypeQuery test_734_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_734() { testInvalid(test_734_query); }

		private static final SubtypeQuery test_735_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_735() { testInvalid(test_735_query); }

		private static final SubtypeQuery test_736_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_736() { testInvalid(test_736_query); }

		private static final SubtypeQuery test_737_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_737() { testInvalid(test_737_query); }

		private static final SubtypeQuery test_738_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_738() { testInvalid(test_738_query); }

		private static final SubtypeQuery test_739_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_739() { testInvalid(test_739_query); }

		private static final SubtypeQuery test_740_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_740() { testInvalid(test_740_query); }

		private static final SubtypeQuery test_741_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_741() { testValid(test_741_query); }

		private static final SubtypeQuery test_742_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_742() { testInvalid(test_742_query); }

		private static final SubtypeQuery test_743_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_743() { testInvalid(test_743_query); }

		private static final SubtypeQuery test_744_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_744() { testValid(test_744_query); }

		private static final SubtypeQuery test_745_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_745() { testInvalid(test_745_query); }

		private static final SubtypeQuery test_746_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_746() { testInvalid(test_746_query); }

		private static final SubtypeQuery test_747_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_747() { testInvalid(test_747_query); }

		private static final SubtypeQuery test_748_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_748() { testInvalid(test_748_query); }

		private static final SubtypeQuery test_749_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_749() { testValid(test_749_query); }

		private static final SubtypeQuery test_750_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_750() { testInvalid(test_750_query); }

		private static final SubtypeQuery test_751_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_751() { testInvalid(test_751_query); }

		private static final SubtypeQuery test_752_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_752() { testInvalid(test_752_query); }

		private static final SubtypeQuery test_753_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_753() { testValid(test_753_query); }

		private static final SubtypeQuery test_754_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_754() { testInvalid(test_754_query); }

		private static final SubtypeQuery test_755_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_755() { testInvalid(test_755_query); }

		private static final SubtypeQuery test_756_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("(!any | any)"));
		@Test public void test_756() { testInvalid(test_756_query); }

		private static final SubtypeQuery test_757_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("({int, any} | any)"));
		@Test public void test_757() { testInvalid(test_757_query); }

		private static final SubtypeQuery test_758_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("({any, int} | any)"));
		@Test public void test_758() { testInvalid(test_758_query); }

		private static final SubtypeQuery test_759_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("((int & int) | any)"));
		@Test public void test_759() { testInvalid(test_759_query); }

		private static final SubtypeQuery test_760_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("({int, int} | int)"));
		@Test public void test_760() { testInvalid(test_760_query); }

		private static final SubtypeQuery test_761_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("((any | any) | int)"));
		@Test public void test_761() { testInvalid(test_761_query); }

		private static final SubtypeQuery test_762_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("((int | any) | int)"));
		@Test public void test_762() { testInvalid(test_762_query); }

		private static final SubtypeQuery test_763_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("(any | {any})"));
		@Test public void test_763() { testInvalid(test_763_query); }

		private static final SubtypeQuery test_764_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("(int | {any})"));
		@Test public void test_764() { testInvalid(test_764_query); }

		private static final SubtypeQuery test_765_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_765() { testInvalid(test_765_query); }

		private static final SubtypeQuery test_766_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("(any | {int})"));
		@Test public void test_766() { testInvalid(test_766_query); }

		private static final SubtypeQuery test_767_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_767() { testInvalid(test_767_query); }

		private static final SubtypeQuery test_768_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("(!int | !any)"));
		@Test public void test_768() { testInvalid(test_768_query); }

		private static final SubtypeQuery test_769_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_769() { testInvalid(test_769_query); }

		private static final SubtypeQuery test_770_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_770() { testInvalid(test_770_query); }

		private static final SubtypeQuery test_771_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("({int} | !int)"));
		@Test public void test_771() { testInvalid(test_771_query); }

		private static final SubtypeQuery test_772_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("(!any | !int)"));
		@Test public void test_772() { testInvalid(test_772_query); }

		private static final SubtypeQuery test_773_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_773() { testInvalid(test_773_query); }

		private static final SubtypeQuery test_774_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_774() { testInvalid(test_774_query); }

		private static final SubtypeQuery test_775_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_775() { testInvalid(test_775_query); }

		private static final SubtypeQuery test_776_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_776() { testInvalid(test_776_query); }

		private static final SubtypeQuery test_777_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_777() { testInvalid(test_777_query); }

		private static final SubtypeQuery test_778_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_778() { testInvalid(test_778_query); }

		private static final SubtypeQuery test_779_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_779() { testInvalid(test_779_query); }

		private static final SubtypeQuery test_780_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_780() { testInvalid(test_780_query); }

		private static final SubtypeQuery test_781_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_781() { testInvalid(test_781_query); }

		private static final SubtypeQuery test_782_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_782() { testInvalid(test_782_query); }

		private static final SubtypeQuery test_783_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_783() { testInvalid(test_783_query); }

		private static final SubtypeQuery test_784_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_784() { testInvalid(test_784_query); }

		private static final SubtypeQuery test_785_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_785() { testInvalid(test_785_query); }

		private static final SubtypeQuery test_786_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_786() { testInvalid(test_786_query); }

		private static final SubtypeQuery test_787_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("(int | (any | int))"));
		@Test public void test_787() { testInvalid(test_787_query); }

		private static final SubtypeQuery test_788_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_788() { testInvalid(test_788_query); }

		private static final SubtypeQuery test_789_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_789() { testInvalid(test_789_query); }

		private static final SubtypeQuery test_790_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_790() { testInvalid(test_790_query); }

		private static final SubtypeQuery test_791_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_791() { testInvalid(test_791_query); }

		private static final SubtypeQuery test_792_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_792() { testInvalid(test_792_query); }

		private static final SubtypeQuery test_793_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_793() { testInvalid(test_793_query); }

		private static final SubtypeQuery test_794_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("(int | (any & any))"));
		@Test public void test_794() { testInvalid(test_794_query); }

		private static final SubtypeQuery test_795_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_795() { testInvalid(test_795_query); }

		private static final SubtypeQuery test_796_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_796() { testInvalid(test_796_query); }

		private static final SubtypeQuery test_797_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_797() { testInvalid(test_797_query); }

		private static final SubtypeQuery test_798_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_798() { testInvalid(test_798_query); }

		private static final SubtypeQuery test_799_query = createSubtypeQuery(parseWhiley("{{any}, int}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_799() { testInvalid(test_799_query); }

		private static final SubtypeQuery test_800_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("!int"));
		@Test public void test_800() { testInvalid(test_800_query); }

		private static final SubtypeQuery test_801_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("(any | any)"));
		@Test public void test_801() { testInvalid(test_801_query); }

		private static final SubtypeQuery test_802_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("(any & any)"));
		@Test public void test_802() { testInvalid(test_802_query); }

		private static final SubtypeQuery test_803_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{{int, int}}"));
		@Test public void test_803() { testInvalid(test_803_query); }

		private static final SubtypeQuery test_804_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("!(int | int)"));
		@Test public void test_804() { testInvalid(test_804_query); }

		private static final SubtypeQuery test_805_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_805() { testInvalid(test_805_query); }

		private static final SubtypeQuery test_806_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_806() { testInvalid(test_806_query); }

		private static final SubtypeQuery test_807_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{{any}, int}"));
		@Test public void test_807() { testInvalid(test_807_query); }

		private static final SubtypeQuery test_808_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_808() { testValid(test_808_query); }

		private static final SubtypeQuery test_809_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{(any | int), int}"));
		@Test public void test_809() { testInvalid(test_809_query); }

		private static final SubtypeQuery test_810_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_810() { testInvalid(test_810_query); }

		private static final SubtypeQuery test_811_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{!any, {int}}"));
		@Test public void test_811() { testValid(test_811_query); }

		private static final SubtypeQuery test_812_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_812() { testInvalid(test_812_query); }

		private static final SubtypeQuery test_813_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_813() { testInvalid(test_813_query); }

		private static final SubtypeQuery test_814_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{any, !any}"));
		@Test public void test_814() { testValid(test_814_query); }

		private static final SubtypeQuery test_815_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{{any}, !int}"));
		@Test public void test_815() { testInvalid(test_815_query); }

		private static final SubtypeQuery test_816_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_816() { testInvalid(test_816_query); }

		private static final SubtypeQuery test_817_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_817() { testInvalid(test_817_query); }

		private static final SubtypeQuery test_818_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_818() { testInvalid(test_818_query); }

		private static final SubtypeQuery test_819_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_819() { testInvalid(test_819_query); }

		private static final SubtypeQuery test_820_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_820() { testInvalid(test_820_query); }

		private static final SubtypeQuery test_821_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_821() { testInvalid(test_821_query); }

		private static final SubtypeQuery test_822_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_822() { testInvalid(test_822_query); }

		private static final SubtypeQuery test_823_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_823() { testInvalid(test_823_query); }

		private static final SubtypeQuery test_824_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_824() { testInvalid(test_824_query); }

		private static final SubtypeQuery test_825_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_825() { testInvalid(test_825_query); }

		private static final SubtypeQuery test_826_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_826() { testInvalid(test_826_query); }

		private static final SubtypeQuery test_827_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_827() { testInvalid(test_827_query); }

		private static final SubtypeQuery test_828_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_828() { testInvalid(test_828_query); }

		private static final SubtypeQuery test_829_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_829() { testValid(test_829_query); }

		private static final SubtypeQuery test_830_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_830() { testInvalid(test_830_query); }

		private static final SubtypeQuery test_831_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_831() { testInvalid(test_831_query); }

		private static final SubtypeQuery test_832_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_832() { testInvalid(test_832_query); }

		private static final SubtypeQuery test_833_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_833() { testInvalid(test_833_query); }

		private static final SubtypeQuery test_834_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_834() { testInvalid(test_834_query); }

		private static final SubtypeQuery test_835_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_835() { testInvalid(test_835_query); }

		private static final SubtypeQuery test_836_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_836() { testInvalid(test_836_query); }

		private static final SubtypeQuery test_837_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_837() { testInvalid(test_837_query); }

		private static final SubtypeQuery test_838_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_838() { testValid(test_838_query); }

		private static final SubtypeQuery test_839_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_839() { testInvalid(test_839_query); }

		private static final SubtypeQuery test_840_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_840() { testInvalid(test_840_query); }

		private static final SubtypeQuery test_841_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_841() { testValid(test_841_query); }

		private static final SubtypeQuery test_842_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_842() { testInvalid(test_842_query); }

		private static final SubtypeQuery test_843_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_843() { testInvalid(test_843_query); }

		private static final SubtypeQuery test_844_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_844() { testInvalid(test_844_query); }

		private static final SubtypeQuery test_845_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_845() { testValid(test_845_query); }

		private static final SubtypeQuery test_846_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_846() { testInvalid(test_846_query); }

		private static final SubtypeQuery test_847_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_847() { testInvalid(test_847_query); }

		private static final SubtypeQuery test_848_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_848() { testInvalid(test_848_query); }

		private static final SubtypeQuery test_849_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_849() { testInvalid(test_849_query); }

		private static final SubtypeQuery test_850_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_850() { testValid(test_850_query); }

		private static final SubtypeQuery test_851_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_851() { testValid(test_851_query); }

		private static final SubtypeQuery test_852_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_852() { testInvalid(test_852_query); }

		private static final SubtypeQuery test_853_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_853() { testInvalid(test_853_query); }

		private static final SubtypeQuery test_854_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_854() { testValid(test_854_query); }

		private static final SubtypeQuery test_855_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_855() { testInvalid(test_855_query); }

		private static final SubtypeQuery test_856_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("(!any | any)"));
		@Test public void test_856() { testInvalid(test_856_query); }

		private static final SubtypeQuery test_857_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("({int, any} | any)"));
		@Test public void test_857() { testInvalid(test_857_query); }

		private static final SubtypeQuery test_858_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("({any, int} | any)"));
		@Test public void test_858() { testInvalid(test_858_query); }

		private static final SubtypeQuery test_859_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("((int & int) | any)"));
		@Test public void test_859() { testInvalid(test_859_query); }

		private static final SubtypeQuery test_860_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("({int, int} | int)"));
		@Test public void test_860() { testInvalid(test_860_query); }

		private static final SubtypeQuery test_861_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("((any | any) | int)"));
		@Test public void test_861() { testInvalid(test_861_query); }

		private static final SubtypeQuery test_862_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("((int | any) | int)"));
		@Test public void test_862() { testInvalid(test_862_query); }

		private static final SubtypeQuery test_863_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("(any | {any})"));
		@Test public void test_863() { testInvalid(test_863_query); }

		private static final SubtypeQuery test_864_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("(int | {any})"));
		@Test public void test_864() { testInvalid(test_864_query); }

		private static final SubtypeQuery test_865_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_865() { testInvalid(test_865_query); }

		private static final SubtypeQuery test_866_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("(any | {int})"));
		@Test public void test_866() { testInvalid(test_866_query); }

		private static final SubtypeQuery test_867_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_867() { testInvalid(test_867_query); }

		private static final SubtypeQuery test_868_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("(!int | !any)"));
		@Test public void test_868() { testInvalid(test_868_query); }

		private static final SubtypeQuery test_869_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_869() { testInvalid(test_869_query); }

		private static final SubtypeQuery test_870_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_870() { testInvalid(test_870_query); }

		private static final SubtypeQuery test_871_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("({int} | !int)"));
		@Test public void test_871() { testInvalid(test_871_query); }

		private static final SubtypeQuery test_872_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("(!any | !int)"));
		@Test public void test_872() { testInvalid(test_872_query); }

		private static final SubtypeQuery test_873_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_873() { testInvalid(test_873_query); }

		private static final SubtypeQuery test_874_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_874() { testInvalid(test_874_query); }

		private static final SubtypeQuery test_875_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_875() { testInvalid(test_875_query); }

		private static final SubtypeQuery test_876_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_876() { testInvalid(test_876_query); }

		private static final SubtypeQuery test_877_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_877() { testInvalid(test_877_query); }

		private static final SubtypeQuery test_878_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_878() { testInvalid(test_878_query); }

		private static final SubtypeQuery test_879_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_879() { testInvalid(test_879_query); }

		private static final SubtypeQuery test_880_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_880() { testInvalid(test_880_query); }

		private static final SubtypeQuery test_881_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_881() { testInvalid(test_881_query); }

		private static final SubtypeQuery test_882_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_882() { testInvalid(test_882_query); }

		private static final SubtypeQuery test_883_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_883() { testInvalid(test_883_query); }

		private static final SubtypeQuery test_884_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_884() { testInvalid(test_884_query); }

		private static final SubtypeQuery test_885_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_885() { testInvalid(test_885_query); }

		private static final SubtypeQuery test_886_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_886() { testInvalid(test_886_query); }

		private static final SubtypeQuery test_887_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("(int | (any | int))"));
		@Test public void test_887() { testInvalid(test_887_query); }

		private static final SubtypeQuery test_888_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_888() { testInvalid(test_888_query); }

		private static final SubtypeQuery test_889_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_889() { testInvalid(test_889_query); }

		private static final SubtypeQuery test_890_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_890() { testInvalid(test_890_query); }

		private static final SubtypeQuery test_891_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_891() { testInvalid(test_891_query); }

		private static final SubtypeQuery test_892_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_892() { testInvalid(test_892_query); }

		private static final SubtypeQuery test_893_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_893() { testInvalid(test_893_query); }

		private static final SubtypeQuery test_894_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("(int | (any & any))"));
		@Test public void test_894() { testInvalid(test_894_query); }

		private static final SubtypeQuery test_895_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_895() { testInvalid(test_895_query); }

		private static final SubtypeQuery test_896_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_896() { testInvalid(test_896_query); }

		private static final SubtypeQuery test_897_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_897() { testInvalid(test_897_query); }

		private static final SubtypeQuery test_898_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_898() { testInvalid(test_898_query); }

		private static final SubtypeQuery test_899_query = createSubtypeQuery(parseWhiley("{{any, any}, int}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_899() { testInvalid(test_899_query); }

		private static final SubtypeQuery test_900_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("!int"));
		@Test public void test_900() { testInvalid(test_900_query); }

		private static final SubtypeQuery test_901_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("(any | any)"));
		@Test public void test_901() { testInvalid(test_901_query); }

		private static final SubtypeQuery test_902_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("(any & any)"));
		@Test public void test_902() { testInvalid(test_902_query); }

		private static final SubtypeQuery test_903_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{{int, int}}"));
		@Test public void test_903() { testInvalid(test_903_query); }

		private static final SubtypeQuery test_904_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("!(int | int)"));
		@Test public void test_904() { testInvalid(test_904_query); }

		private static final SubtypeQuery test_905_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_905() { testInvalid(test_905_query); }

		private static final SubtypeQuery test_906_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_906() { testInvalid(test_906_query); }

		private static final SubtypeQuery test_907_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{{any}, int}"));
		@Test public void test_907() { testValid(test_907_query); }

		private static final SubtypeQuery test_908_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_908() { testValid(test_908_query); }

		private static final SubtypeQuery test_909_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{(any | int), int}"));
		@Test public void test_909() { testValid(test_909_query); }

		private static final SubtypeQuery test_910_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_910() { testInvalid(test_910_query); }

		private static final SubtypeQuery test_911_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{!any, {int}}"));
		@Test public void test_911() { testValid(test_911_query); }

		private static final SubtypeQuery test_912_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_912() { testInvalid(test_912_query); }

		private static final SubtypeQuery test_913_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_913() { testInvalid(test_913_query); }

		private static final SubtypeQuery test_914_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{any, !any}"));
		@Test public void test_914() { testValid(test_914_query); }

		private static final SubtypeQuery test_915_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{{any}, !int}"));
		@Test public void test_915() { testInvalid(test_915_query); }

		private static final SubtypeQuery test_916_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_916() { testInvalid(test_916_query); }

		private static final SubtypeQuery test_917_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_917() { testInvalid(test_917_query); }

		private static final SubtypeQuery test_918_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_918() { testInvalid(test_918_query); }

		private static final SubtypeQuery test_919_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_919() { testInvalid(test_919_query); }

		private static final SubtypeQuery test_920_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_920() { testInvalid(test_920_query); }

		private static final SubtypeQuery test_921_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_921() { testInvalid(test_921_query); }

		private static final SubtypeQuery test_922_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_922() { testInvalid(test_922_query); }

		private static final SubtypeQuery test_923_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_923() { testInvalid(test_923_query); }

		private static final SubtypeQuery test_924_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_924() { testInvalid(test_924_query); }

		private static final SubtypeQuery test_925_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_925() { testInvalid(test_925_query); }

		private static final SubtypeQuery test_926_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_926() { testInvalid(test_926_query); }

		private static final SubtypeQuery test_927_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_927() { testInvalid(test_927_query); }

		private static final SubtypeQuery test_928_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_928() { testInvalid(test_928_query); }

		private static final SubtypeQuery test_929_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_929() { testValid(test_929_query); }

		private static final SubtypeQuery test_930_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_930() { testInvalid(test_930_query); }

		private static final SubtypeQuery test_931_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_931() { testInvalid(test_931_query); }

		private static final SubtypeQuery test_932_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_932() { testInvalid(test_932_query); }

		private static final SubtypeQuery test_933_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_933() { testInvalid(test_933_query); }

		private static final SubtypeQuery test_934_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_934() { testInvalid(test_934_query); }

		private static final SubtypeQuery test_935_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_935() { testInvalid(test_935_query); }

		private static final SubtypeQuery test_936_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_936() { testInvalid(test_936_query); }

		private static final SubtypeQuery test_937_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_937() { testValid(test_937_query); }

		private static final SubtypeQuery test_938_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_938() { testValid(test_938_query); }

		private static final SubtypeQuery test_939_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_939() { testInvalid(test_939_query); }

		private static final SubtypeQuery test_940_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_940() { testInvalid(test_940_query); }

		private static final SubtypeQuery test_941_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_941() { testValid(test_941_query); }

		private static final SubtypeQuery test_942_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_942() { testInvalid(test_942_query); }

		private static final SubtypeQuery test_943_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_943() { testInvalid(test_943_query); }

		private static final SubtypeQuery test_944_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_944() { testValid(test_944_query); }

		private static final SubtypeQuery test_945_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_945() { testValid(test_945_query); }

		private static final SubtypeQuery test_946_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_946() { testValid(test_946_query); }

		private static final SubtypeQuery test_947_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_947() { testValid(test_947_query); }

		private static final SubtypeQuery test_948_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_948() { testValid(test_948_query); }

		private static final SubtypeQuery test_949_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_949() { testValid(test_949_query); }

		private static final SubtypeQuery test_950_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_950() { testValid(test_950_query); }

		private static final SubtypeQuery test_951_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_951() { testValid(test_951_query); }

		private static final SubtypeQuery test_952_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_952() { testValid(test_952_query); }

		private static final SubtypeQuery test_953_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_953() { testValid(test_953_query); }

		private static final SubtypeQuery test_954_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_954() { testValid(test_954_query); }

		private static final SubtypeQuery test_955_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_955() { testValid(test_955_query); }

		private static final SubtypeQuery test_956_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("(!any | any)"));
		@Test public void test_956() { testInvalid(test_956_query); }

		private static final SubtypeQuery test_957_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("({int, any} | any)"));
		@Test public void test_957() { testInvalid(test_957_query); }

		private static final SubtypeQuery test_958_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("({any, int} | any)"));
		@Test public void test_958() { testInvalid(test_958_query); }

		private static final SubtypeQuery test_959_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("((int & int) | any)"));
		@Test public void test_959() { testInvalid(test_959_query); }

		private static final SubtypeQuery test_960_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("({int, int} | int)"));
		@Test public void test_960() { testInvalid(test_960_query); }

		private static final SubtypeQuery test_961_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("((any | any) | int)"));
		@Test public void test_961() { testInvalid(test_961_query); }

		private static final SubtypeQuery test_962_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("((int | any) | int)"));
		@Test public void test_962() { testInvalid(test_962_query); }

		private static final SubtypeQuery test_963_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("(any | {any})"));
		@Test public void test_963() { testInvalid(test_963_query); }

		private static final SubtypeQuery test_964_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("(int | {any})"));
		@Test public void test_964() { testInvalid(test_964_query); }

		private static final SubtypeQuery test_965_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_965() { testInvalid(test_965_query); }

		private static final SubtypeQuery test_966_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("(any | {int})"));
		@Test public void test_966() { testInvalid(test_966_query); }

		private static final SubtypeQuery test_967_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_967() { testInvalid(test_967_query); }

		private static final SubtypeQuery test_968_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("(!int | !any)"));
		@Test public void test_968() { testInvalid(test_968_query); }

		private static final SubtypeQuery test_969_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_969() { testInvalid(test_969_query); }

		private static final SubtypeQuery test_970_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_970() { testInvalid(test_970_query); }

		private static final SubtypeQuery test_971_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("({int} | !int)"));
		@Test public void test_971() { testInvalid(test_971_query); }

		private static final SubtypeQuery test_972_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("(!any | !int)"));
		@Test public void test_972() { testInvalid(test_972_query); }

		private static final SubtypeQuery test_973_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_973() { testInvalid(test_973_query); }

		private static final SubtypeQuery test_974_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_974() { testInvalid(test_974_query); }

		private static final SubtypeQuery test_975_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_975() { testInvalid(test_975_query); }

		private static final SubtypeQuery test_976_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_976() { testValid(test_976_query); }

		private static final SubtypeQuery test_977_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_977() { testInvalid(test_977_query); }

		private static final SubtypeQuery test_978_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_978() { testInvalid(test_978_query); }

		private static final SubtypeQuery test_979_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_979() { testInvalid(test_979_query); }

		private static final SubtypeQuery test_980_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_980() { testInvalid(test_980_query); }

		private static final SubtypeQuery test_981_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_981() { testInvalid(test_981_query); }

		private static final SubtypeQuery test_982_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_982() { testInvalid(test_982_query); }

		private static final SubtypeQuery test_983_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_983() { testInvalid(test_983_query); }

		private static final SubtypeQuery test_984_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_984() { testInvalid(test_984_query); }

		private static final SubtypeQuery test_985_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_985() { testInvalid(test_985_query); }

		private static final SubtypeQuery test_986_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_986() { testInvalid(test_986_query); }

		private static final SubtypeQuery test_987_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("(int | (any | int))"));
		@Test public void test_987() { testInvalid(test_987_query); }

		private static final SubtypeQuery test_988_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_988() { testInvalid(test_988_query); }

		private static final SubtypeQuery test_989_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_989() { testInvalid(test_989_query); }

		private static final SubtypeQuery test_990_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_990() { testInvalid(test_990_query); }

		private static final SubtypeQuery test_991_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_991() { testInvalid(test_991_query); }

		private static final SubtypeQuery test_992_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_992() { testInvalid(test_992_query); }

		private static final SubtypeQuery test_993_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_993() { testInvalid(test_993_query); }

		private static final SubtypeQuery test_994_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("(int | (any & any))"));
		@Test public void test_994() { testInvalid(test_994_query); }

		private static final SubtypeQuery test_995_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_995() { testInvalid(test_995_query); }

		private static final SubtypeQuery test_996_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_996() { testInvalid(test_996_query); }

		private static final SubtypeQuery test_997_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_997() { testInvalid(test_997_query); }

		private static final SubtypeQuery test_998_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_998() { testInvalid(test_998_query); }

		private static final SubtypeQuery test_999_query = createSubtypeQuery(parseWhiley("{(any | int), int}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_999() { testInvalid(test_999_query); }

	}
	public static class Part_1 {
		private static final SubtypeQuery test_1000_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("!int"));
		@Test public void test_1000() { testInvalid(test_1000_query); }

		private static final SubtypeQuery test_1001_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("(any | any)"));
		@Test public void test_1001() { testInvalid(test_1001_query); }

		private static final SubtypeQuery test_1002_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("(any & any)"));
		@Test public void test_1002() { testInvalid(test_1002_query); }

		private static final SubtypeQuery test_1003_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{{int, int}}"));
		@Test public void test_1003() { testInvalid(test_1003_query); }

		private static final SubtypeQuery test_1004_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("!(int | int)"));
		@Test public void test_1004() { testInvalid(test_1004_query); }

		private static final SubtypeQuery test_1005_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_1005() { testInvalid(test_1005_query); }

		private static final SubtypeQuery test_1006_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_1006() { testInvalid(test_1006_query); }

		private static final SubtypeQuery test_1007_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{{any}, int}"));
		@Test public void test_1007() { testInvalid(test_1007_query); }

		private static final SubtypeQuery test_1008_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_1008() { testInvalid(test_1008_query); }

		private static final SubtypeQuery test_1009_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{(any | int), int}"));
		@Test public void test_1009() { testInvalid(test_1009_query); }

		private static final SubtypeQuery test_1010_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_1010() { testValid(test_1010_query); }

		private static final SubtypeQuery test_1011_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{!any, {int}}"));
		@Test public void test_1011() { testValid(test_1011_query); }

		private static final SubtypeQuery test_1012_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_1012() { testValid(test_1012_query); }

		private static final SubtypeQuery test_1013_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_1013() { testValid(test_1013_query); }

		private static final SubtypeQuery test_1014_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{any, !any}"));
		@Test public void test_1014() { testValid(test_1014_query); }

		private static final SubtypeQuery test_1015_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{{any}, !int}"));
		@Test public void test_1015() { testInvalid(test_1015_query); }

		private static final SubtypeQuery test_1016_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_1016() { testInvalid(test_1016_query); }

		private static final SubtypeQuery test_1017_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_1017() { testInvalid(test_1017_query); }

		private static final SubtypeQuery test_1018_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_1018() { testInvalid(test_1018_query); }

		private static final SubtypeQuery test_1019_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_1019() { testInvalid(test_1019_query); }

		private static final SubtypeQuery test_1020_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_1020() { testInvalid(test_1020_query); }

		private static final SubtypeQuery test_1021_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_1021() { testInvalid(test_1021_query); }

		private static final SubtypeQuery test_1022_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_1022() { testInvalid(test_1022_query); }

		private static final SubtypeQuery test_1023_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_1023() { testInvalid(test_1023_query); }

		private static final SubtypeQuery test_1024_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_1024() { testInvalid(test_1024_query); }

		private static final SubtypeQuery test_1025_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_1025() { testInvalid(test_1025_query); }

		private static final SubtypeQuery test_1026_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_1026() { testInvalid(test_1026_query); }

		private static final SubtypeQuery test_1027_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_1027() { testInvalid(test_1027_query); }

		private static final SubtypeQuery test_1028_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_1028() { testInvalid(test_1028_query); }

		private static final SubtypeQuery test_1029_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_1029() { testValid(test_1029_query); }

		private static final SubtypeQuery test_1030_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_1030() { testInvalid(test_1030_query); }

		private static final SubtypeQuery test_1031_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_1031() { testInvalid(test_1031_query); }

		private static final SubtypeQuery test_1032_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_1032() { testInvalid(test_1032_query); }

		private static final SubtypeQuery test_1033_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_1033() { testInvalid(test_1033_query); }

		private static final SubtypeQuery test_1034_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_1034() { testInvalid(test_1034_query); }

		private static final SubtypeQuery test_1035_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_1035() { testInvalid(test_1035_query); }

		private static final SubtypeQuery test_1036_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_1036() { testInvalid(test_1036_query); }

		private static final SubtypeQuery test_1037_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_1037() { testInvalid(test_1037_query); }

		private static final SubtypeQuery test_1038_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_1038() { testInvalid(test_1038_query); }

		private static final SubtypeQuery test_1039_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_1039() { testInvalid(test_1039_query); }

		private static final SubtypeQuery test_1040_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_1040() { testInvalid(test_1040_query); }

		private static final SubtypeQuery test_1041_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_1041() { testValid(test_1041_query); }

		private static final SubtypeQuery test_1042_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_1042() { testInvalid(test_1042_query); }

		private static final SubtypeQuery test_1043_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_1043() { testInvalid(test_1043_query); }

		private static final SubtypeQuery test_1044_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_1044() { testInvalid(test_1044_query); }

		private static final SubtypeQuery test_1045_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_1045() { testInvalid(test_1045_query); }

		private static final SubtypeQuery test_1046_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_1046() { testInvalid(test_1046_query); }

		private static final SubtypeQuery test_1047_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_1047() { testInvalid(test_1047_query); }

		private static final SubtypeQuery test_1048_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_1048() { testInvalid(test_1048_query); }

		private static final SubtypeQuery test_1049_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_1049() { testInvalid(test_1049_query); }

		private static final SubtypeQuery test_1050_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_1050() { testInvalid(test_1050_query); }

		private static final SubtypeQuery test_1051_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_1051() { testInvalid(test_1051_query); }

		private static final SubtypeQuery test_1052_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_1052() { testInvalid(test_1052_query); }

		private static final SubtypeQuery test_1053_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_1053() { testInvalid(test_1053_query); }

		private static final SubtypeQuery test_1054_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_1054() { testInvalid(test_1054_query); }

		private static final SubtypeQuery test_1055_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_1055() { testInvalid(test_1055_query); }

		private static final SubtypeQuery test_1056_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("(!any | any)"));
		@Test public void test_1056() { testInvalid(test_1056_query); }

		private static final SubtypeQuery test_1057_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("({int, any} | any)"));
		@Test public void test_1057() { testInvalid(test_1057_query); }

		private static final SubtypeQuery test_1058_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("({any, int} | any)"));
		@Test public void test_1058() { testInvalid(test_1058_query); }

		private static final SubtypeQuery test_1059_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("((int & int) | any)"));
		@Test public void test_1059() { testInvalid(test_1059_query); }

		private static final SubtypeQuery test_1060_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("({int, int} | int)"));
		@Test public void test_1060() { testInvalid(test_1060_query); }

		private static final SubtypeQuery test_1061_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("((any | any) | int)"));
		@Test public void test_1061() { testInvalid(test_1061_query); }

		private static final SubtypeQuery test_1062_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("((int | any) | int)"));
		@Test public void test_1062() { testInvalid(test_1062_query); }

		private static final SubtypeQuery test_1063_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("(any | {any})"));
		@Test public void test_1063() { testInvalid(test_1063_query); }

		private static final SubtypeQuery test_1064_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("(int | {any})"));
		@Test public void test_1064() { testInvalid(test_1064_query); }

		private static final SubtypeQuery test_1065_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_1065() { testInvalid(test_1065_query); }

		private static final SubtypeQuery test_1066_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("(any | {int})"));
		@Test public void test_1066() { testInvalid(test_1066_query); }

		private static final SubtypeQuery test_1067_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_1067() { testInvalid(test_1067_query); }

		private static final SubtypeQuery test_1068_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("(!int | !any)"));
		@Test public void test_1068() { testInvalid(test_1068_query); }

		private static final SubtypeQuery test_1069_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_1069() { testInvalid(test_1069_query); }

		private static final SubtypeQuery test_1070_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_1070() { testInvalid(test_1070_query); }

		private static final SubtypeQuery test_1071_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("({int} | !int)"));
		@Test public void test_1071() { testInvalid(test_1071_query); }

		private static final SubtypeQuery test_1072_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("(!any | !int)"));
		@Test public void test_1072() { testInvalid(test_1072_query); }

		private static final SubtypeQuery test_1073_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_1073() { testInvalid(test_1073_query); }

		private static final SubtypeQuery test_1074_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_1074() { testInvalid(test_1074_query); }

		private static final SubtypeQuery test_1075_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_1075() { testInvalid(test_1075_query); }

		private static final SubtypeQuery test_1076_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_1076() { testInvalid(test_1076_query); }

		private static final SubtypeQuery test_1077_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_1077() { testInvalid(test_1077_query); }

		private static final SubtypeQuery test_1078_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_1078() { testInvalid(test_1078_query); }

		private static final SubtypeQuery test_1079_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_1079() { testInvalid(test_1079_query); }

		private static final SubtypeQuery test_1080_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_1080() { testInvalid(test_1080_query); }

		private static final SubtypeQuery test_1081_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_1081() { testInvalid(test_1081_query); }

		private static final SubtypeQuery test_1082_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_1082() { testInvalid(test_1082_query); }

		private static final SubtypeQuery test_1083_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_1083() { testInvalid(test_1083_query); }

		private static final SubtypeQuery test_1084_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_1084() { testInvalid(test_1084_query); }

		private static final SubtypeQuery test_1085_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_1085() { testInvalid(test_1085_query); }

		private static final SubtypeQuery test_1086_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_1086() { testInvalid(test_1086_query); }

		private static final SubtypeQuery test_1087_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("(int | (any | int))"));
		@Test public void test_1087() { testInvalid(test_1087_query); }

		private static final SubtypeQuery test_1088_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_1088() { testInvalid(test_1088_query); }

		private static final SubtypeQuery test_1089_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_1089() { testInvalid(test_1089_query); }

		private static final SubtypeQuery test_1090_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_1090() { testInvalid(test_1090_query); }

		private static final SubtypeQuery test_1091_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_1091() { testInvalid(test_1091_query); }

		private static final SubtypeQuery test_1092_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_1092() { testInvalid(test_1092_query); }

		private static final SubtypeQuery test_1093_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_1093() { testInvalid(test_1093_query); }

		private static final SubtypeQuery test_1094_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("(int | (any & any))"));
		@Test public void test_1094() { testInvalid(test_1094_query); }

		private static final SubtypeQuery test_1095_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_1095() { testInvalid(test_1095_query); }

		private static final SubtypeQuery test_1096_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_1096() { testInvalid(test_1096_query); }

		private static final SubtypeQuery test_1097_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_1097() { testInvalid(test_1097_query); }

		private static final SubtypeQuery test_1098_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_1098() { testInvalid(test_1098_query); }

		private static final SubtypeQuery test_1099_query = createSubtypeQuery(parseWhiley("{(any | any), {any}}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_1099() { testInvalid(test_1099_query); }

		private static final SubtypeQuery test_1100_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("!int"));
		@Test public void test_1100() { testInvalid(test_1100_query); }

		private static final SubtypeQuery test_1101_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("(any | any)"));
		@Test public void test_1101() { testInvalid(test_1101_query); }

		private static final SubtypeQuery test_1102_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("(any & any)"));
		@Test public void test_1102() { testInvalid(test_1102_query); }

		private static final SubtypeQuery test_1103_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{{int, int}}"));
		@Test public void test_1103() { testInvalid(test_1103_query); }

		private static final SubtypeQuery test_1104_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("!(int | int)"));
		@Test public void test_1104() { testInvalid(test_1104_query); }

		private static final SubtypeQuery test_1105_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_1105() { testInvalid(test_1105_query); }

		private static final SubtypeQuery test_1106_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_1106() { testInvalid(test_1106_query); }

		private static final SubtypeQuery test_1107_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{{any}, int}"));
		@Test public void test_1107() { testInvalid(test_1107_query); }

		private static final SubtypeQuery test_1108_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_1108() { testInvalid(test_1108_query); }

		private static final SubtypeQuery test_1109_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{(any | int), int}"));
		@Test public void test_1109() { testInvalid(test_1109_query); }

		private static final SubtypeQuery test_1110_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_1110() { testInvalid(test_1110_query); }

		private static final SubtypeQuery test_1111_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{!any, {int}}"));
		@Test public void test_1111() { testValid(test_1111_query); }

		private static final SubtypeQuery test_1112_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_1112() { testInvalid(test_1112_query); }

		private static final SubtypeQuery test_1113_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_1113() { testInvalid(test_1113_query); }

		private static final SubtypeQuery test_1114_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{any, !any}"));
		@Test public void test_1114() { testValid(test_1114_query); }

		private static final SubtypeQuery test_1115_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{{any}, !int}"));
		@Test public void test_1115() { testInvalid(test_1115_query); }

		private static final SubtypeQuery test_1116_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_1116() { testInvalid(test_1116_query); }

		private static final SubtypeQuery test_1117_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_1117() { testInvalid(test_1117_query); }

		private static final SubtypeQuery test_1118_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_1118() { testInvalid(test_1118_query); }

		private static final SubtypeQuery test_1119_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_1119() { testInvalid(test_1119_query); }

		private static final SubtypeQuery test_1120_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_1120() { testInvalid(test_1120_query); }

		private static final SubtypeQuery test_1121_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_1121() { testInvalid(test_1121_query); }

		private static final SubtypeQuery test_1122_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_1122() { testInvalid(test_1122_query); }

		private static final SubtypeQuery test_1123_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_1123() { testInvalid(test_1123_query); }

		private static final SubtypeQuery test_1124_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_1124() { testInvalid(test_1124_query); }

		private static final SubtypeQuery test_1125_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_1125() { testInvalid(test_1125_query); }

		private static final SubtypeQuery test_1126_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_1126() { testInvalid(test_1126_query); }

		private static final SubtypeQuery test_1127_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_1127() { testInvalid(test_1127_query); }

		private static final SubtypeQuery test_1128_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_1128() { testInvalid(test_1128_query); }

		private static final SubtypeQuery test_1129_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_1129() { testValid(test_1129_query); }

		private static final SubtypeQuery test_1130_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_1130() { testInvalid(test_1130_query); }

		private static final SubtypeQuery test_1131_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_1131() { testInvalid(test_1131_query); }

		private static final SubtypeQuery test_1132_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_1132() { testInvalid(test_1132_query); }

		private static final SubtypeQuery test_1133_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_1133() { testInvalid(test_1133_query); }

		private static final SubtypeQuery test_1134_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_1134() { testInvalid(test_1134_query); }

		private static final SubtypeQuery test_1135_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_1135() { testInvalid(test_1135_query); }

		private static final SubtypeQuery test_1136_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_1136() { testInvalid(test_1136_query); }

		private static final SubtypeQuery test_1137_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_1137() { testInvalid(test_1137_query); }

		private static final SubtypeQuery test_1138_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_1138() { testInvalid(test_1138_query); }

		private static final SubtypeQuery test_1139_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_1139() { testInvalid(test_1139_query); }

		private static final SubtypeQuery test_1140_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_1140() { testInvalid(test_1140_query); }

		private static final SubtypeQuery test_1141_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_1141() { testValid(test_1141_query); }

		private static final SubtypeQuery test_1142_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_1142() { testInvalid(test_1142_query); }

		private static final SubtypeQuery test_1143_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_1143() { testInvalid(test_1143_query); }

		private static final SubtypeQuery test_1144_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_1144() { testInvalid(test_1144_query); }

		private static final SubtypeQuery test_1145_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_1145() { testInvalid(test_1145_query); }

		private static final SubtypeQuery test_1146_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_1146() { testInvalid(test_1146_query); }

		private static final SubtypeQuery test_1147_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_1147() { testInvalid(test_1147_query); }

		private static final SubtypeQuery test_1148_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_1148() { testInvalid(test_1148_query); }

		private static final SubtypeQuery test_1149_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_1149() { testInvalid(test_1149_query); }

		private static final SubtypeQuery test_1150_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_1150() { testInvalid(test_1150_query); }

		private static final SubtypeQuery test_1151_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_1151() { testInvalid(test_1151_query); }

		private static final SubtypeQuery test_1152_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_1152() { testInvalid(test_1152_query); }

		private static final SubtypeQuery test_1153_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_1153() { testInvalid(test_1153_query); }

		private static final SubtypeQuery test_1154_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_1154() { testInvalid(test_1154_query); }

		private static final SubtypeQuery test_1155_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_1155() { testInvalid(test_1155_query); }

		private static final SubtypeQuery test_1156_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("(!any | any)"));
		@Test public void test_1156() { testInvalid(test_1156_query); }

		private static final SubtypeQuery test_1157_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("({int, any} | any)"));
		@Test public void test_1157() { testInvalid(test_1157_query); }

		private static final SubtypeQuery test_1158_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("({any, int} | any)"));
		@Test public void test_1158() { testInvalid(test_1158_query); }

		private static final SubtypeQuery test_1159_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("((int & int) | any)"));
		@Test public void test_1159() { testInvalid(test_1159_query); }

		private static final SubtypeQuery test_1160_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("({int, int} | int)"));
		@Test public void test_1160() { testInvalid(test_1160_query); }

		private static final SubtypeQuery test_1161_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("((any | any) | int)"));
		@Test public void test_1161() { testInvalid(test_1161_query); }

		private static final SubtypeQuery test_1162_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("((int | any) | int)"));
		@Test public void test_1162() { testInvalid(test_1162_query); }

		private static final SubtypeQuery test_1163_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("(any | {any})"));
		@Test public void test_1163() { testInvalid(test_1163_query); }

		private static final SubtypeQuery test_1164_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("(int | {any})"));
		@Test public void test_1164() { testInvalid(test_1164_query); }

		private static final SubtypeQuery test_1165_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_1165() { testInvalid(test_1165_query); }

		private static final SubtypeQuery test_1166_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("(any | {int})"));
		@Test public void test_1166() { testInvalid(test_1166_query); }

		private static final SubtypeQuery test_1167_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_1167() { testInvalid(test_1167_query); }

		private static final SubtypeQuery test_1168_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("(!int | !any)"));
		@Test public void test_1168() { testInvalid(test_1168_query); }

		private static final SubtypeQuery test_1169_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_1169() { testInvalid(test_1169_query); }

		private static final SubtypeQuery test_1170_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_1170() { testInvalid(test_1170_query); }

		private static final SubtypeQuery test_1171_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("({int} | !int)"));
		@Test public void test_1171() { testInvalid(test_1171_query); }

		private static final SubtypeQuery test_1172_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("(!any | !int)"));
		@Test public void test_1172() { testInvalid(test_1172_query); }

		private static final SubtypeQuery test_1173_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_1173() { testInvalid(test_1173_query); }

		private static final SubtypeQuery test_1174_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_1174() { testInvalid(test_1174_query); }

		private static final SubtypeQuery test_1175_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_1175() { testInvalid(test_1175_query); }

		private static final SubtypeQuery test_1176_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_1176() { testInvalid(test_1176_query); }

		private static final SubtypeQuery test_1177_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_1177() { testInvalid(test_1177_query); }

		private static final SubtypeQuery test_1178_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_1178() { testInvalid(test_1178_query); }

		private static final SubtypeQuery test_1179_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_1179() { testInvalid(test_1179_query); }

		private static final SubtypeQuery test_1180_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_1180() { testInvalid(test_1180_query); }

		private static final SubtypeQuery test_1181_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_1181() { testInvalid(test_1181_query); }

		private static final SubtypeQuery test_1182_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_1182() { testInvalid(test_1182_query); }

		private static final SubtypeQuery test_1183_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_1183() { testInvalid(test_1183_query); }

		private static final SubtypeQuery test_1184_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_1184() { testInvalid(test_1184_query); }

		private static final SubtypeQuery test_1185_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_1185() { testInvalid(test_1185_query); }

		private static final SubtypeQuery test_1186_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_1186() { testInvalid(test_1186_query); }

		private static final SubtypeQuery test_1187_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("(int | (any | int))"));
		@Test public void test_1187() { testInvalid(test_1187_query); }

		private static final SubtypeQuery test_1188_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_1188() { testInvalid(test_1188_query); }

		private static final SubtypeQuery test_1189_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_1189() { testInvalid(test_1189_query); }

		private static final SubtypeQuery test_1190_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_1190() { testInvalid(test_1190_query); }

		private static final SubtypeQuery test_1191_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_1191() { testInvalid(test_1191_query); }

		private static final SubtypeQuery test_1192_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_1192() { testInvalid(test_1192_query); }

		private static final SubtypeQuery test_1193_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_1193() { testInvalid(test_1193_query); }

		private static final SubtypeQuery test_1194_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("(int | (any & any))"));
		@Test public void test_1194() { testInvalid(test_1194_query); }

		private static final SubtypeQuery test_1195_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_1195() { testInvalid(test_1195_query); }

		private static final SubtypeQuery test_1196_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_1196() { testInvalid(test_1196_query); }

		private static final SubtypeQuery test_1197_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_1197() { testInvalid(test_1197_query); }

		private static final SubtypeQuery test_1198_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_1198() { testInvalid(test_1198_query); }

		private static final SubtypeQuery test_1199_query = createSubtypeQuery(parseWhiley("{!any, {int}}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_1199() { testInvalid(test_1199_query); }

		private static final SubtypeQuery test_1200_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("!int"));
		@Test public void test_1200() { testInvalid(test_1200_query); }

		private static final SubtypeQuery test_1201_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("(any | any)"));
		@Test public void test_1201() { testInvalid(test_1201_query); }

		private static final SubtypeQuery test_1202_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("(any & any)"));
		@Test public void test_1202() { testInvalid(test_1202_query); }

		private static final SubtypeQuery test_1203_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{{int, int}}"));
		@Test public void test_1203() { testInvalid(test_1203_query); }

		private static final SubtypeQuery test_1204_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("!(int | int)"));
		@Test public void test_1204() { testInvalid(test_1204_query); }

		private static final SubtypeQuery test_1205_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_1205() { testInvalid(test_1205_query); }

		private static final SubtypeQuery test_1206_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_1206() { testInvalid(test_1206_query); }

		private static final SubtypeQuery test_1207_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{{any}, int}"));
		@Test public void test_1207() { testInvalid(test_1207_query); }

		private static final SubtypeQuery test_1208_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_1208() { testInvalid(test_1208_query); }

		private static final SubtypeQuery test_1209_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{(any | int), int}"));
		@Test public void test_1209() { testInvalid(test_1209_query); }

		private static final SubtypeQuery test_1210_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_1210() { testInvalid(test_1210_query); }

		private static final SubtypeQuery test_1211_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{!any, {int}}"));
		@Test public void test_1211() { testValid(test_1211_query); }

		private static final SubtypeQuery test_1212_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_1212() { testValid(test_1212_query); }

		private static final SubtypeQuery test_1213_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_1213() { testInvalid(test_1213_query); }

		private static final SubtypeQuery test_1214_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{any, !any}"));
		@Test public void test_1214() { testValid(test_1214_query); }

		private static final SubtypeQuery test_1215_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{{any}, !int}"));
		@Test public void test_1215() { testInvalid(test_1215_query); }

		private static final SubtypeQuery test_1216_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_1216() { testInvalid(test_1216_query); }

		private static final SubtypeQuery test_1217_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_1217() { testInvalid(test_1217_query); }

		private static final SubtypeQuery test_1218_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_1218() { testInvalid(test_1218_query); }

		private static final SubtypeQuery test_1219_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_1219() { testInvalid(test_1219_query); }

		private static final SubtypeQuery test_1220_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_1220() { testInvalid(test_1220_query); }

		private static final SubtypeQuery test_1221_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_1221() { testInvalid(test_1221_query); }

		private static final SubtypeQuery test_1222_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_1222() { testInvalid(test_1222_query); }

		private static final SubtypeQuery test_1223_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_1223() { testInvalid(test_1223_query); }

		private static final SubtypeQuery test_1224_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_1224() { testInvalid(test_1224_query); }

		private static final SubtypeQuery test_1225_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_1225() { testInvalid(test_1225_query); }

		private static final SubtypeQuery test_1226_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_1226() { testInvalid(test_1226_query); }

		private static final SubtypeQuery test_1227_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_1227() { testInvalid(test_1227_query); }

		private static final SubtypeQuery test_1228_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_1228() { testInvalid(test_1228_query); }

		private static final SubtypeQuery test_1229_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_1229() { testValid(test_1229_query); }

		private static final SubtypeQuery test_1230_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_1230() { testInvalid(test_1230_query); }

		private static final SubtypeQuery test_1231_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_1231() { testInvalid(test_1231_query); }

		private static final SubtypeQuery test_1232_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_1232() { testInvalid(test_1232_query); }

		private static final SubtypeQuery test_1233_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_1233() { testInvalid(test_1233_query); }

		private static final SubtypeQuery test_1234_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_1234() { testInvalid(test_1234_query); }

		private static final SubtypeQuery test_1235_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_1235() { testInvalid(test_1235_query); }

		private static final SubtypeQuery test_1236_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_1236() { testInvalid(test_1236_query); }

		private static final SubtypeQuery test_1237_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_1237() { testInvalid(test_1237_query); }

		private static final SubtypeQuery test_1238_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_1238() { testInvalid(test_1238_query); }

		private static final SubtypeQuery test_1239_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_1239() { testInvalid(test_1239_query); }

		private static final SubtypeQuery test_1240_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_1240() { testInvalid(test_1240_query); }

		private static final SubtypeQuery test_1241_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_1241() { testValid(test_1241_query); }

		private static final SubtypeQuery test_1242_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_1242() { testInvalid(test_1242_query); }

		private static final SubtypeQuery test_1243_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_1243() { testInvalid(test_1243_query); }

		private static final SubtypeQuery test_1244_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_1244() { testInvalid(test_1244_query); }

		private static final SubtypeQuery test_1245_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_1245() { testInvalid(test_1245_query); }

		private static final SubtypeQuery test_1246_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_1246() { testInvalid(test_1246_query); }

		private static final SubtypeQuery test_1247_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_1247() { testInvalid(test_1247_query); }

		private static final SubtypeQuery test_1248_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_1248() { testInvalid(test_1248_query); }

		private static final SubtypeQuery test_1249_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_1249() { testInvalid(test_1249_query); }

		private static final SubtypeQuery test_1250_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_1250() { testInvalid(test_1250_query); }

		private static final SubtypeQuery test_1251_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_1251() { testInvalid(test_1251_query); }

		private static final SubtypeQuery test_1252_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_1252() { testInvalid(test_1252_query); }

		private static final SubtypeQuery test_1253_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_1253() { testInvalid(test_1253_query); }

		private static final SubtypeQuery test_1254_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_1254() { testInvalid(test_1254_query); }

		private static final SubtypeQuery test_1255_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_1255() { testInvalid(test_1255_query); }

		private static final SubtypeQuery test_1256_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("(!any | any)"));
		@Test public void test_1256() { testInvalid(test_1256_query); }

		private static final SubtypeQuery test_1257_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("({int, any} | any)"));
		@Test public void test_1257() { testInvalid(test_1257_query); }

		private static final SubtypeQuery test_1258_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("({any, int} | any)"));
		@Test public void test_1258() { testInvalid(test_1258_query); }

		private static final SubtypeQuery test_1259_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("((int & int) | any)"));
		@Test public void test_1259() { testInvalid(test_1259_query); }

		private static final SubtypeQuery test_1260_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("({int, int} | int)"));
		@Test public void test_1260() { testInvalid(test_1260_query); }

		private static final SubtypeQuery test_1261_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("((any | any) | int)"));
		@Test public void test_1261() { testInvalid(test_1261_query); }

		private static final SubtypeQuery test_1262_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("((int | any) | int)"));
		@Test public void test_1262() { testInvalid(test_1262_query); }

		private static final SubtypeQuery test_1263_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("(any | {any})"));
		@Test public void test_1263() { testInvalid(test_1263_query); }

		private static final SubtypeQuery test_1264_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("(int | {any})"));
		@Test public void test_1264() { testInvalid(test_1264_query); }

		private static final SubtypeQuery test_1265_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_1265() { testInvalid(test_1265_query); }

		private static final SubtypeQuery test_1266_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("(any | {int})"));
		@Test public void test_1266() { testInvalid(test_1266_query); }

		private static final SubtypeQuery test_1267_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_1267() { testInvalid(test_1267_query); }

		private static final SubtypeQuery test_1268_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("(!int | !any)"));
		@Test public void test_1268() { testInvalid(test_1268_query); }

		private static final SubtypeQuery test_1269_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_1269() { testInvalid(test_1269_query); }

		private static final SubtypeQuery test_1270_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_1270() { testInvalid(test_1270_query); }

		private static final SubtypeQuery test_1271_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("({int} | !int)"));
		@Test public void test_1271() { testInvalid(test_1271_query); }

		private static final SubtypeQuery test_1272_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("(!any | !int)"));
		@Test public void test_1272() { testInvalid(test_1272_query); }

		private static final SubtypeQuery test_1273_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_1273() { testInvalid(test_1273_query); }

		private static final SubtypeQuery test_1274_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_1274() { testInvalid(test_1274_query); }

		private static final SubtypeQuery test_1275_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_1275() { testInvalid(test_1275_query); }

		private static final SubtypeQuery test_1276_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_1276() { testInvalid(test_1276_query); }

		private static final SubtypeQuery test_1277_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_1277() { testInvalid(test_1277_query); }

		private static final SubtypeQuery test_1278_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_1278() { testInvalid(test_1278_query); }

		private static final SubtypeQuery test_1279_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_1279() { testInvalid(test_1279_query); }

		private static final SubtypeQuery test_1280_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_1280() { testInvalid(test_1280_query); }

		private static final SubtypeQuery test_1281_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_1281() { testInvalid(test_1281_query); }

		private static final SubtypeQuery test_1282_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_1282() { testInvalid(test_1282_query); }

		private static final SubtypeQuery test_1283_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_1283() { testInvalid(test_1283_query); }

		private static final SubtypeQuery test_1284_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_1284() { testInvalid(test_1284_query); }

		private static final SubtypeQuery test_1285_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_1285() { testInvalid(test_1285_query); }

		private static final SubtypeQuery test_1286_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_1286() { testInvalid(test_1286_query); }

		private static final SubtypeQuery test_1287_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("(int | (any | int))"));
		@Test public void test_1287() { testInvalid(test_1287_query); }

		private static final SubtypeQuery test_1288_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_1288() { testInvalid(test_1288_query); }

		private static final SubtypeQuery test_1289_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_1289() { testInvalid(test_1289_query); }

		private static final SubtypeQuery test_1290_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_1290() { testInvalid(test_1290_query); }

		private static final SubtypeQuery test_1291_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_1291() { testInvalid(test_1291_query); }

		private static final SubtypeQuery test_1292_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_1292() { testInvalid(test_1292_query); }

		private static final SubtypeQuery test_1293_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_1293() { testInvalid(test_1293_query); }

		private static final SubtypeQuery test_1294_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("(int | (any & any))"));
		@Test public void test_1294() { testInvalid(test_1294_query); }

		private static final SubtypeQuery test_1295_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_1295() { testInvalid(test_1295_query); }

		private static final SubtypeQuery test_1296_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_1296() { testInvalid(test_1296_query); }

		private static final SubtypeQuery test_1297_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_1297() { testInvalid(test_1297_query); }

		private static final SubtypeQuery test_1298_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_1298() { testInvalid(test_1298_query); }

		private static final SubtypeQuery test_1299_query = createSubtypeQuery(parseWhiley("{{int, int}, {int}}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_1299() { testInvalid(test_1299_query); }

		private static final SubtypeQuery test_1300_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("!int"));
		@Test public void test_1300() { testInvalid(test_1300_query); }

		private static final SubtypeQuery test_1301_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("(any | any)"));
		@Test public void test_1301() { testInvalid(test_1301_query); }

		private static final SubtypeQuery test_1302_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("(any & any)"));
		@Test public void test_1302() { testInvalid(test_1302_query); }

		private static final SubtypeQuery test_1303_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{{int, int}}"));
		@Test public void test_1303() { testInvalid(test_1303_query); }

		private static final SubtypeQuery test_1304_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("!(int | int)"));
		@Test public void test_1304() { testInvalid(test_1304_query); }

		private static final SubtypeQuery test_1305_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_1305() { testInvalid(test_1305_query); }

		private static final SubtypeQuery test_1306_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_1306() { testInvalid(test_1306_query); }

		private static final SubtypeQuery test_1307_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{{any}, int}"));
		@Test public void test_1307() { testInvalid(test_1307_query); }

		private static final SubtypeQuery test_1308_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_1308() { testInvalid(test_1308_query); }

		private static final SubtypeQuery test_1309_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{(any | int), int}"));
		@Test public void test_1309() { testInvalid(test_1309_query); }

		private static final SubtypeQuery test_1310_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_1310() { testInvalid(test_1310_query); }

		private static final SubtypeQuery test_1311_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{!any, {int}}"));
		@Test public void test_1311() { testValid(test_1311_query); }

		private static final SubtypeQuery test_1312_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_1312() { testInvalid(test_1312_query); }

		private static final SubtypeQuery test_1313_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_1313() { testValid(test_1313_query); }

		private static final SubtypeQuery test_1314_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{any, !any}"));
		@Test public void test_1314() { testValid(test_1314_query); }

		private static final SubtypeQuery test_1315_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{{any}, !int}"));
		@Test public void test_1315() { testInvalid(test_1315_query); }

		private static final SubtypeQuery test_1316_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_1316() { testInvalid(test_1316_query); }

		private static final SubtypeQuery test_1317_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_1317() { testInvalid(test_1317_query); }

		private static final SubtypeQuery test_1318_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_1318() { testInvalid(test_1318_query); }

		private static final SubtypeQuery test_1319_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_1319() { testInvalid(test_1319_query); }

		private static final SubtypeQuery test_1320_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_1320() { testInvalid(test_1320_query); }

		private static final SubtypeQuery test_1321_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_1321() { testInvalid(test_1321_query); }

		private static final SubtypeQuery test_1322_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_1322() { testInvalid(test_1322_query); }

		private static final SubtypeQuery test_1323_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_1323() { testInvalid(test_1323_query); }

		private static final SubtypeQuery test_1324_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_1324() { testInvalid(test_1324_query); }

		private static final SubtypeQuery test_1325_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_1325() { testInvalid(test_1325_query); }

		private static final SubtypeQuery test_1326_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_1326() { testInvalid(test_1326_query); }

		private static final SubtypeQuery test_1327_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_1327() { testInvalid(test_1327_query); }

		private static final SubtypeQuery test_1328_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_1328() { testInvalid(test_1328_query); }

		private static final SubtypeQuery test_1329_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_1329() { testValid(test_1329_query); }

		private static final SubtypeQuery test_1330_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_1330() { testInvalid(test_1330_query); }

		private static final SubtypeQuery test_1331_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_1331() { testInvalid(test_1331_query); }

		private static final SubtypeQuery test_1332_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_1332() { testInvalid(test_1332_query); }

		private static final SubtypeQuery test_1333_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_1333() { testInvalid(test_1333_query); }

		private static final SubtypeQuery test_1334_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_1334() { testInvalid(test_1334_query); }

		private static final SubtypeQuery test_1335_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_1335() { testInvalid(test_1335_query); }

		private static final SubtypeQuery test_1336_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_1336() { testInvalid(test_1336_query); }

		private static final SubtypeQuery test_1337_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_1337() { testInvalid(test_1337_query); }

		private static final SubtypeQuery test_1338_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_1338() { testInvalid(test_1338_query); }

		private static final SubtypeQuery test_1339_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_1339() { testInvalid(test_1339_query); }

		private static final SubtypeQuery test_1340_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_1340() { testInvalid(test_1340_query); }

		private static final SubtypeQuery test_1341_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_1341() { testValid(test_1341_query); }

		private static final SubtypeQuery test_1342_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_1342() { testInvalid(test_1342_query); }

		private static final SubtypeQuery test_1343_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_1343() { testInvalid(test_1343_query); }

		private static final SubtypeQuery test_1344_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_1344() { testInvalid(test_1344_query); }

		private static final SubtypeQuery test_1345_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_1345() { testInvalid(test_1345_query); }

		private static final SubtypeQuery test_1346_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_1346() { testInvalid(test_1346_query); }

		private static final SubtypeQuery test_1347_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_1347() { testInvalid(test_1347_query); }

		private static final SubtypeQuery test_1348_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_1348() { testInvalid(test_1348_query); }

		private static final SubtypeQuery test_1349_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_1349() { testInvalid(test_1349_query); }

		private static final SubtypeQuery test_1350_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_1350() { testInvalid(test_1350_query); }

		private static final SubtypeQuery test_1351_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_1351() { testInvalid(test_1351_query); }

		private static final SubtypeQuery test_1352_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_1352() { testInvalid(test_1352_query); }

		private static final SubtypeQuery test_1353_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_1353() { testInvalid(test_1353_query); }

		private static final SubtypeQuery test_1354_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_1354() { testInvalid(test_1354_query); }

		private static final SubtypeQuery test_1355_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_1355() { testInvalid(test_1355_query); }

		private static final SubtypeQuery test_1356_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("(!any | any)"));
		@Test public void test_1356() { testInvalid(test_1356_query); }

		private static final SubtypeQuery test_1357_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("({int, any} | any)"));
		@Test public void test_1357() { testInvalid(test_1357_query); }

		private static final SubtypeQuery test_1358_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("({any, int} | any)"));
		@Test public void test_1358() { testInvalid(test_1358_query); }

		private static final SubtypeQuery test_1359_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("((int & int) | any)"));
		@Test public void test_1359() { testInvalid(test_1359_query); }

		private static final SubtypeQuery test_1360_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("({int, int} | int)"));
		@Test public void test_1360() { testInvalid(test_1360_query); }

		private static final SubtypeQuery test_1361_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("((any | any) | int)"));
		@Test public void test_1361() { testInvalid(test_1361_query); }

		private static final SubtypeQuery test_1362_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("((int | any) | int)"));
		@Test public void test_1362() { testInvalid(test_1362_query); }

		private static final SubtypeQuery test_1363_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("(any | {any})"));
		@Test public void test_1363() { testInvalid(test_1363_query); }

		private static final SubtypeQuery test_1364_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("(int | {any})"));
		@Test public void test_1364() { testInvalid(test_1364_query); }

		private static final SubtypeQuery test_1365_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_1365() { testInvalid(test_1365_query); }

		private static final SubtypeQuery test_1366_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("(any | {int})"));
		@Test public void test_1366() { testInvalid(test_1366_query); }

		private static final SubtypeQuery test_1367_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_1367() { testInvalid(test_1367_query); }

		private static final SubtypeQuery test_1368_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("(!int | !any)"));
		@Test public void test_1368() { testInvalid(test_1368_query); }

		private static final SubtypeQuery test_1369_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_1369() { testInvalid(test_1369_query); }

		private static final SubtypeQuery test_1370_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_1370() { testInvalid(test_1370_query); }

		private static final SubtypeQuery test_1371_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("({int} | !int)"));
		@Test public void test_1371() { testInvalid(test_1371_query); }

		private static final SubtypeQuery test_1372_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("(!any | !int)"));
		@Test public void test_1372() { testInvalid(test_1372_query); }

		private static final SubtypeQuery test_1373_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_1373() { testInvalid(test_1373_query); }

		private static final SubtypeQuery test_1374_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_1374() { testInvalid(test_1374_query); }

		private static final SubtypeQuery test_1375_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_1375() { testInvalid(test_1375_query); }

		private static final SubtypeQuery test_1376_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_1376() { testInvalid(test_1376_query); }

		private static final SubtypeQuery test_1377_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_1377() { testInvalid(test_1377_query); }

		private static final SubtypeQuery test_1378_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_1378() { testInvalid(test_1378_query); }

		private static final SubtypeQuery test_1379_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_1379() { testInvalid(test_1379_query); }

		private static final SubtypeQuery test_1380_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_1380() { testInvalid(test_1380_query); }

		private static final SubtypeQuery test_1381_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_1381() { testInvalid(test_1381_query); }

		private static final SubtypeQuery test_1382_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_1382() { testInvalid(test_1382_query); }

		private static final SubtypeQuery test_1383_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_1383() { testInvalid(test_1383_query); }

		private static final SubtypeQuery test_1384_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_1384() { testInvalid(test_1384_query); }

		private static final SubtypeQuery test_1385_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_1385() { testInvalid(test_1385_query); }

		private static final SubtypeQuery test_1386_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_1386() { testInvalid(test_1386_query); }

		private static final SubtypeQuery test_1387_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("(int | (any | int))"));
		@Test public void test_1387() { testInvalid(test_1387_query); }

		private static final SubtypeQuery test_1388_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_1388() { testInvalid(test_1388_query); }

		private static final SubtypeQuery test_1389_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_1389() { testInvalid(test_1389_query); }

		private static final SubtypeQuery test_1390_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_1390() { testInvalid(test_1390_query); }

		private static final SubtypeQuery test_1391_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_1391() { testInvalid(test_1391_query); }

		private static final SubtypeQuery test_1392_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_1392() { testInvalid(test_1392_query); }

		private static final SubtypeQuery test_1393_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_1393() { testInvalid(test_1393_query); }

		private static final SubtypeQuery test_1394_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("(int | (any & any))"));
		@Test public void test_1394() { testInvalid(test_1394_query); }

		private static final SubtypeQuery test_1395_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_1395() { testInvalid(test_1395_query); }

		private static final SubtypeQuery test_1396_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_1396() { testInvalid(test_1396_query); }

		private static final SubtypeQuery test_1397_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_1397() { testInvalid(test_1397_query); }

		private static final SubtypeQuery test_1398_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_1398() { testInvalid(test_1398_query); }

		private static final SubtypeQuery test_1399_query = createSubtypeQuery(parseWhiley("{(int | int), {int}}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_1399() { testInvalid(test_1399_query); }

		private static final SubtypeQuery test_1400_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("!int"));
		@Test public void test_1400() { testInvalid(test_1400_query); }

		private static final SubtypeQuery test_1401_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("(any | any)"));
		@Test public void test_1401() { testInvalid(test_1401_query); }

		private static final SubtypeQuery test_1402_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("(any & any)"));
		@Test public void test_1402() { testInvalid(test_1402_query); }

		private static final SubtypeQuery test_1403_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{{int, int}}"));
		@Test public void test_1403() { testInvalid(test_1403_query); }

		private static final SubtypeQuery test_1404_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("!(int | int)"));
		@Test public void test_1404() { testInvalid(test_1404_query); }

		private static final SubtypeQuery test_1405_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_1405() { testInvalid(test_1405_query); }

		private static final SubtypeQuery test_1406_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_1406() { testInvalid(test_1406_query); }

		private static final SubtypeQuery test_1407_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{{any}, int}"));
		@Test public void test_1407() { testInvalid(test_1407_query); }

		private static final SubtypeQuery test_1408_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_1408() { testInvalid(test_1408_query); }

		private static final SubtypeQuery test_1409_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{(any | int), int}"));
		@Test public void test_1409() { testInvalid(test_1409_query); }

		private static final SubtypeQuery test_1410_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_1410() { testInvalid(test_1410_query); }

		private static final SubtypeQuery test_1411_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{!any, {int}}"));
		@Test public void test_1411() { testValid(test_1411_query); }

		private static final SubtypeQuery test_1412_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_1412() { testInvalid(test_1412_query); }

		private static final SubtypeQuery test_1413_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_1413() { testInvalid(test_1413_query); }

		private static final SubtypeQuery test_1414_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{any, !any}"));
		@Test public void test_1414() { testValid(test_1414_query); }

		private static final SubtypeQuery test_1415_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{{any}, !int}"));
		@Test public void test_1415() { testInvalid(test_1415_query); }

		private static final SubtypeQuery test_1416_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_1416() { testInvalid(test_1416_query); }

		private static final SubtypeQuery test_1417_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_1417() { testInvalid(test_1417_query); }

		private static final SubtypeQuery test_1418_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_1418() { testInvalid(test_1418_query); }

		private static final SubtypeQuery test_1419_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_1419() { testInvalid(test_1419_query); }

		private static final SubtypeQuery test_1420_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_1420() { testInvalid(test_1420_query); }

		private static final SubtypeQuery test_1421_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_1421() { testInvalid(test_1421_query); }

		private static final SubtypeQuery test_1422_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_1422() { testInvalid(test_1422_query); }

		private static final SubtypeQuery test_1423_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_1423() { testInvalid(test_1423_query); }

		private static final SubtypeQuery test_1424_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_1424() { testInvalid(test_1424_query); }

		private static final SubtypeQuery test_1425_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_1425() { testInvalid(test_1425_query); }

		private static final SubtypeQuery test_1426_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_1426() { testInvalid(test_1426_query); }

		private static final SubtypeQuery test_1427_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_1427() { testInvalid(test_1427_query); }

		private static final SubtypeQuery test_1428_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_1428() { testInvalid(test_1428_query); }

		private static final SubtypeQuery test_1429_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_1429() { testValid(test_1429_query); }

		private static final SubtypeQuery test_1430_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_1430() { testInvalid(test_1430_query); }

		private static final SubtypeQuery test_1431_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_1431() { testInvalid(test_1431_query); }

		private static final SubtypeQuery test_1432_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_1432() { testInvalid(test_1432_query); }

		private static final SubtypeQuery test_1433_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_1433() { testInvalid(test_1433_query); }

		private static final SubtypeQuery test_1434_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_1434() { testInvalid(test_1434_query); }

		private static final SubtypeQuery test_1435_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_1435() { testInvalid(test_1435_query); }

		private static final SubtypeQuery test_1436_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_1436() { testInvalid(test_1436_query); }

		private static final SubtypeQuery test_1437_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_1437() { testInvalid(test_1437_query); }

		private static final SubtypeQuery test_1438_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_1438() { testInvalid(test_1438_query); }

		private static final SubtypeQuery test_1439_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_1439() { testInvalid(test_1439_query); }

		private static final SubtypeQuery test_1440_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_1440() { testInvalid(test_1440_query); }

		private static final SubtypeQuery test_1441_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_1441() { testValid(test_1441_query); }

		private static final SubtypeQuery test_1442_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_1442() { testInvalid(test_1442_query); }

		private static final SubtypeQuery test_1443_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_1443() { testInvalid(test_1443_query); }

		private static final SubtypeQuery test_1444_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_1444() { testInvalid(test_1444_query); }

		private static final SubtypeQuery test_1445_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_1445() { testInvalid(test_1445_query); }

		private static final SubtypeQuery test_1446_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_1446() { testInvalid(test_1446_query); }

		private static final SubtypeQuery test_1447_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_1447() { testInvalid(test_1447_query); }

		private static final SubtypeQuery test_1448_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_1448() { testInvalid(test_1448_query); }

		private static final SubtypeQuery test_1449_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_1449() { testInvalid(test_1449_query); }

		private static final SubtypeQuery test_1450_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_1450() { testInvalid(test_1450_query); }

		private static final SubtypeQuery test_1451_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_1451() { testInvalid(test_1451_query); }

		private static final SubtypeQuery test_1452_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_1452() { testInvalid(test_1452_query); }

		private static final SubtypeQuery test_1453_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_1453() { testInvalid(test_1453_query); }

		private static final SubtypeQuery test_1454_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_1454() { testInvalid(test_1454_query); }

		private static final SubtypeQuery test_1455_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_1455() { testInvalid(test_1455_query); }

		private static final SubtypeQuery test_1456_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("(!any | any)"));
		@Test public void test_1456() { testInvalid(test_1456_query); }

		private static final SubtypeQuery test_1457_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("({int, any} | any)"));
		@Test public void test_1457() { testInvalid(test_1457_query); }

		private static final SubtypeQuery test_1458_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("({any, int} | any)"));
		@Test public void test_1458() { testInvalid(test_1458_query); }

		private static final SubtypeQuery test_1459_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("((int & int) | any)"));
		@Test public void test_1459() { testInvalid(test_1459_query); }

		private static final SubtypeQuery test_1460_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("({int, int} | int)"));
		@Test public void test_1460() { testInvalid(test_1460_query); }

		private static final SubtypeQuery test_1461_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("((any | any) | int)"));
		@Test public void test_1461() { testInvalid(test_1461_query); }

		private static final SubtypeQuery test_1462_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("((int | any) | int)"));
		@Test public void test_1462() { testInvalid(test_1462_query); }

		private static final SubtypeQuery test_1463_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("(any | {any})"));
		@Test public void test_1463() { testInvalid(test_1463_query); }

		private static final SubtypeQuery test_1464_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("(int | {any})"));
		@Test public void test_1464() { testInvalid(test_1464_query); }

		private static final SubtypeQuery test_1465_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_1465() { testInvalid(test_1465_query); }

		private static final SubtypeQuery test_1466_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("(any | {int})"));
		@Test public void test_1466() { testInvalid(test_1466_query); }

		private static final SubtypeQuery test_1467_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_1467() { testInvalid(test_1467_query); }

		private static final SubtypeQuery test_1468_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("(!int | !any)"));
		@Test public void test_1468() { testInvalid(test_1468_query); }

		private static final SubtypeQuery test_1469_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_1469() { testInvalid(test_1469_query); }

		private static final SubtypeQuery test_1470_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_1470() { testInvalid(test_1470_query); }

		private static final SubtypeQuery test_1471_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("({int} | !int)"));
		@Test public void test_1471() { testInvalid(test_1471_query); }

		private static final SubtypeQuery test_1472_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("(!any | !int)"));
		@Test public void test_1472() { testInvalid(test_1472_query); }

		private static final SubtypeQuery test_1473_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_1473() { testInvalid(test_1473_query); }

		private static final SubtypeQuery test_1474_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_1474() { testInvalid(test_1474_query); }

		private static final SubtypeQuery test_1475_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_1475() { testInvalid(test_1475_query); }

		private static final SubtypeQuery test_1476_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_1476() { testInvalid(test_1476_query); }

		private static final SubtypeQuery test_1477_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_1477() { testInvalid(test_1477_query); }

		private static final SubtypeQuery test_1478_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_1478() { testInvalid(test_1478_query); }

		private static final SubtypeQuery test_1479_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_1479() { testInvalid(test_1479_query); }

		private static final SubtypeQuery test_1480_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_1480() { testInvalid(test_1480_query); }

		private static final SubtypeQuery test_1481_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_1481() { testInvalid(test_1481_query); }

		private static final SubtypeQuery test_1482_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_1482() { testInvalid(test_1482_query); }

		private static final SubtypeQuery test_1483_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_1483() { testInvalid(test_1483_query); }

		private static final SubtypeQuery test_1484_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_1484() { testInvalid(test_1484_query); }

		private static final SubtypeQuery test_1485_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_1485() { testInvalid(test_1485_query); }

		private static final SubtypeQuery test_1486_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_1486() { testInvalid(test_1486_query); }

		private static final SubtypeQuery test_1487_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("(int | (any | int))"));
		@Test public void test_1487() { testInvalid(test_1487_query); }

		private static final SubtypeQuery test_1488_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_1488() { testInvalid(test_1488_query); }

		private static final SubtypeQuery test_1489_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_1489() { testInvalid(test_1489_query); }

		private static final SubtypeQuery test_1490_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_1490() { testInvalid(test_1490_query); }

		private static final SubtypeQuery test_1491_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_1491() { testInvalid(test_1491_query); }

		private static final SubtypeQuery test_1492_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_1492() { testInvalid(test_1492_query); }

		private static final SubtypeQuery test_1493_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_1493() { testInvalid(test_1493_query); }

		private static final SubtypeQuery test_1494_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("(int | (any & any))"));
		@Test public void test_1494() { testInvalid(test_1494_query); }

		private static final SubtypeQuery test_1495_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_1495() { testInvalid(test_1495_query); }

		private static final SubtypeQuery test_1496_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_1496() { testInvalid(test_1496_query); }

		private static final SubtypeQuery test_1497_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_1497() { testInvalid(test_1497_query); }

		private static final SubtypeQuery test_1498_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_1498() { testInvalid(test_1498_query); }

		private static final SubtypeQuery test_1499_query = createSubtypeQuery(parseWhiley("{any, !any}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_1499() { testInvalid(test_1499_query); }

		private static final SubtypeQuery test_1500_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("!int"));
		@Test public void test_1500() { testInvalid(test_1500_query); }

		private static final SubtypeQuery test_1501_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("(any | any)"));
		@Test public void test_1501() { testInvalid(test_1501_query); }

		private static final SubtypeQuery test_1502_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("(any & any)"));
		@Test public void test_1502() { testInvalid(test_1502_query); }

		private static final SubtypeQuery test_1503_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{{int, int}}"));
		@Test public void test_1503() { testInvalid(test_1503_query); }

		private static final SubtypeQuery test_1504_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("!(int | int)"));
		@Test public void test_1504() { testInvalid(test_1504_query); }

		private static final SubtypeQuery test_1505_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_1505() { testInvalid(test_1505_query); }

		private static final SubtypeQuery test_1506_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_1506() { testInvalid(test_1506_query); }

		private static final SubtypeQuery test_1507_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{{any}, int}"));
		@Test public void test_1507() { testInvalid(test_1507_query); }

		private static final SubtypeQuery test_1508_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_1508() { testInvalid(test_1508_query); }

		private static final SubtypeQuery test_1509_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{(any | int), int}"));
		@Test public void test_1509() { testInvalid(test_1509_query); }

		private static final SubtypeQuery test_1510_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_1510() { testInvalid(test_1510_query); }

		private static final SubtypeQuery test_1511_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{!any, {int}}"));
		@Test public void test_1511() { testValid(test_1511_query); }

		private static final SubtypeQuery test_1512_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_1512() { testInvalid(test_1512_query); }

		private static final SubtypeQuery test_1513_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_1513() { testInvalid(test_1513_query); }

		private static final SubtypeQuery test_1514_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{any, !any}"));
		@Test public void test_1514() { testValid(test_1514_query); }

		private static final SubtypeQuery test_1515_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{{any}, !int}"));
		@Test public void test_1515() { testValid(test_1515_query); }

		private static final SubtypeQuery test_1516_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_1516() { testInvalid(test_1516_query); }

		private static final SubtypeQuery test_1517_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_1517() { testInvalid(test_1517_query); }

		private static final SubtypeQuery test_1518_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_1518() { testInvalid(test_1518_query); }

		private static final SubtypeQuery test_1519_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_1519() { testInvalid(test_1519_query); }

		private static final SubtypeQuery test_1520_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_1520() { testInvalid(test_1520_query); }

		private static final SubtypeQuery test_1521_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_1521() { testInvalid(test_1521_query); }

		private static final SubtypeQuery test_1522_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_1522() { testInvalid(test_1522_query); }

		private static final SubtypeQuery test_1523_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_1523() { testInvalid(test_1523_query); }

		private static final SubtypeQuery test_1524_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_1524() { testInvalid(test_1524_query); }

		private static final SubtypeQuery test_1525_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_1525() { testInvalid(test_1525_query); }

		private static final SubtypeQuery test_1526_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_1526() { testInvalid(test_1526_query); }

		private static final SubtypeQuery test_1527_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_1527() { testValid(test_1527_query); }

		private static final SubtypeQuery test_1528_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_1528() { testInvalid(test_1528_query); }

		private static final SubtypeQuery test_1529_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_1529() { testValid(test_1529_query); }

		private static final SubtypeQuery test_1530_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_1530() { testInvalid(test_1530_query); }

		private static final SubtypeQuery test_1531_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_1531() { testInvalid(test_1531_query); }

		private static final SubtypeQuery test_1532_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_1532() { testInvalid(test_1532_query); }

		private static final SubtypeQuery test_1533_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_1533() { testInvalid(test_1533_query); }

		private static final SubtypeQuery test_1534_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_1534() { testInvalid(test_1534_query); }

		private static final SubtypeQuery test_1535_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_1535() { testInvalid(test_1535_query); }

		private static final SubtypeQuery test_1536_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_1536() { testInvalid(test_1536_query); }

		private static final SubtypeQuery test_1537_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_1537() { testInvalid(test_1537_query); }

		private static final SubtypeQuery test_1538_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_1538() { testInvalid(test_1538_query); }

		private static final SubtypeQuery test_1539_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_1539() { testInvalid(test_1539_query); }

		private static final SubtypeQuery test_1540_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_1540() { testInvalid(test_1540_query); }

		private static final SubtypeQuery test_1541_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_1541() { testValid(test_1541_query); }

		private static final SubtypeQuery test_1542_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_1542() { testInvalid(test_1542_query); }

		private static final SubtypeQuery test_1543_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_1543() { testInvalid(test_1543_query); }

		private static final SubtypeQuery test_1544_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_1544() { testInvalid(test_1544_query); }

		private static final SubtypeQuery test_1545_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_1545() { testInvalid(test_1545_query); }

		private static final SubtypeQuery test_1546_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_1546() { testInvalid(test_1546_query); }

		private static final SubtypeQuery test_1547_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_1547() { testInvalid(test_1547_query); }

		private static final SubtypeQuery test_1548_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_1548() { testInvalid(test_1548_query); }

		private static final SubtypeQuery test_1549_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_1549() { testInvalid(test_1549_query); }

		private static final SubtypeQuery test_1550_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_1550() { testInvalid(test_1550_query); }

		private static final SubtypeQuery test_1551_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_1551() { testInvalid(test_1551_query); }

		private static final SubtypeQuery test_1552_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_1552() { testInvalid(test_1552_query); }

		private static final SubtypeQuery test_1553_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_1553() { testInvalid(test_1553_query); }

		private static final SubtypeQuery test_1554_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_1554() { testInvalid(test_1554_query); }

		private static final SubtypeQuery test_1555_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_1555() { testInvalid(test_1555_query); }

		private static final SubtypeQuery test_1556_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("(!any | any)"));
		@Test public void test_1556() { testInvalid(test_1556_query); }

		private static final SubtypeQuery test_1557_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("({int, any} | any)"));
		@Test public void test_1557() { testInvalid(test_1557_query); }

		private static final SubtypeQuery test_1558_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("({any, int} | any)"));
		@Test public void test_1558() { testInvalid(test_1558_query); }

		private static final SubtypeQuery test_1559_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("((int & int) | any)"));
		@Test public void test_1559() { testInvalid(test_1559_query); }

		private static final SubtypeQuery test_1560_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("({int, int} | int)"));
		@Test public void test_1560() { testInvalid(test_1560_query); }

		private static final SubtypeQuery test_1561_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("((any | any) | int)"));
		@Test public void test_1561() { testInvalid(test_1561_query); }

		private static final SubtypeQuery test_1562_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("((int | any) | int)"));
		@Test public void test_1562() { testInvalid(test_1562_query); }

		private static final SubtypeQuery test_1563_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("(any | {any})"));
		@Test public void test_1563() { testInvalid(test_1563_query); }

		private static final SubtypeQuery test_1564_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("(int | {any})"));
		@Test public void test_1564() { testInvalid(test_1564_query); }

		private static final SubtypeQuery test_1565_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_1565() { testInvalid(test_1565_query); }

		private static final SubtypeQuery test_1566_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("(any | {int})"));
		@Test public void test_1566() { testInvalid(test_1566_query); }

		private static final SubtypeQuery test_1567_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_1567() { testInvalid(test_1567_query); }

		private static final SubtypeQuery test_1568_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("(!int | !any)"));
		@Test public void test_1568() { testInvalid(test_1568_query); }

		private static final SubtypeQuery test_1569_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_1569() { testInvalid(test_1569_query); }

		private static final SubtypeQuery test_1570_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_1570() { testInvalid(test_1570_query); }

		private static final SubtypeQuery test_1571_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("({int} | !int)"));
		@Test public void test_1571() { testInvalid(test_1571_query); }

		private static final SubtypeQuery test_1572_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("(!any | !int)"));
		@Test public void test_1572() { testInvalid(test_1572_query); }

		private static final SubtypeQuery test_1573_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_1573() { testInvalid(test_1573_query); }

		private static final SubtypeQuery test_1574_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_1574() { testInvalid(test_1574_query); }

		private static final SubtypeQuery test_1575_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_1575() { testInvalid(test_1575_query); }

		private static final SubtypeQuery test_1576_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_1576() { testInvalid(test_1576_query); }

		private static final SubtypeQuery test_1577_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_1577() { testInvalid(test_1577_query); }

		private static final SubtypeQuery test_1578_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_1578() { testInvalid(test_1578_query); }

		private static final SubtypeQuery test_1579_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_1579() { testInvalid(test_1579_query); }

		private static final SubtypeQuery test_1580_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_1580() { testInvalid(test_1580_query); }

		private static final SubtypeQuery test_1581_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_1581() { testInvalid(test_1581_query); }

		private static final SubtypeQuery test_1582_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_1582() { testInvalid(test_1582_query); }

		private static final SubtypeQuery test_1583_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_1583() { testInvalid(test_1583_query); }

		private static final SubtypeQuery test_1584_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_1584() { testInvalid(test_1584_query); }

		private static final SubtypeQuery test_1585_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_1585() { testInvalid(test_1585_query); }

		private static final SubtypeQuery test_1586_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_1586() { testInvalid(test_1586_query); }

		private static final SubtypeQuery test_1587_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("(int | (any | int))"));
		@Test public void test_1587() { testInvalid(test_1587_query); }

		private static final SubtypeQuery test_1588_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_1588() { testInvalid(test_1588_query); }

		private static final SubtypeQuery test_1589_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_1589() { testInvalid(test_1589_query); }

		private static final SubtypeQuery test_1590_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_1590() { testInvalid(test_1590_query); }

		private static final SubtypeQuery test_1591_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_1591() { testInvalid(test_1591_query); }

		private static final SubtypeQuery test_1592_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_1592() { testInvalid(test_1592_query); }

		private static final SubtypeQuery test_1593_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_1593() { testInvalid(test_1593_query); }

		private static final SubtypeQuery test_1594_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("(int | (any & any))"));
		@Test public void test_1594() { testInvalid(test_1594_query); }

		private static final SubtypeQuery test_1595_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_1595() { testInvalid(test_1595_query); }

		private static final SubtypeQuery test_1596_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_1596() { testInvalid(test_1596_query); }

		private static final SubtypeQuery test_1597_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_1597() { testInvalid(test_1597_query); }

		private static final SubtypeQuery test_1598_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_1598() { testInvalid(test_1598_query); }

		private static final SubtypeQuery test_1599_query = createSubtypeQuery(parseWhiley("{{any}, !int}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_1599() { testInvalid(test_1599_query); }

		private static final SubtypeQuery test_1600_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("!int"));
		@Test public void test_1600() { testInvalid(test_1600_query); }

		private static final SubtypeQuery test_1601_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("(any | any)"));
		@Test public void test_1601() { testInvalid(test_1601_query); }

		private static final SubtypeQuery test_1602_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("(any & any)"));
		@Test public void test_1602() { testInvalid(test_1602_query); }

		private static final SubtypeQuery test_1603_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{{int, int}}"));
		@Test public void test_1603() { testInvalid(test_1603_query); }

		private static final SubtypeQuery test_1604_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("!(int | int)"));
		@Test public void test_1604() { testInvalid(test_1604_query); }

		private static final SubtypeQuery test_1605_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_1605() { testInvalid(test_1605_query); }

		private static final SubtypeQuery test_1606_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_1606() { testInvalid(test_1606_query); }

		private static final SubtypeQuery test_1607_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{{any}, int}"));
		@Test public void test_1607() { testInvalid(test_1607_query); }

		private static final SubtypeQuery test_1608_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_1608() { testInvalid(test_1608_query); }

		private static final SubtypeQuery test_1609_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{(any | int), int}"));
		@Test public void test_1609() { testInvalid(test_1609_query); }

		private static final SubtypeQuery test_1610_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_1610() { testInvalid(test_1610_query); }

		private static final SubtypeQuery test_1611_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{!any, {int}}"));
		@Test public void test_1611() { testValid(test_1611_query); }

		private static final SubtypeQuery test_1612_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_1612() { testValid(test_1612_query); }

		private static final SubtypeQuery test_1613_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_1613() { testInvalid(test_1613_query); }

		private static final SubtypeQuery test_1614_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{any, !any}"));
		@Test public void test_1614() { testValid(test_1614_query); }

		private static final SubtypeQuery test_1615_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{{any}, !int}"));
		@Test public void test_1615() { testInvalid(test_1615_query); }

		private static final SubtypeQuery test_1616_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_1616() { testValid(test_1616_query); }

		private static final SubtypeQuery test_1617_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_1617() { testInvalid(test_1617_query); }

		private static final SubtypeQuery test_1618_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_1618() { testInvalid(test_1618_query); }

		private static final SubtypeQuery test_1619_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_1619() { testInvalid(test_1619_query); }

		private static final SubtypeQuery test_1620_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_1620() { testInvalid(test_1620_query); }

		private static final SubtypeQuery test_1621_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_1621() { testInvalid(test_1621_query); }

		private static final SubtypeQuery test_1622_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_1622() { testInvalid(test_1622_query); }

		private static final SubtypeQuery test_1623_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_1623() { testValid(test_1623_query); }

		private static final SubtypeQuery test_1624_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_1624() { testInvalid(test_1624_query); }

		private static final SubtypeQuery test_1625_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_1625() { testInvalid(test_1625_query); }

		private static final SubtypeQuery test_1626_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_1626() { testInvalid(test_1626_query); }

		private static final SubtypeQuery test_1627_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_1627() { testInvalid(test_1627_query); }

		private static final SubtypeQuery test_1628_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_1628() { testValid(test_1628_query); }

		private static final SubtypeQuery test_1629_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_1629() { testValid(test_1629_query); }

		private static final SubtypeQuery test_1630_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_1630() { testInvalid(test_1630_query); }

		private static final SubtypeQuery test_1631_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_1631() { testInvalid(test_1631_query); }

		private static final SubtypeQuery test_1632_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_1632() { testInvalid(test_1632_query); }

		private static final SubtypeQuery test_1633_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_1633() { testInvalid(test_1633_query); }

		private static final SubtypeQuery test_1634_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_1634() { testInvalid(test_1634_query); }

		private static final SubtypeQuery test_1635_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_1635() { testInvalid(test_1635_query); }

		private static final SubtypeQuery test_1636_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_1636() { testInvalid(test_1636_query); }

		private static final SubtypeQuery test_1637_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_1637() { testInvalid(test_1637_query); }

		private static final SubtypeQuery test_1638_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_1638() { testInvalid(test_1638_query); }

		private static final SubtypeQuery test_1639_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_1639() { testInvalid(test_1639_query); }

		private static final SubtypeQuery test_1640_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_1640() { testInvalid(test_1640_query); }

		private static final SubtypeQuery test_1641_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_1641() { testValid(test_1641_query); }

		private static final SubtypeQuery test_1642_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_1642() { testInvalid(test_1642_query); }

		private static final SubtypeQuery test_1643_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_1643() { testInvalid(test_1643_query); }

		private static final SubtypeQuery test_1644_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_1644() { testInvalid(test_1644_query); }

		private static final SubtypeQuery test_1645_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_1645() { testInvalid(test_1645_query); }

		private static final SubtypeQuery test_1646_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_1646() { testInvalid(test_1646_query); }

		private static final SubtypeQuery test_1647_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_1647() { testInvalid(test_1647_query); }

		private static final SubtypeQuery test_1648_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_1648() { testInvalid(test_1648_query); }

		private static final SubtypeQuery test_1649_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_1649() { testInvalid(test_1649_query); }

		private static final SubtypeQuery test_1650_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_1650() { testInvalid(test_1650_query); }

		private static final SubtypeQuery test_1651_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_1651() { testInvalid(test_1651_query); }

		private static final SubtypeQuery test_1652_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_1652() { testInvalid(test_1652_query); }

		private static final SubtypeQuery test_1653_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_1653() { testInvalid(test_1653_query); }

		private static final SubtypeQuery test_1654_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_1654() { testInvalid(test_1654_query); }

		private static final SubtypeQuery test_1655_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_1655() { testInvalid(test_1655_query); }

		private static final SubtypeQuery test_1656_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("(!any | any)"));
		@Test public void test_1656() { testInvalid(test_1656_query); }

		private static final SubtypeQuery test_1657_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("({int, any} | any)"));
		@Test public void test_1657() { testInvalid(test_1657_query); }

		private static final SubtypeQuery test_1658_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("({any, int} | any)"));
		@Test public void test_1658() { testInvalid(test_1658_query); }

		private static final SubtypeQuery test_1659_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("((int & int) | any)"));
		@Test public void test_1659() { testInvalid(test_1659_query); }

		private static final SubtypeQuery test_1660_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("({int, int} | int)"));
		@Test public void test_1660() { testInvalid(test_1660_query); }

		private static final SubtypeQuery test_1661_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("((any | any) | int)"));
		@Test public void test_1661() { testInvalid(test_1661_query); }

		private static final SubtypeQuery test_1662_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("((int | any) | int)"));
		@Test public void test_1662() { testInvalid(test_1662_query); }

		private static final SubtypeQuery test_1663_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("(any | {any})"));
		@Test public void test_1663() { testInvalid(test_1663_query); }

		private static final SubtypeQuery test_1664_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("(int | {any})"));
		@Test public void test_1664() { testInvalid(test_1664_query); }

		private static final SubtypeQuery test_1665_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_1665() { testInvalid(test_1665_query); }

		private static final SubtypeQuery test_1666_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("(any | {int})"));
		@Test public void test_1666() { testInvalid(test_1666_query); }

		private static final SubtypeQuery test_1667_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_1667() { testInvalid(test_1667_query); }

		private static final SubtypeQuery test_1668_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("(!int | !any)"));
		@Test public void test_1668() { testInvalid(test_1668_query); }

		private static final SubtypeQuery test_1669_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_1669() { testInvalid(test_1669_query); }

		private static final SubtypeQuery test_1670_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_1670() { testInvalid(test_1670_query); }

		private static final SubtypeQuery test_1671_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("({int} | !int)"));
		@Test public void test_1671() { testInvalid(test_1671_query); }

		private static final SubtypeQuery test_1672_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("(!any | !int)"));
		@Test public void test_1672() { testInvalid(test_1672_query); }

		private static final SubtypeQuery test_1673_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_1673() { testInvalid(test_1673_query); }

		private static final SubtypeQuery test_1674_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_1674() { testInvalid(test_1674_query); }

		private static final SubtypeQuery test_1675_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_1675() { testInvalid(test_1675_query); }

		private static final SubtypeQuery test_1676_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_1676() { testInvalid(test_1676_query); }

		private static final SubtypeQuery test_1677_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_1677() { testInvalid(test_1677_query); }

		private static final SubtypeQuery test_1678_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_1678() { testInvalid(test_1678_query); }

		private static final SubtypeQuery test_1679_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_1679() { testInvalid(test_1679_query); }

		private static final SubtypeQuery test_1680_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_1680() { testInvalid(test_1680_query); }

		private static final SubtypeQuery test_1681_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_1681() { testInvalid(test_1681_query); }

		private static final SubtypeQuery test_1682_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_1682() { testInvalid(test_1682_query); }

		private static final SubtypeQuery test_1683_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_1683() { testInvalid(test_1683_query); }

		private static final SubtypeQuery test_1684_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_1684() { testInvalid(test_1684_query); }

		private static final SubtypeQuery test_1685_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_1685() { testInvalid(test_1685_query); }

		private static final SubtypeQuery test_1686_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_1686() { testInvalid(test_1686_query); }

		private static final SubtypeQuery test_1687_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("(int | (any | int))"));
		@Test public void test_1687() { testInvalid(test_1687_query); }

		private static final SubtypeQuery test_1688_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_1688() { testInvalid(test_1688_query); }

		private static final SubtypeQuery test_1689_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_1689() { testInvalid(test_1689_query); }

		private static final SubtypeQuery test_1690_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_1690() { testInvalid(test_1690_query); }

		private static final SubtypeQuery test_1691_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_1691() { testInvalid(test_1691_query); }

		private static final SubtypeQuery test_1692_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_1692() { testInvalid(test_1692_query); }

		private static final SubtypeQuery test_1693_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_1693() { testInvalid(test_1693_query); }

		private static final SubtypeQuery test_1694_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("(int | (any & any))"));
		@Test public void test_1694() { testInvalid(test_1694_query); }

		private static final SubtypeQuery test_1695_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_1695() { testInvalid(test_1695_query); }

		private static final SubtypeQuery test_1696_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_1696() { testInvalid(test_1696_query); }

		private static final SubtypeQuery test_1697_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_1697() { testInvalid(test_1697_query); }

		private static final SubtypeQuery test_1698_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_1698() { testInvalid(test_1698_query); }

		private static final SubtypeQuery test_1699_query = createSubtypeQuery(parseWhiley("{{int, any}, !int}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_1699() { testInvalid(test_1699_query); }

		private static final SubtypeQuery test_1700_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("!int"));
		@Test public void test_1700() { testInvalid(test_1700_query); }

		private static final SubtypeQuery test_1701_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("(any | any)"));
		@Test public void test_1701() { testInvalid(test_1701_query); }

		private static final SubtypeQuery test_1702_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("(any & any)"));
		@Test public void test_1702() { testInvalid(test_1702_query); }

		private static final SubtypeQuery test_1703_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{{int, int}}"));
		@Test public void test_1703() { testInvalid(test_1703_query); }

		private static final SubtypeQuery test_1704_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("!(int | int)"));
		@Test public void test_1704() { testInvalid(test_1704_query); }

		private static final SubtypeQuery test_1705_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_1705() { testInvalid(test_1705_query); }

		private static final SubtypeQuery test_1706_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_1706() { testInvalid(test_1706_query); }

		private static final SubtypeQuery test_1707_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{{any}, int}"));
		@Test public void test_1707() { testInvalid(test_1707_query); }

		private static final SubtypeQuery test_1708_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_1708() { testInvalid(test_1708_query); }

		private static final SubtypeQuery test_1709_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{(any | int), int}"));
		@Test public void test_1709() { testInvalid(test_1709_query); }

		private static final SubtypeQuery test_1710_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_1710() { testInvalid(test_1710_query); }

		private static final SubtypeQuery test_1711_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{!any, {int}}"));
		@Test public void test_1711() { testValid(test_1711_query); }

		private static final SubtypeQuery test_1712_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_1712() { testValid(test_1712_query); }

		private static final SubtypeQuery test_1713_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_1713() { testInvalid(test_1713_query); }

		private static final SubtypeQuery test_1714_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{any, !any}"));
		@Test public void test_1714() { testValid(test_1714_query); }

		private static final SubtypeQuery test_1715_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{{any}, !int}"));
		@Test public void test_1715() { testInvalid(test_1715_query); }

		private static final SubtypeQuery test_1716_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_1716() { testInvalid(test_1716_query); }

		private static final SubtypeQuery test_1717_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_1717() { testValid(test_1717_query); }

		private static final SubtypeQuery test_1718_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_1718() { testInvalid(test_1718_query); }

		private static final SubtypeQuery test_1719_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_1719() { testInvalid(test_1719_query); }

		private static final SubtypeQuery test_1720_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_1720() { testInvalid(test_1720_query); }

		private static final SubtypeQuery test_1721_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_1721() { testInvalid(test_1721_query); }

		private static final SubtypeQuery test_1722_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_1722() { testInvalid(test_1722_query); }

		private static final SubtypeQuery test_1723_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_1723() { testInvalid(test_1723_query); }

		private static final SubtypeQuery test_1724_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_1724() { testInvalid(test_1724_query); }

		private static final SubtypeQuery test_1725_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_1725() { testInvalid(test_1725_query); }

		private static final SubtypeQuery test_1726_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_1726() { testInvalid(test_1726_query); }

		private static final SubtypeQuery test_1727_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_1727() { testInvalid(test_1727_query); }

		private static final SubtypeQuery test_1728_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_1728() { testInvalid(test_1728_query); }

		private static final SubtypeQuery test_1729_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_1729() { testValid(test_1729_query); }

		private static final SubtypeQuery test_1730_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_1730() { testInvalid(test_1730_query); }

		private static final SubtypeQuery test_1731_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_1731() { testInvalid(test_1731_query); }

		private static final SubtypeQuery test_1732_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_1732() { testInvalid(test_1732_query); }

		private static final SubtypeQuery test_1733_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_1733() { testInvalid(test_1733_query); }

		private static final SubtypeQuery test_1734_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_1734() { testInvalid(test_1734_query); }

		private static final SubtypeQuery test_1735_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_1735() { testInvalid(test_1735_query); }

		private static final SubtypeQuery test_1736_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_1736() { testInvalid(test_1736_query); }

		private static final SubtypeQuery test_1737_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_1737() { testInvalid(test_1737_query); }

		private static final SubtypeQuery test_1738_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_1738() { testInvalid(test_1738_query); }

		private static final SubtypeQuery test_1739_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_1739() { testInvalid(test_1739_query); }

		private static final SubtypeQuery test_1740_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_1740() { testInvalid(test_1740_query); }

		private static final SubtypeQuery test_1741_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_1741() { testValid(test_1741_query); }

		private static final SubtypeQuery test_1742_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_1742() { testInvalid(test_1742_query); }

		private static final SubtypeQuery test_1743_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_1743() { testInvalid(test_1743_query); }

		private static final SubtypeQuery test_1744_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_1744() { testInvalid(test_1744_query); }

		private static final SubtypeQuery test_1745_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_1745() { testInvalid(test_1745_query); }

		private static final SubtypeQuery test_1746_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_1746() { testInvalid(test_1746_query); }

		private static final SubtypeQuery test_1747_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_1747() { testInvalid(test_1747_query); }

		private static final SubtypeQuery test_1748_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_1748() { testInvalid(test_1748_query); }

		private static final SubtypeQuery test_1749_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_1749() { testInvalid(test_1749_query); }

		private static final SubtypeQuery test_1750_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_1750() { testInvalid(test_1750_query); }

		private static final SubtypeQuery test_1751_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_1751() { testInvalid(test_1751_query); }

		private static final SubtypeQuery test_1752_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_1752() { testInvalid(test_1752_query); }

		private static final SubtypeQuery test_1753_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_1753() { testInvalid(test_1753_query); }

		private static final SubtypeQuery test_1754_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_1754() { testInvalid(test_1754_query); }

		private static final SubtypeQuery test_1755_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_1755() { testInvalid(test_1755_query); }

		private static final SubtypeQuery test_1756_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("(!any | any)"));
		@Test public void test_1756() { testInvalid(test_1756_query); }

		private static final SubtypeQuery test_1757_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("({int, any} | any)"));
		@Test public void test_1757() { testInvalid(test_1757_query); }

		private static final SubtypeQuery test_1758_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("({any, int} | any)"));
		@Test public void test_1758() { testInvalid(test_1758_query); }

		private static final SubtypeQuery test_1759_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("((int & int) | any)"));
		@Test public void test_1759() { testInvalid(test_1759_query); }

		private static final SubtypeQuery test_1760_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("({int, int} | int)"));
		@Test public void test_1760() { testInvalid(test_1760_query); }

		private static final SubtypeQuery test_1761_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("((any | any) | int)"));
		@Test public void test_1761() { testInvalid(test_1761_query); }

		private static final SubtypeQuery test_1762_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("((int | any) | int)"));
		@Test public void test_1762() { testInvalid(test_1762_query); }

		private static final SubtypeQuery test_1763_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("(any | {any})"));
		@Test public void test_1763() { testInvalid(test_1763_query); }

		private static final SubtypeQuery test_1764_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("(int | {any})"));
		@Test public void test_1764() { testInvalid(test_1764_query); }

		private static final SubtypeQuery test_1765_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_1765() { testInvalid(test_1765_query); }

		private static final SubtypeQuery test_1766_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("(any | {int})"));
		@Test public void test_1766() { testInvalid(test_1766_query); }

		private static final SubtypeQuery test_1767_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_1767() { testInvalid(test_1767_query); }

		private static final SubtypeQuery test_1768_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("(!int | !any)"));
		@Test public void test_1768() { testInvalid(test_1768_query); }

		private static final SubtypeQuery test_1769_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_1769() { testInvalid(test_1769_query); }

		private static final SubtypeQuery test_1770_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_1770() { testInvalid(test_1770_query); }

		private static final SubtypeQuery test_1771_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("({int} | !int)"));
		@Test public void test_1771() { testInvalid(test_1771_query); }

		private static final SubtypeQuery test_1772_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("(!any | !int)"));
		@Test public void test_1772() { testInvalid(test_1772_query); }

		private static final SubtypeQuery test_1773_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_1773() { testInvalid(test_1773_query); }

		private static final SubtypeQuery test_1774_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_1774() { testInvalid(test_1774_query); }

		private static final SubtypeQuery test_1775_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_1775() { testInvalid(test_1775_query); }

		private static final SubtypeQuery test_1776_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_1776() { testInvalid(test_1776_query); }

		private static final SubtypeQuery test_1777_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_1777() { testInvalid(test_1777_query); }

		private static final SubtypeQuery test_1778_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_1778() { testInvalid(test_1778_query); }

		private static final SubtypeQuery test_1779_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_1779() { testInvalid(test_1779_query); }

		private static final SubtypeQuery test_1780_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_1780() { testInvalid(test_1780_query); }

		private static final SubtypeQuery test_1781_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_1781() { testInvalid(test_1781_query); }

		private static final SubtypeQuery test_1782_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_1782() { testInvalid(test_1782_query); }

		private static final SubtypeQuery test_1783_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_1783() { testInvalid(test_1783_query); }

		private static final SubtypeQuery test_1784_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_1784() { testInvalid(test_1784_query); }

		private static final SubtypeQuery test_1785_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_1785() { testInvalid(test_1785_query); }

		private static final SubtypeQuery test_1786_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_1786() { testInvalid(test_1786_query); }

		private static final SubtypeQuery test_1787_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("(int | (any | int))"));
		@Test public void test_1787() { testInvalid(test_1787_query); }

		private static final SubtypeQuery test_1788_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_1788() { testInvalid(test_1788_query); }

		private static final SubtypeQuery test_1789_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_1789() { testInvalid(test_1789_query); }

		private static final SubtypeQuery test_1790_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_1790() { testInvalid(test_1790_query); }

		private static final SubtypeQuery test_1791_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_1791() { testInvalid(test_1791_query); }

		private static final SubtypeQuery test_1792_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_1792() { testInvalid(test_1792_query); }

		private static final SubtypeQuery test_1793_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_1793() { testInvalid(test_1793_query); }

		private static final SubtypeQuery test_1794_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("(int | (any & any))"));
		@Test public void test_1794() { testInvalid(test_1794_query); }

		private static final SubtypeQuery test_1795_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_1795() { testInvalid(test_1795_query); }

		private static final SubtypeQuery test_1796_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_1796() { testInvalid(test_1796_query); }

		private static final SubtypeQuery test_1797_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_1797() { testInvalid(test_1797_query); }

		private static final SubtypeQuery test_1798_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_1798() { testInvalid(test_1798_query); }

		private static final SubtypeQuery test_1799_query = createSubtypeQuery(parseWhiley("{{any, int}, !int}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_1799() { testInvalid(test_1799_query); }

		private static final SubtypeQuery test_1800_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("!int"));
		@Test public void test_1800() { testInvalid(test_1800_query); }

		private static final SubtypeQuery test_1801_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("(any | any)"));
		@Test public void test_1801() { testInvalid(test_1801_query); }

		private static final SubtypeQuery test_1802_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("(any & any)"));
		@Test public void test_1802() { testInvalid(test_1802_query); }

		private static final SubtypeQuery test_1803_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{{int, int}}"));
		@Test public void test_1803() { testInvalid(test_1803_query); }

		private static final SubtypeQuery test_1804_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("!(int | int)"));
		@Test public void test_1804() { testInvalid(test_1804_query); }

		private static final SubtypeQuery test_1805_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_1805() { testInvalid(test_1805_query); }

		private static final SubtypeQuery test_1806_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_1806() { testInvalid(test_1806_query); }

		private static final SubtypeQuery test_1807_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{{any}, int}"));
		@Test public void test_1807() { testInvalid(test_1807_query); }

		private static final SubtypeQuery test_1808_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_1808() { testInvalid(test_1808_query); }

		private static final SubtypeQuery test_1809_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{(any | int), int}"));
		@Test public void test_1809() { testInvalid(test_1809_query); }

		private static final SubtypeQuery test_1810_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_1810() { testInvalid(test_1810_query); }

		private static final SubtypeQuery test_1811_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{!any, {int}}"));
		@Test public void test_1811() { testValid(test_1811_query); }

		private static final SubtypeQuery test_1812_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_1812() { testInvalid(test_1812_query); }

		private static final SubtypeQuery test_1813_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_1813() { testValid(test_1813_query); }

		private static final SubtypeQuery test_1814_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{any, !any}"));
		@Test public void test_1814() { testValid(test_1814_query); }

		private static final SubtypeQuery test_1815_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{{any}, !int}"));
		@Test public void test_1815() { testInvalid(test_1815_query); }

		private static final SubtypeQuery test_1816_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_1816() { testInvalid(test_1816_query); }

		private static final SubtypeQuery test_1817_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_1817() { testInvalid(test_1817_query); }

		private static final SubtypeQuery test_1818_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_1818() { testValid(test_1818_query); }

		private static final SubtypeQuery test_1819_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_1819() { testInvalid(test_1819_query); }

		private static final SubtypeQuery test_1820_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_1820() { testInvalid(test_1820_query); }

		private static final SubtypeQuery test_1821_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_1821() { testValid(test_1821_query); }

		private static final SubtypeQuery test_1822_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_1822() { testValid(test_1822_query); }

		private static final SubtypeQuery test_1823_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_1823() { testInvalid(test_1823_query); }

		private static final SubtypeQuery test_1824_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_1824() { testValid(test_1824_query); }

		private static final SubtypeQuery test_1825_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_1825() { testValid(test_1825_query); }

		private static final SubtypeQuery test_1826_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_1826() { testInvalid(test_1826_query); }

		private static final SubtypeQuery test_1827_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_1827() { testInvalid(test_1827_query); }

		private static final SubtypeQuery test_1828_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_1828() { testInvalid(test_1828_query); }

		private static final SubtypeQuery test_1829_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_1829() { testValid(test_1829_query); }

		private static final SubtypeQuery test_1830_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_1830() { testInvalid(test_1830_query); }

		private static final SubtypeQuery test_1831_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_1831() { testValid(test_1831_query); }

		private static final SubtypeQuery test_1832_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_1832() { testInvalid(test_1832_query); }

		private static final SubtypeQuery test_1833_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_1833() { testInvalid(test_1833_query); }

		private static final SubtypeQuery test_1834_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_1834() { testInvalid(test_1834_query); }

		private static final SubtypeQuery test_1835_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_1835() { testInvalid(test_1835_query); }

		private static final SubtypeQuery test_1836_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_1836() { testInvalid(test_1836_query); }

		private static final SubtypeQuery test_1837_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_1837() { testInvalid(test_1837_query); }

		private static final SubtypeQuery test_1838_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_1838() { testInvalid(test_1838_query); }

		private static final SubtypeQuery test_1839_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_1839() { testInvalid(test_1839_query); }

		private static final SubtypeQuery test_1840_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_1840() { testInvalid(test_1840_query); }

		private static final SubtypeQuery test_1841_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_1841() { testValid(test_1841_query); }

		private static final SubtypeQuery test_1842_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_1842() { testInvalid(test_1842_query); }

		private static final SubtypeQuery test_1843_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_1843() { testInvalid(test_1843_query); }

		private static final SubtypeQuery test_1844_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_1844() { testInvalid(test_1844_query); }

		private static final SubtypeQuery test_1845_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_1845() { testInvalid(test_1845_query); }

		private static final SubtypeQuery test_1846_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_1846() { testInvalid(test_1846_query); }

		private static final SubtypeQuery test_1847_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_1847() { testInvalid(test_1847_query); }

		private static final SubtypeQuery test_1848_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_1848() { testInvalid(test_1848_query); }

		private static final SubtypeQuery test_1849_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_1849() { testInvalid(test_1849_query); }

		private static final SubtypeQuery test_1850_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_1850() { testInvalid(test_1850_query); }

		private static final SubtypeQuery test_1851_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_1851() { testInvalid(test_1851_query); }

		private static final SubtypeQuery test_1852_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_1852() { testInvalid(test_1852_query); }

		private static final SubtypeQuery test_1853_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_1853() { testInvalid(test_1853_query); }

		private static final SubtypeQuery test_1854_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_1854() { testInvalid(test_1854_query); }

		private static final SubtypeQuery test_1855_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_1855() { testInvalid(test_1855_query); }

		private static final SubtypeQuery test_1856_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("(!any | any)"));
		@Test public void test_1856() { testInvalid(test_1856_query); }

		private static final SubtypeQuery test_1857_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("({int, any} | any)"));
		@Test public void test_1857() { testInvalid(test_1857_query); }

		private static final SubtypeQuery test_1858_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("({any, int} | any)"));
		@Test public void test_1858() { testInvalid(test_1858_query); }

		private static final SubtypeQuery test_1859_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("((int & int) | any)"));
		@Test public void test_1859() { testInvalid(test_1859_query); }

		private static final SubtypeQuery test_1860_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("({int, int} | int)"));
		@Test public void test_1860() { testInvalid(test_1860_query); }

		private static final SubtypeQuery test_1861_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("((any | any) | int)"));
		@Test public void test_1861() { testInvalid(test_1861_query); }

		private static final SubtypeQuery test_1862_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("((int | any) | int)"));
		@Test public void test_1862() { testInvalid(test_1862_query); }

		private static final SubtypeQuery test_1863_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("(any | {any})"));
		@Test public void test_1863() { testInvalid(test_1863_query); }

		private static final SubtypeQuery test_1864_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("(int | {any})"));
		@Test public void test_1864() { testInvalid(test_1864_query); }

		private static final SubtypeQuery test_1865_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_1865() { testInvalid(test_1865_query); }

		private static final SubtypeQuery test_1866_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("(any | {int})"));
		@Test public void test_1866() { testInvalid(test_1866_query); }

		private static final SubtypeQuery test_1867_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_1867() { testInvalid(test_1867_query); }

		private static final SubtypeQuery test_1868_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("(!int | !any)"));
		@Test public void test_1868() { testInvalid(test_1868_query); }

		private static final SubtypeQuery test_1869_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_1869() { testInvalid(test_1869_query); }

		private static final SubtypeQuery test_1870_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_1870() { testInvalid(test_1870_query); }

		private static final SubtypeQuery test_1871_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("({int} | !int)"));
		@Test public void test_1871() { testInvalid(test_1871_query); }

		private static final SubtypeQuery test_1872_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("(!any | !int)"));
		@Test public void test_1872() { testInvalid(test_1872_query); }

		private static final SubtypeQuery test_1873_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_1873() { testInvalid(test_1873_query); }

		private static final SubtypeQuery test_1874_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_1874() { testInvalid(test_1874_query); }

		private static final SubtypeQuery test_1875_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_1875() { testInvalid(test_1875_query); }

		private static final SubtypeQuery test_1876_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_1876() { testInvalid(test_1876_query); }

		private static final SubtypeQuery test_1877_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_1877() { testInvalid(test_1877_query); }

		private static final SubtypeQuery test_1878_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_1878() { testInvalid(test_1878_query); }

		private static final SubtypeQuery test_1879_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_1879() { testInvalid(test_1879_query); }

		private static final SubtypeQuery test_1880_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_1880() { testInvalid(test_1880_query); }

		private static final SubtypeQuery test_1881_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_1881() { testInvalid(test_1881_query); }

		private static final SubtypeQuery test_1882_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_1882() { testInvalid(test_1882_query); }

		private static final SubtypeQuery test_1883_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_1883() { testInvalid(test_1883_query); }

		private static final SubtypeQuery test_1884_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_1884() { testInvalid(test_1884_query); }

		private static final SubtypeQuery test_1885_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_1885() { testInvalid(test_1885_query); }

		private static final SubtypeQuery test_1886_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_1886() { testInvalid(test_1886_query); }

		private static final SubtypeQuery test_1887_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("(int | (any | int))"));
		@Test public void test_1887() { testInvalid(test_1887_query); }

		private static final SubtypeQuery test_1888_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_1888() { testInvalid(test_1888_query); }

		private static final SubtypeQuery test_1889_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_1889() { testInvalid(test_1889_query); }

		private static final SubtypeQuery test_1890_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_1890() { testInvalid(test_1890_query); }

		private static final SubtypeQuery test_1891_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_1891() { testInvalid(test_1891_query); }

		private static final SubtypeQuery test_1892_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_1892() { testInvalid(test_1892_query); }

		private static final SubtypeQuery test_1893_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_1893() { testInvalid(test_1893_query); }

		private static final SubtypeQuery test_1894_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("(int | (any & any))"));
		@Test public void test_1894() { testInvalid(test_1894_query); }

		private static final SubtypeQuery test_1895_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_1895() { testInvalid(test_1895_query); }

		private static final SubtypeQuery test_1896_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_1896() { testInvalid(test_1896_query); }

		private static final SubtypeQuery test_1897_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_1897() { testInvalid(test_1897_query); }

		private static final SubtypeQuery test_1898_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_1898() { testInvalid(test_1898_query); }

		private static final SubtypeQuery test_1899_query = createSubtypeQuery(parseWhiley("{(int & int), !int}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_1899() { testInvalid(test_1899_query); }

		private static final SubtypeQuery test_1900_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("!int"));
		@Test public void test_1900() { testInvalid(test_1900_query); }

		private static final SubtypeQuery test_1901_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("(any | any)"));
		@Test public void test_1901() { testInvalid(test_1901_query); }

		private static final SubtypeQuery test_1902_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("(any & any)"));
		@Test public void test_1902() { testInvalid(test_1902_query); }

		private static final SubtypeQuery test_1903_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{{int, int}}"));
		@Test public void test_1903() { testInvalid(test_1903_query); }

		private static final SubtypeQuery test_1904_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("!(int | int)"));
		@Test public void test_1904() { testInvalid(test_1904_query); }

		private static final SubtypeQuery test_1905_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_1905() { testInvalid(test_1905_query); }

		private static final SubtypeQuery test_1906_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_1906() { testInvalid(test_1906_query); }

		private static final SubtypeQuery test_1907_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{{any}, int}"));
		@Test public void test_1907() { testInvalid(test_1907_query); }

		private static final SubtypeQuery test_1908_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_1908() { testInvalid(test_1908_query); }

		private static final SubtypeQuery test_1909_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{(any | int), int}"));
		@Test public void test_1909() { testInvalid(test_1909_query); }

		private static final SubtypeQuery test_1910_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_1910() { testInvalid(test_1910_query); }

		private static final SubtypeQuery test_1911_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{!any, {int}}"));
		@Test public void test_1911() { testValid(test_1911_query); }

		private static final SubtypeQuery test_1912_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_1912() { testInvalid(test_1912_query); }

		private static final SubtypeQuery test_1913_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_1913() { testInvalid(test_1913_query); }

		private static final SubtypeQuery test_1914_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{any, !any}"));
		@Test public void test_1914() { testValid(test_1914_query); }

		private static final SubtypeQuery test_1915_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{{any}, !int}"));
		@Test public void test_1915() { testInvalid(test_1915_query); }

		private static final SubtypeQuery test_1916_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_1916() { testInvalid(test_1916_query); }

		private static final SubtypeQuery test_1917_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_1917() { testInvalid(test_1917_query); }

		private static final SubtypeQuery test_1918_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_1918() { testInvalid(test_1918_query); }

		private static final SubtypeQuery test_1919_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_1919() { testValid(test_1919_query); }

		private static final SubtypeQuery test_1920_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_1920() { testValid(test_1920_query); }

		private static final SubtypeQuery test_1921_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_1921() { testValid(test_1921_query); }

		private static final SubtypeQuery test_1922_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_1922() { testValid(test_1922_query); }

		private static final SubtypeQuery test_1923_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_1923() { testValid(test_1923_query); }

		private static final SubtypeQuery test_1924_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_1924() { testValid(test_1924_query); }

		private static final SubtypeQuery test_1925_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_1925() { testValid(test_1925_query); }

		private static final SubtypeQuery test_1926_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_1926() { testValid(test_1926_query); }

		private static final SubtypeQuery test_1927_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_1927() { testValid(test_1927_query); }

		private static final SubtypeQuery test_1928_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_1928() { testValid(test_1928_query); }

		private static final SubtypeQuery test_1929_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_1929() { testValid(test_1929_query); }

		private static final SubtypeQuery test_1930_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_1930() { testValid(test_1930_query); }

		private static final SubtypeQuery test_1931_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_1931() { testValid(test_1931_query); }

		private static final SubtypeQuery test_1932_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_1932() { testInvalid(test_1932_query); }

		private static final SubtypeQuery test_1933_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_1933() { testInvalid(test_1933_query); }

		private static final SubtypeQuery test_1934_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_1934() { testInvalid(test_1934_query); }

		private static final SubtypeQuery test_1935_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_1935() { testInvalid(test_1935_query); }

		private static final SubtypeQuery test_1936_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_1936() { testInvalid(test_1936_query); }

		private static final SubtypeQuery test_1937_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_1937() { testInvalid(test_1937_query); }

		private static final SubtypeQuery test_1938_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_1938() { testInvalid(test_1938_query); }

		private static final SubtypeQuery test_1939_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_1939() { testInvalid(test_1939_query); }

		private static final SubtypeQuery test_1940_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_1940() { testInvalid(test_1940_query); }

		private static final SubtypeQuery test_1941_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_1941() { testValid(test_1941_query); }

		private static final SubtypeQuery test_1942_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_1942() { testInvalid(test_1942_query); }

		private static final SubtypeQuery test_1943_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_1943() { testInvalid(test_1943_query); }

		private static final SubtypeQuery test_1944_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_1944() { testInvalid(test_1944_query); }

		private static final SubtypeQuery test_1945_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_1945() { testInvalid(test_1945_query); }

		private static final SubtypeQuery test_1946_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_1946() { testInvalid(test_1946_query); }

		private static final SubtypeQuery test_1947_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_1947() { testInvalid(test_1947_query); }

		private static final SubtypeQuery test_1948_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_1948() { testInvalid(test_1948_query); }

		private static final SubtypeQuery test_1949_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_1949() { testInvalid(test_1949_query); }

		private static final SubtypeQuery test_1950_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_1950() { testInvalid(test_1950_query); }

		private static final SubtypeQuery test_1951_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_1951() { testInvalid(test_1951_query); }

		private static final SubtypeQuery test_1952_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_1952() { testInvalid(test_1952_query); }

		private static final SubtypeQuery test_1953_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_1953() { testInvalid(test_1953_query); }

		private static final SubtypeQuery test_1954_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_1954() { testInvalid(test_1954_query); }

		private static final SubtypeQuery test_1955_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_1955() { testInvalid(test_1955_query); }

		private static final SubtypeQuery test_1956_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("(!any | any)"));
		@Test public void test_1956() { testInvalid(test_1956_query); }

		private static final SubtypeQuery test_1957_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("({int, any} | any)"));
		@Test public void test_1957() { testInvalid(test_1957_query); }

		private static final SubtypeQuery test_1958_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("({any, int} | any)"));
		@Test public void test_1958() { testInvalid(test_1958_query); }

		private static final SubtypeQuery test_1959_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("((int & int) | any)"));
		@Test public void test_1959() { testInvalid(test_1959_query); }

		private static final SubtypeQuery test_1960_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("({int, int} | int)"));
		@Test public void test_1960() { testInvalid(test_1960_query); }

		private static final SubtypeQuery test_1961_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("((any | any) | int)"));
		@Test public void test_1961() { testInvalid(test_1961_query); }

		private static final SubtypeQuery test_1962_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("((int | any) | int)"));
		@Test public void test_1962() { testInvalid(test_1962_query); }

		private static final SubtypeQuery test_1963_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("(any | {any})"));
		@Test public void test_1963() { testInvalid(test_1963_query); }

		private static final SubtypeQuery test_1964_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("(int | {any})"));
		@Test public void test_1964() { testInvalid(test_1964_query); }

		private static final SubtypeQuery test_1965_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_1965() { testInvalid(test_1965_query); }

		private static final SubtypeQuery test_1966_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("(any | {int})"));
		@Test public void test_1966() { testInvalid(test_1966_query); }

		private static final SubtypeQuery test_1967_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_1967() { testInvalid(test_1967_query); }

		private static final SubtypeQuery test_1968_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("(!int | !any)"));
		@Test public void test_1968() { testInvalid(test_1968_query); }

		private static final SubtypeQuery test_1969_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_1969() { testInvalid(test_1969_query); }

		private static final SubtypeQuery test_1970_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_1970() { testInvalid(test_1970_query); }

		private static final SubtypeQuery test_1971_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("({int} | !int)"));
		@Test public void test_1971() { testInvalid(test_1971_query); }

		private static final SubtypeQuery test_1972_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("(!any | !int)"));
		@Test public void test_1972() { testInvalid(test_1972_query); }

		private static final SubtypeQuery test_1973_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_1973() { testInvalid(test_1973_query); }

		private static final SubtypeQuery test_1974_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_1974() { testInvalid(test_1974_query); }

		private static final SubtypeQuery test_1975_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_1975() { testInvalid(test_1975_query); }

		private static final SubtypeQuery test_1976_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_1976() { testInvalid(test_1976_query); }

		private static final SubtypeQuery test_1977_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_1977() { testInvalid(test_1977_query); }

		private static final SubtypeQuery test_1978_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_1978() { testInvalid(test_1978_query); }

		private static final SubtypeQuery test_1979_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_1979() { testInvalid(test_1979_query); }

		private static final SubtypeQuery test_1980_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_1980() { testInvalid(test_1980_query); }

		private static final SubtypeQuery test_1981_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_1981() { testInvalid(test_1981_query); }

		private static final SubtypeQuery test_1982_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_1982() { testInvalid(test_1982_query); }

		private static final SubtypeQuery test_1983_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_1983() { testInvalid(test_1983_query); }

		private static final SubtypeQuery test_1984_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_1984() { testInvalid(test_1984_query); }

		private static final SubtypeQuery test_1985_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_1985() { testInvalid(test_1985_query); }

		private static final SubtypeQuery test_1986_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_1986() { testInvalid(test_1986_query); }

		private static final SubtypeQuery test_1987_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("(int | (any | int))"));
		@Test public void test_1987() { testInvalid(test_1987_query); }

		private static final SubtypeQuery test_1988_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_1988() { testInvalid(test_1988_query); }

		private static final SubtypeQuery test_1989_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_1989() { testInvalid(test_1989_query); }

		private static final SubtypeQuery test_1990_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_1990() { testInvalid(test_1990_query); }

		private static final SubtypeQuery test_1991_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_1991() { testInvalid(test_1991_query); }

		private static final SubtypeQuery test_1992_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_1992() { testInvalid(test_1992_query); }

		private static final SubtypeQuery test_1993_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_1993() { testInvalid(test_1993_query); }

		private static final SubtypeQuery test_1994_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("(int | (any & any))"));
		@Test public void test_1994() { testInvalid(test_1994_query); }

		private static final SubtypeQuery test_1995_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_1995() { testInvalid(test_1995_query); }

		private static final SubtypeQuery test_1996_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_1996() { testInvalid(test_1996_query); }

		private static final SubtypeQuery test_1997_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_1997() { testInvalid(test_1997_query); }

		private static final SubtypeQuery test_1998_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_1998() { testInvalid(test_1998_query); }

		private static final SubtypeQuery test_1999_query = createSubtypeQuery(parseWhiley("{(int | any), {any, any}}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_1999() { testInvalid(test_1999_query); }

	}
	public static class Part_2 {
		private static final SubtypeQuery test_2000_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("!int"));
		@Test public void test_2000() { testInvalid(test_2000_query); }

		private static final SubtypeQuery test_2001_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("(any | any)"));
		@Test public void test_2001() { testInvalid(test_2001_query); }

		private static final SubtypeQuery test_2002_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("(any & any)"));
		@Test public void test_2002() { testInvalid(test_2002_query); }

		private static final SubtypeQuery test_2003_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{{int, int}}"));
		@Test public void test_2003() { testInvalid(test_2003_query); }

		private static final SubtypeQuery test_2004_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("!(int | int)"));
		@Test public void test_2004() { testInvalid(test_2004_query); }

		private static final SubtypeQuery test_2005_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_2005() { testInvalid(test_2005_query); }

		private static final SubtypeQuery test_2006_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_2006() { testInvalid(test_2006_query); }

		private static final SubtypeQuery test_2007_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{{any}, int}"));
		@Test public void test_2007() { testInvalid(test_2007_query); }

		private static final SubtypeQuery test_2008_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_2008() { testInvalid(test_2008_query); }

		private static final SubtypeQuery test_2009_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{(any | int), int}"));
		@Test public void test_2009() { testInvalid(test_2009_query); }

		private static final SubtypeQuery test_2010_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_2010() { testInvalid(test_2010_query); }

		private static final SubtypeQuery test_2011_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{!any, {int}}"));
		@Test public void test_2011() { testValid(test_2011_query); }

		private static final SubtypeQuery test_2012_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_2012() { testInvalid(test_2012_query); }

		private static final SubtypeQuery test_2013_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_2013() { testInvalid(test_2013_query); }

		private static final SubtypeQuery test_2014_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{any, !any}"));
		@Test public void test_2014() { testValid(test_2014_query); }

		private static final SubtypeQuery test_2015_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{{any}, !int}"));
		@Test public void test_2015() { testInvalid(test_2015_query); }

		private static final SubtypeQuery test_2016_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_2016() { testInvalid(test_2016_query); }

		private static final SubtypeQuery test_2017_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_2017() { testInvalid(test_2017_query); }

		private static final SubtypeQuery test_2018_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_2018() { testInvalid(test_2018_query); }

		private static final SubtypeQuery test_2019_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_2019() { testValid(test_2019_query); }

		private static final SubtypeQuery test_2020_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_2020() { testValid(test_2020_query); }

		private static final SubtypeQuery test_2021_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_2021() { testValid(test_2021_query); }

		private static final SubtypeQuery test_2022_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_2022() { testValid(test_2022_query); }

		private static final SubtypeQuery test_2023_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_2023() { testValid(test_2023_query); }

		private static final SubtypeQuery test_2024_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_2024() { testValid(test_2024_query); }

		private static final SubtypeQuery test_2025_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_2025() { testValid(test_2025_query); }

		private static final SubtypeQuery test_2026_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_2026() { testValid(test_2026_query); }

		private static final SubtypeQuery test_2027_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_2027() { testValid(test_2027_query); }

		private static final SubtypeQuery test_2028_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_2028() { testValid(test_2028_query); }

		private static final SubtypeQuery test_2029_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_2029() { testValid(test_2029_query); }

		private static final SubtypeQuery test_2030_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_2030() { testValid(test_2030_query); }

		private static final SubtypeQuery test_2031_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_2031() { testValid(test_2031_query); }

		private static final SubtypeQuery test_2032_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_2032() { testInvalid(test_2032_query); }

		private static final SubtypeQuery test_2033_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_2033() { testInvalid(test_2033_query); }

		private static final SubtypeQuery test_2034_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_2034() { testInvalid(test_2034_query); }

		private static final SubtypeQuery test_2035_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_2035() { testInvalid(test_2035_query); }

		private static final SubtypeQuery test_2036_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_2036() { testInvalid(test_2036_query); }

		private static final SubtypeQuery test_2037_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_2037() { testInvalid(test_2037_query); }

		private static final SubtypeQuery test_2038_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_2038() { testInvalid(test_2038_query); }

		private static final SubtypeQuery test_2039_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_2039() { testInvalid(test_2039_query); }

		private static final SubtypeQuery test_2040_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_2040() { testInvalid(test_2040_query); }

		private static final SubtypeQuery test_2041_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_2041() { testValid(test_2041_query); }

		private static final SubtypeQuery test_2042_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_2042() { testInvalid(test_2042_query); }

		private static final SubtypeQuery test_2043_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_2043() { testInvalid(test_2043_query); }

		private static final SubtypeQuery test_2044_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_2044() { testInvalid(test_2044_query); }

		private static final SubtypeQuery test_2045_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_2045() { testInvalid(test_2045_query); }

		private static final SubtypeQuery test_2046_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_2046() { testInvalid(test_2046_query); }

		private static final SubtypeQuery test_2047_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_2047() { testInvalid(test_2047_query); }

		private static final SubtypeQuery test_2048_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_2048() { testInvalid(test_2048_query); }

		private static final SubtypeQuery test_2049_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_2049() { testInvalid(test_2049_query); }

		private static final SubtypeQuery test_2050_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_2050() { testInvalid(test_2050_query); }

		private static final SubtypeQuery test_2051_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_2051() { testInvalid(test_2051_query); }

		private static final SubtypeQuery test_2052_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_2052() { testInvalid(test_2052_query); }

		private static final SubtypeQuery test_2053_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_2053() { testInvalid(test_2053_query); }

		private static final SubtypeQuery test_2054_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_2054() { testInvalid(test_2054_query); }

		private static final SubtypeQuery test_2055_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_2055() { testInvalid(test_2055_query); }

		private static final SubtypeQuery test_2056_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("(!any | any)"));
		@Test public void test_2056() { testInvalid(test_2056_query); }

		private static final SubtypeQuery test_2057_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("({int, any} | any)"));
		@Test public void test_2057() { testInvalid(test_2057_query); }

		private static final SubtypeQuery test_2058_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("({any, int} | any)"));
		@Test public void test_2058() { testInvalid(test_2058_query); }

		private static final SubtypeQuery test_2059_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("((int & int) | any)"));
		@Test public void test_2059() { testInvalid(test_2059_query); }

		private static final SubtypeQuery test_2060_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("({int, int} | int)"));
		@Test public void test_2060() { testInvalid(test_2060_query); }

		private static final SubtypeQuery test_2061_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("((any | any) | int)"));
		@Test public void test_2061() { testInvalid(test_2061_query); }

		private static final SubtypeQuery test_2062_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("((int | any) | int)"));
		@Test public void test_2062() { testInvalid(test_2062_query); }

		private static final SubtypeQuery test_2063_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("(any | {any})"));
		@Test public void test_2063() { testInvalid(test_2063_query); }

		private static final SubtypeQuery test_2064_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("(int | {any})"));
		@Test public void test_2064() { testInvalid(test_2064_query); }

		private static final SubtypeQuery test_2065_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_2065() { testInvalid(test_2065_query); }

		private static final SubtypeQuery test_2066_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("(any | {int})"));
		@Test public void test_2066() { testInvalid(test_2066_query); }

		private static final SubtypeQuery test_2067_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_2067() { testInvalid(test_2067_query); }

		private static final SubtypeQuery test_2068_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("(!int | !any)"));
		@Test public void test_2068() { testInvalid(test_2068_query); }

		private static final SubtypeQuery test_2069_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_2069() { testInvalid(test_2069_query); }

		private static final SubtypeQuery test_2070_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_2070() { testInvalid(test_2070_query); }

		private static final SubtypeQuery test_2071_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("({int} | !int)"));
		@Test public void test_2071() { testInvalid(test_2071_query); }

		private static final SubtypeQuery test_2072_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("(!any | !int)"));
		@Test public void test_2072() { testInvalid(test_2072_query); }

		private static final SubtypeQuery test_2073_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_2073() { testInvalid(test_2073_query); }

		private static final SubtypeQuery test_2074_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_2074() { testInvalid(test_2074_query); }

		private static final SubtypeQuery test_2075_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_2075() { testInvalid(test_2075_query); }

		private static final SubtypeQuery test_2076_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_2076() { testInvalid(test_2076_query); }

		private static final SubtypeQuery test_2077_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_2077() { testInvalid(test_2077_query); }

		private static final SubtypeQuery test_2078_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_2078() { testInvalid(test_2078_query); }

		private static final SubtypeQuery test_2079_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_2079() { testInvalid(test_2079_query); }

		private static final SubtypeQuery test_2080_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_2080() { testInvalid(test_2080_query); }

		private static final SubtypeQuery test_2081_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_2081() { testInvalid(test_2081_query); }

		private static final SubtypeQuery test_2082_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_2082() { testInvalid(test_2082_query); }

		private static final SubtypeQuery test_2083_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_2083() { testInvalid(test_2083_query); }

		private static final SubtypeQuery test_2084_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_2084() { testInvalid(test_2084_query); }

		private static final SubtypeQuery test_2085_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_2085() { testInvalid(test_2085_query); }

		private static final SubtypeQuery test_2086_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_2086() { testInvalid(test_2086_query); }

		private static final SubtypeQuery test_2087_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("(int | (any | int))"));
		@Test public void test_2087() { testInvalid(test_2087_query); }

		private static final SubtypeQuery test_2088_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_2088() { testInvalid(test_2088_query); }

		private static final SubtypeQuery test_2089_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_2089() { testInvalid(test_2089_query); }

		private static final SubtypeQuery test_2090_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_2090() { testInvalid(test_2090_query); }

		private static final SubtypeQuery test_2091_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_2091() { testInvalid(test_2091_query); }

		private static final SubtypeQuery test_2092_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_2092() { testInvalid(test_2092_query); }

		private static final SubtypeQuery test_2093_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_2093() { testInvalid(test_2093_query); }

		private static final SubtypeQuery test_2094_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("(int | (any & any))"));
		@Test public void test_2094() { testInvalid(test_2094_query); }

		private static final SubtypeQuery test_2095_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_2095() { testInvalid(test_2095_query); }

		private static final SubtypeQuery test_2096_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_2096() { testInvalid(test_2096_query); }

		private static final SubtypeQuery test_2097_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_2097() { testInvalid(test_2097_query); }

		private static final SubtypeQuery test_2098_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_2098() { testInvalid(test_2098_query); }

		private static final SubtypeQuery test_2099_query = createSubtypeQuery(parseWhiley("{(any | int), {any, any}}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_2099() { testInvalid(test_2099_query); }

		private static final SubtypeQuery test_2100_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("!int"));
		@Test public void test_2100() { testInvalid(test_2100_query); }

		private static final SubtypeQuery test_2101_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("(any | any)"));
		@Test public void test_2101() { testInvalid(test_2101_query); }

		private static final SubtypeQuery test_2102_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("(any & any)"));
		@Test public void test_2102() { testInvalid(test_2102_query); }

		private static final SubtypeQuery test_2103_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{{int, int}}"));
		@Test public void test_2103() { testInvalid(test_2103_query); }

		private static final SubtypeQuery test_2104_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("!(int | int)"));
		@Test public void test_2104() { testInvalid(test_2104_query); }

		private static final SubtypeQuery test_2105_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_2105() { testInvalid(test_2105_query); }

		private static final SubtypeQuery test_2106_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_2106() { testInvalid(test_2106_query); }

		private static final SubtypeQuery test_2107_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{{any}, int}"));
		@Test public void test_2107() { testInvalid(test_2107_query); }

		private static final SubtypeQuery test_2108_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_2108() { testInvalid(test_2108_query); }

		private static final SubtypeQuery test_2109_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{(any | int), int}"));
		@Test public void test_2109() { testInvalid(test_2109_query); }

		private static final SubtypeQuery test_2110_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_2110() { testInvalid(test_2110_query); }

		private static final SubtypeQuery test_2111_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{!any, {int}}"));
		@Test public void test_2111() { testValid(test_2111_query); }

		private static final SubtypeQuery test_2112_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_2112() { testInvalid(test_2112_query); }

		private static final SubtypeQuery test_2113_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_2113() { testInvalid(test_2113_query); }

		private static final SubtypeQuery test_2114_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{any, !any}"));
		@Test public void test_2114() { testValid(test_2114_query); }

		private static final SubtypeQuery test_2115_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{{any}, !int}"));
		@Test public void test_2115() { testInvalid(test_2115_query); }

		private static final SubtypeQuery test_2116_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_2116() { testInvalid(test_2116_query); }

		private static final SubtypeQuery test_2117_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_2117() { testInvalid(test_2117_query); }

		private static final SubtypeQuery test_2118_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_2118() { testInvalid(test_2118_query); }

		private static final SubtypeQuery test_2119_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_2119() { testInvalid(test_2119_query); }

		private static final SubtypeQuery test_2120_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_2120() { testInvalid(test_2120_query); }

		private static final SubtypeQuery test_2121_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_2121() { testValid(test_2121_query); }

		private static final SubtypeQuery test_2122_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_2122() { testValid(test_2122_query); }

		private static final SubtypeQuery test_2123_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_2123() { testInvalid(test_2123_query); }

		private static final SubtypeQuery test_2124_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_2124() { testValid(test_2124_query); }

		private static final SubtypeQuery test_2125_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_2125() { testValid(test_2125_query); }

		private static final SubtypeQuery test_2126_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_2126() { testInvalid(test_2126_query); }

		private static final SubtypeQuery test_2127_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_2127() { testInvalid(test_2127_query); }

		private static final SubtypeQuery test_2128_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_2128() { testInvalid(test_2128_query); }

		private static final SubtypeQuery test_2129_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_2129() { testValid(test_2129_query); }

		private static final SubtypeQuery test_2130_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_2130() { testInvalid(test_2130_query); }

		private static final SubtypeQuery test_2131_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_2131() { testValid(test_2131_query); }

		private static final SubtypeQuery test_2132_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_2132() { testInvalid(test_2132_query); }

		private static final SubtypeQuery test_2133_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_2133() { testInvalid(test_2133_query); }

		private static final SubtypeQuery test_2134_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_2134() { testInvalid(test_2134_query); }

		private static final SubtypeQuery test_2135_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_2135() { testInvalid(test_2135_query); }

		private static final SubtypeQuery test_2136_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_2136() { testInvalid(test_2136_query); }

		private static final SubtypeQuery test_2137_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_2137() { testInvalid(test_2137_query); }

		private static final SubtypeQuery test_2138_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_2138() { testInvalid(test_2138_query); }

		private static final SubtypeQuery test_2139_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_2139() { testInvalid(test_2139_query); }

		private static final SubtypeQuery test_2140_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_2140() { testInvalid(test_2140_query); }

		private static final SubtypeQuery test_2141_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_2141() { testValid(test_2141_query); }

		private static final SubtypeQuery test_2142_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_2142() { testInvalid(test_2142_query); }

		private static final SubtypeQuery test_2143_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_2143() { testInvalid(test_2143_query); }

		private static final SubtypeQuery test_2144_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_2144() { testInvalid(test_2144_query); }

		private static final SubtypeQuery test_2145_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_2145() { testInvalid(test_2145_query); }

		private static final SubtypeQuery test_2146_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_2146() { testInvalid(test_2146_query); }

		private static final SubtypeQuery test_2147_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_2147() { testInvalid(test_2147_query); }

		private static final SubtypeQuery test_2148_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_2148() { testInvalid(test_2148_query); }

		private static final SubtypeQuery test_2149_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_2149() { testInvalid(test_2149_query); }

		private static final SubtypeQuery test_2150_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_2150() { testInvalid(test_2150_query); }

		private static final SubtypeQuery test_2151_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_2151() { testInvalid(test_2151_query); }

		private static final SubtypeQuery test_2152_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_2152() { testInvalid(test_2152_query); }

		private static final SubtypeQuery test_2153_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_2153() { testInvalid(test_2153_query); }

		private static final SubtypeQuery test_2154_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_2154() { testInvalid(test_2154_query); }

		private static final SubtypeQuery test_2155_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_2155() { testInvalid(test_2155_query); }

		private static final SubtypeQuery test_2156_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("(!any | any)"));
		@Test public void test_2156() { testInvalid(test_2156_query); }

		private static final SubtypeQuery test_2157_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("({int, any} | any)"));
		@Test public void test_2157() { testInvalid(test_2157_query); }

		private static final SubtypeQuery test_2158_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("({any, int} | any)"));
		@Test public void test_2158() { testInvalid(test_2158_query); }

		private static final SubtypeQuery test_2159_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("((int & int) | any)"));
		@Test public void test_2159() { testInvalid(test_2159_query); }

		private static final SubtypeQuery test_2160_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("({int, int} | int)"));
		@Test public void test_2160() { testInvalid(test_2160_query); }

		private static final SubtypeQuery test_2161_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("((any | any) | int)"));
		@Test public void test_2161() { testInvalid(test_2161_query); }

		private static final SubtypeQuery test_2162_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("((int | any) | int)"));
		@Test public void test_2162() { testInvalid(test_2162_query); }

		private static final SubtypeQuery test_2163_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("(any | {any})"));
		@Test public void test_2163() { testInvalid(test_2163_query); }

		private static final SubtypeQuery test_2164_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("(int | {any})"));
		@Test public void test_2164() { testInvalid(test_2164_query); }

		private static final SubtypeQuery test_2165_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_2165() { testInvalid(test_2165_query); }

		private static final SubtypeQuery test_2166_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("(any | {int})"));
		@Test public void test_2166() { testInvalid(test_2166_query); }

		private static final SubtypeQuery test_2167_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_2167() { testInvalid(test_2167_query); }

		private static final SubtypeQuery test_2168_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("(!int | !any)"));
		@Test public void test_2168() { testInvalid(test_2168_query); }

		private static final SubtypeQuery test_2169_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_2169() { testInvalid(test_2169_query); }

		private static final SubtypeQuery test_2170_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_2170() { testInvalid(test_2170_query); }

		private static final SubtypeQuery test_2171_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("({int} | !int)"));
		@Test public void test_2171() { testInvalid(test_2171_query); }

		private static final SubtypeQuery test_2172_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("(!any | !int)"));
		@Test public void test_2172() { testInvalid(test_2172_query); }

		private static final SubtypeQuery test_2173_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_2173() { testInvalid(test_2173_query); }

		private static final SubtypeQuery test_2174_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_2174() { testInvalid(test_2174_query); }

		private static final SubtypeQuery test_2175_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_2175() { testInvalid(test_2175_query); }

		private static final SubtypeQuery test_2176_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_2176() { testInvalid(test_2176_query); }

		private static final SubtypeQuery test_2177_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_2177() { testInvalid(test_2177_query); }

		private static final SubtypeQuery test_2178_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_2178() { testInvalid(test_2178_query); }

		private static final SubtypeQuery test_2179_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_2179() { testInvalid(test_2179_query); }

		private static final SubtypeQuery test_2180_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_2180() { testInvalid(test_2180_query); }

		private static final SubtypeQuery test_2181_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_2181() { testInvalid(test_2181_query); }

		private static final SubtypeQuery test_2182_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_2182() { testInvalid(test_2182_query); }

		private static final SubtypeQuery test_2183_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_2183() { testInvalid(test_2183_query); }

		private static final SubtypeQuery test_2184_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_2184() { testInvalid(test_2184_query); }

		private static final SubtypeQuery test_2185_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_2185() { testInvalid(test_2185_query); }

		private static final SubtypeQuery test_2186_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_2186() { testInvalid(test_2186_query); }

		private static final SubtypeQuery test_2187_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("(int | (any | int))"));
		@Test public void test_2187() { testInvalid(test_2187_query); }

		private static final SubtypeQuery test_2188_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_2188() { testInvalid(test_2188_query); }

		private static final SubtypeQuery test_2189_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_2189() { testInvalid(test_2189_query); }

		private static final SubtypeQuery test_2190_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_2190() { testInvalid(test_2190_query); }

		private static final SubtypeQuery test_2191_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_2191() { testInvalid(test_2191_query); }

		private static final SubtypeQuery test_2192_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_2192() { testInvalid(test_2192_query); }

		private static final SubtypeQuery test_2193_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_2193() { testInvalid(test_2193_query); }

		private static final SubtypeQuery test_2194_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("(int | (any & any))"));
		@Test public void test_2194() { testInvalid(test_2194_query); }

		private static final SubtypeQuery test_2195_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_2195() { testInvalid(test_2195_query); }

		private static final SubtypeQuery test_2196_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_2196() { testInvalid(test_2196_query); }

		private static final SubtypeQuery test_2197_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_2197() { testInvalid(test_2197_query); }

		private static final SubtypeQuery test_2198_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_2198() { testInvalid(test_2198_query); }

		private static final SubtypeQuery test_2199_query = createSubtypeQuery(parseWhiley("{(int & any), {any, any}}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_2199() { testInvalid(test_2199_query); }

		private static final SubtypeQuery test_2200_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("!int"));
		@Test public void test_2200() { testInvalid(test_2200_query); }

		private static final SubtypeQuery test_2201_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("(any | any)"));
		@Test public void test_2201() { testInvalid(test_2201_query); }

		private static final SubtypeQuery test_2202_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("(any & any)"));
		@Test public void test_2202() { testInvalid(test_2202_query); }

		private static final SubtypeQuery test_2203_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{{int, int}}"));
		@Test public void test_2203() { testInvalid(test_2203_query); }

		private static final SubtypeQuery test_2204_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("!(int | int)"));
		@Test public void test_2204() { testInvalid(test_2204_query); }

		private static final SubtypeQuery test_2205_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_2205() { testInvalid(test_2205_query); }

		private static final SubtypeQuery test_2206_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_2206() { testInvalid(test_2206_query); }

		private static final SubtypeQuery test_2207_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{{any}, int}"));
		@Test public void test_2207() { testInvalid(test_2207_query); }

		private static final SubtypeQuery test_2208_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_2208() { testInvalid(test_2208_query); }

		private static final SubtypeQuery test_2209_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{(any | int), int}"));
		@Test public void test_2209() { testInvalid(test_2209_query); }

		private static final SubtypeQuery test_2210_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_2210() { testInvalid(test_2210_query); }

		private static final SubtypeQuery test_2211_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{!any, {int}}"));
		@Test public void test_2211() { testValid(test_2211_query); }

		private static final SubtypeQuery test_2212_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_2212() { testInvalid(test_2212_query); }

		private static final SubtypeQuery test_2213_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_2213() { testInvalid(test_2213_query); }

		private static final SubtypeQuery test_2214_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{any, !any}"));
		@Test public void test_2214() { testValid(test_2214_query); }

		private static final SubtypeQuery test_2215_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{{any}, !int}"));
		@Test public void test_2215() { testInvalid(test_2215_query); }

		private static final SubtypeQuery test_2216_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_2216() { testInvalid(test_2216_query); }

		private static final SubtypeQuery test_2217_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_2217() { testInvalid(test_2217_query); }

		private static final SubtypeQuery test_2218_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_2218() { testInvalid(test_2218_query); }

		private static final SubtypeQuery test_2219_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_2219() { testInvalid(test_2219_query); }

		private static final SubtypeQuery test_2220_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_2220() { testInvalid(test_2220_query); }

		private static final SubtypeQuery test_2221_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_2221() { testValid(test_2221_query); }

		private static final SubtypeQuery test_2222_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_2222() { testValid(test_2222_query); }

		private static final SubtypeQuery test_2223_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_2223() { testInvalid(test_2223_query); }

		private static final SubtypeQuery test_2224_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_2224() { testValid(test_2224_query); }

		private static final SubtypeQuery test_2225_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_2225() { testValid(test_2225_query); }

		private static final SubtypeQuery test_2226_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_2226() { testInvalid(test_2226_query); }

		private static final SubtypeQuery test_2227_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_2227() { testInvalid(test_2227_query); }

		private static final SubtypeQuery test_2228_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_2228() { testInvalid(test_2228_query); }

		private static final SubtypeQuery test_2229_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_2229() { testValid(test_2229_query); }

		private static final SubtypeQuery test_2230_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_2230() { testInvalid(test_2230_query); }

		private static final SubtypeQuery test_2231_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_2231() { testValid(test_2231_query); }

		private static final SubtypeQuery test_2232_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_2232() { testInvalid(test_2232_query); }

		private static final SubtypeQuery test_2233_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_2233() { testInvalid(test_2233_query); }

		private static final SubtypeQuery test_2234_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_2234() { testInvalid(test_2234_query); }

		private static final SubtypeQuery test_2235_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_2235() { testInvalid(test_2235_query); }

		private static final SubtypeQuery test_2236_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_2236() { testInvalid(test_2236_query); }

		private static final SubtypeQuery test_2237_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_2237() { testInvalid(test_2237_query); }

		private static final SubtypeQuery test_2238_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_2238() { testInvalid(test_2238_query); }

		private static final SubtypeQuery test_2239_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_2239() { testInvalid(test_2239_query); }

		private static final SubtypeQuery test_2240_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_2240() { testInvalid(test_2240_query); }

		private static final SubtypeQuery test_2241_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_2241() { testValid(test_2241_query); }

		private static final SubtypeQuery test_2242_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_2242() { testInvalid(test_2242_query); }

		private static final SubtypeQuery test_2243_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_2243() { testInvalid(test_2243_query); }

		private static final SubtypeQuery test_2244_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_2244() { testInvalid(test_2244_query); }

		private static final SubtypeQuery test_2245_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_2245() { testInvalid(test_2245_query); }

		private static final SubtypeQuery test_2246_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_2246() { testInvalid(test_2246_query); }

		private static final SubtypeQuery test_2247_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_2247() { testInvalid(test_2247_query); }

		private static final SubtypeQuery test_2248_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_2248() { testInvalid(test_2248_query); }

		private static final SubtypeQuery test_2249_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_2249() { testInvalid(test_2249_query); }

		private static final SubtypeQuery test_2250_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_2250() { testInvalid(test_2250_query); }

		private static final SubtypeQuery test_2251_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_2251() { testInvalid(test_2251_query); }

		private static final SubtypeQuery test_2252_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_2252() { testInvalid(test_2252_query); }

		private static final SubtypeQuery test_2253_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_2253() { testInvalid(test_2253_query); }

		private static final SubtypeQuery test_2254_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_2254() { testInvalid(test_2254_query); }

		private static final SubtypeQuery test_2255_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_2255() { testInvalid(test_2255_query); }

		private static final SubtypeQuery test_2256_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("(!any | any)"));
		@Test public void test_2256() { testInvalid(test_2256_query); }

		private static final SubtypeQuery test_2257_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("({int, any} | any)"));
		@Test public void test_2257() { testInvalid(test_2257_query); }

		private static final SubtypeQuery test_2258_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("({any, int} | any)"));
		@Test public void test_2258() { testInvalid(test_2258_query); }

		private static final SubtypeQuery test_2259_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("((int & int) | any)"));
		@Test public void test_2259() { testInvalid(test_2259_query); }

		private static final SubtypeQuery test_2260_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("({int, int} | int)"));
		@Test public void test_2260() { testInvalid(test_2260_query); }

		private static final SubtypeQuery test_2261_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("((any | any) | int)"));
		@Test public void test_2261() { testInvalid(test_2261_query); }

		private static final SubtypeQuery test_2262_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("((int | any) | int)"));
		@Test public void test_2262() { testInvalid(test_2262_query); }

		private static final SubtypeQuery test_2263_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("(any | {any})"));
		@Test public void test_2263() { testInvalid(test_2263_query); }

		private static final SubtypeQuery test_2264_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("(int | {any})"));
		@Test public void test_2264() { testInvalid(test_2264_query); }

		private static final SubtypeQuery test_2265_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_2265() { testInvalid(test_2265_query); }

		private static final SubtypeQuery test_2266_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("(any | {int})"));
		@Test public void test_2266() { testInvalid(test_2266_query); }

		private static final SubtypeQuery test_2267_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_2267() { testInvalid(test_2267_query); }

		private static final SubtypeQuery test_2268_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("(!int | !any)"));
		@Test public void test_2268() { testInvalid(test_2268_query); }

		private static final SubtypeQuery test_2269_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_2269() { testInvalid(test_2269_query); }

		private static final SubtypeQuery test_2270_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_2270() { testInvalid(test_2270_query); }

		private static final SubtypeQuery test_2271_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("({int} | !int)"));
		@Test public void test_2271() { testInvalid(test_2271_query); }

		private static final SubtypeQuery test_2272_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("(!any | !int)"));
		@Test public void test_2272() { testInvalid(test_2272_query); }

		private static final SubtypeQuery test_2273_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_2273() { testInvalid(test_2273_query); }

		private static final SubtypeQuery test_2274_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_2274() { testInvalid(test_2274_query); }

		private static final SubtypeQuery test_2275_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_2275() { testInvalid(test_2275_query); }

		private static final SubtypeQuery test_2276_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_2276() { testInvalid(test_2276_query); }

		private static final SubtypeQuery test_2277_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_2277() { testInvalid(test_2277_query); }

		private static final SubtypeQuery test_2278_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_2278() { testInvalid(test_2278_query); }

		private static final SubtypeQuery test_2279_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_2279() { testInvalid(test_2279_query); }

		private static final SubtypeQuery test_2280_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_2280() { testInvalid(test_2280_query); }

		private static final SubtypeQuery test_2281_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_2281() { testInvalid(test_2281_query); }

		private static final SubtypeQuery test_2282_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_2282() { testInvalid(test_2282_query); }

		private static final SubtypeQuery test_2283_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_2283() { testInvalid(test_2283_query); }

		private static final SubtypeQuery test_2284_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_2284() { testInvalid(test_2284_query); }

		private static final SubtypeQuery test_2285_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_2285() { testInvalid(test_2285_query); }

		private static final SubtypeQuery test_2286_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_2286() { testInvalid(test_2286_query); }

		private static final SubtypeQuery test_2287_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("(int | (any | int))"));
		@Test public void test_2287() { testInvalid(test_2287_query); }

		private static final SubtypeQuery test_2288_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_2288() { testInvalid(test_2288_query); }

		private static final SubtypeQuery test_2289_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_2289() { testInvalid(test_2289_query); }

		private static final SubtypeQuery test_2290_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_2290() { testInvalid(test_2290_query); }

		private static final SubtypeQuery test_2291_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_2291() { testInvalid(test_2291_query); }

		private static final SubtypeQuery test_2292_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_2292() { testInvalid(test_2292_query); }

		private static final SubtypeQuery test_2293_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_2293() { testInvalid(test_2293_query); }

		private static final SubtypeQuery test_2294_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("(int | (any & any))"));
		@Test public void test_2294() { testInvalid(test_2294_query); }

		private static final SubtypeQuery test_2295_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_2295() { testInvalid(test_2295_query); }

		private static final SubtypeQuery test_2296_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_2296() { testInvalid(test_2296_query); }

		private static final SubtypeQuery test_2297_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_2297() { testInvalid(test_2297_query); }

		private static final SubtypeQuery test_2298_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_2298() { testInvalid(test_2298_query); }

		private static final SubtypeQuery test_2299_query = createSubtypeQuery(parseWhiley("{(any & int), {any, any}}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_2299() { testInvalid(test_2299_query); }

		private static final SubtypeQuery test_2300_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("!int"));
		@Test public void test_2300() { testInvalid(test_2300_query); }

		private static final SubtypeQuery test_2301_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("(any | any)"));
		@Test public void test_2301() { testInvalid(test_2301_query); }

		private static final SubtypeQuery test_2302_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("(any & any)"));
		@Test public void test_2302() { testInvalid(test_2302_query); }

		private static final SubtypeQuery test_2303_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{{int, int}}"));
		@Test public void test_2303() { testInvalid(test_2303_query); }

		private static final SubtypeQuery test_2304_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("!(int | int)"));
		@Test public void test_2304() { testInvalid(test_2304_query); }

		private static final SubtypeQuery test_2305_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_2305() { testInvalid(test_2305_query); }

		private static final SubtypeQuery test_2306_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_2306() { testInvalid(test_2306_query); }

		private static final SubtypeQuery test_2307_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{{any}, int}"));
		@Test public void test_2307() { testInvalid(test_2307_query); }

		private static final SubtypeQuery test_2308_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_2308() { testInvalid(test_2308_query); }

		private static final SubtypeQuery test_2309_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{(any | int), int}"));
		@Test public void test_2309() { testInvalid(test_2309_query); }

		private static final SubtypeQuery test_2310_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_2310() { testInvalid(test_2310_query); }

		private static final SubtypeQuery test_2311_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{!any, {int}}"));
		@Test public void test_2311() { testValid(test_2311_query); }

		private static final SubtypeQuery test_2312_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_2312() { testInvalid(test_2312_query); }

		private static final SubtypeQuery test_2313_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_2313() { testInvalid(test_2313_query); }

		private static final SubtypeQuery test_2314_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{any, !any}"));
		@Test public void test_2314() { testValid(test_2314_query); }

		private static final SubtypeQuery test_2315_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{{any}, !int}"));
		@Test public void test_2315() { testInvalid(test_2315_query); }

		private static final SubtypeQuery test_2316_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_2316() { testInvalid(test_2316_query); }

		private static final SubtypeQuery test_2317_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_2317() { testInvalid(test_2317_query); }

		private static final SubtypeQuery test_2318_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_2318() { testInvalid(test_2318_query); }

		private static final SubtypeQuery test_2319_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_2319() { testInvalid(test_2319_query); }

		private static final SubtypeQuery test_2320_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_2320() { testInvalid(test_2320_query); }

		private static final SubtypeQuery test_2321_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_2321() { testInvalid(test_2321_query); }

		private static final SubtypeQuery test_2322_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_2322() { testInvalid(test_2322_query); }

		private static final SubtypeQuery test_2323_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_2323() { testValid(test_2323_query); }

		private static final SubtypeQuery test_2324_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_2324() { testInvalid(test_2324_query); }

		private static final SubtypeQuery test_2325_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_2325() { testInvalid(test_2325_query); }

		private static final SubtypeQuery test_2326_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_2326() { testInvalid(test_2326_query); }

		private static final SubtypeQuery test_2327_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_2327() { testInvalid(test_2327_query); }

		private static final SubtypeQuery test_2328_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_2328() { testInvalid(test_2328_query); }

		private static final SubtypeQuery test_2329_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_2329() { testValid(test_2329_query); }

		private static final SubtypeQuery test_2330_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_2330() { testInvalid(test_2330_query); }

		private static final SubtypeQuery test_2331_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_2331() { testInvalid(test_2331_query); }

		private static final SubtypeQuery test_2332_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_2332() { testInvalid(test_2332_query); }

		private static final SubtypeQuery test_2333_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_2333() { testInvalid(test_2333_query); }

		private static final SubtypeQuery test_2334_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_2334() { testInvalid(test_2334_query); }

		private static final SubtypeQuery test_2335_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_2335() { testInvalid(test_2335_query); }

		private static final SubtypeQuery test_2336_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_2336() { testInvalid(test_2336_query); }

		private static final SubtypeQuery test_2337_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_2337() { testInvalid(test_2337_query); }

		private static final SubtypeQuery test_2338_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_2338() { testInvalid(test_2338_query); }

		private static final SubtypeQuery test_2339_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_2339() { testInvalid(test_2339_query); }

		private static final SubtypeQuery test_2340_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_2340() { testInvalid(test_2340_query); }

		private static final SubtypeQuery test_2341_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_2341() { testValid(test_2341_query); }

		private static final SubtypeQuery test_2342_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_2342() { testInvalid(test_2342_query); }

		private static final SubtypeQuery test_2343_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_2343() { testInvalid(test_2343_query); }

		private static final SubtypeQuery test_2344_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_2344() { testInvalid(test_2344_query); }

		private static final SubtypeQuery test_2345_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_2345() { testInvalid(test_2345_query); }

		private static final SubtypeQuery test_2346_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_2346() { testInvalid(test_2346_query); }

		private static final SubtypeQuery test_2347_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_2347() { testInvalid(test_2347_query); }

		private static final SubtypeQuery test_2348_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_2348() { testInvalid(test_2348_query); }

		private static final SubtypeQuery test_2349_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_2349() { testInvalid(test_2349_query); }

		private static final SubtypeQuery test_2350_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_2350() { testInvalid(test_2350_query); }

		private static final SubtypeQuery test_2351_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_2351() { testInvalid(test_2351_query); }

		private static final SubtypeQuery test_2352_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_2352() { testInvalid(test_2352_query); }

		private static final SubtypeQuery test_2353_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_2353() { testInvalid(test_2353_query); }

		private static final SubtypeQuery test_2354_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_2354() { testInvalid(test_2354_query); }

		private static final SubtypeQuery test_2355_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_2355() { testInvalid(test_2355_query); }

		private static final SubtypeQuery test_2356_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("(!any | any)"));
		@Test public void test_2356() { testInvalid(test_2356_query); }

		private static final SubtypeQuery test_2357_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("({int, any} | any)"));
		@Test public void test_2357() { testInvalid(test_2357_query); }

		private static final SubtypeQuery test_2358_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("({any, int} | any)"));
		@Test public void test_2358() { testInvalid(test_2358_query); }

		private static final SubtypeQuery test_2359_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("((int & int) | any)"));
		@Test public void test_2359() { testInvalid(test_2359_query); }

		private static final SubtypeQuery test_2360_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("({int, int} | int)"));
		@Test public void test_2360() { testInvalid(test_2360_query); }

		private static final SubtypeQuery test_2361_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("((any | any) | int)"));
		@Test public void test_2361() { testInvalid(test_2361_query); }

		private static final SubtypeQuery test_2362_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("((int | any) | int)"));
		@Test public void test_2362() { testInvalid(test_2362_query); }

		private static final SubtypeQuery test_2363_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("(any | {any})"));
		@Test public void test_2363() { testInvalid(test_2363_query); }

		private static final SubtypeQuery test_2364_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("(int | {any})"));
		@Test public void test_2364() { testInvalid(test_2364_query); }

		private static final SubtypeQuery test_2365_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_2365() { testInvalid(test_2365_query); }

		private static final SubtypeQuery test_2366_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("(any | {int})"));
		@Test public void test_2366() { testInvalid(test_2366_query); }

		private static final SubtypeQuery test_2367_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_2367() { testInvalid(test_2367_query); }

		private static final SubtypeQuery test_2368_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("(!int | !any)"));
		@Test public void test_2368() { testInvalid(test_2368_query); }

		private static final SubtypeQuery test_2369_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_2369() { testInvalid(test_2369_query); }

		private static final SubtypeQuery test_2370_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_2370() { testInvalid(test_2370_query); }

		private static final SubtypeQuery test_2371_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("({int} | !int)"));
		@Test public void test_2371() { testInvalid(test_2371_query); }

		private static final SubtypeQuery test_2372_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("(!any | !int)"));
		@Test public void test_2372() { testInvalid(test_2372_query); }

		private static final SubtypeQuery test_2373_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_2373() { testInvalid(test_2373_query); }

		private static final SubtypeQuery test_2374_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_2374() { testInvalid(test_2374_query); }

		private static final SubtypeQuery test_2375_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_2375() { testInvalid(test_2375_query); }

		private static final SubtypeQuery test_2376_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_2376() { testInvalid(test_2376_query); }

		private static final SubtypeQuery test_2377_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_2377() { testInvalid(test_2377_query); }

		private static final SubtypeQuery test_2378_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_2378() { testInvalid(test_2378_query); }

		private static final SubtypeQuery test_2379_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_2379() { testInvalid(test_2379_query); }

		private static final SubtypeQuery test_2380_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_2380() { testInvalid(test_2380_query); }

		private static final SubtypeQuery test_2381_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_2381() { testInvalid(test_2381_query); }

		private static final SubtypeQuery test_2382_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_2382() { testInvalid(test_2382_query); }

		private static final SubtypeQuery test_2383_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_2383() { testInvalid(test_2383_query); }

		private static final SubtypeQuery test_2384_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_2384() { testInvalid(test_2384_query); }

		private static final SubtypeQuery test_2385_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_2385() { testInvalid(test_2385_query); }

		private static final SubtypeQuery test_2386_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_2386() { testInvalid(test_2386_query); }

		private static final SubtypeQuery test_2387_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("(int | (any | int))"));
		@Test public void test_2387() { testInvalid(test_2387_query); }

		private static final SubtypeQuery test_2388_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_2388() { testInvalid(test_2388_query); }

		private static final SubtypeQuery test_2389_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_2389() { testInvalid(test_2389_query); }

		private static final SubtypeQuery test_2390_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_2390() { testInvalid(test_2390_query); }

		private static final SubtypeQuery test_2391_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_2391() { testInvalid(test_2391_query); }

		private static final SubtypeQuery test_2392_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_2392() { testInvalid(test_2392_query); }

		private static final SubtypeQuery test_2393_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_2393() { testInvalid(test_2393_query); }

		private static final SubtypeQuery test_2394_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("(int | (any & any))"));
		@Test public void test_2394() { testInvalid(test_2394_query); }

		private static final SubtypeQuery test_2395_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_2395() { testInvalid(test_2395_query); }

		private static final SubtypeQuery test_2396_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_2396() { testInvalid(test_2396_query); }

		private static final SubtypeQuery test_2397_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_2397() { testInvalid(test_2397_query); }

		private static final SubtypeQuery test_2398_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_2398() { testInvalid(test_2398_query); }

		private static final SubtypeQuery test_2399_query = createSubtypeQuery(parseWhiley("{{int, any}, {int, any}}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_2399() { testInvalid(test_2399_query); }

		private static final SubtypeQuery test_2400_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("!int"));
		@Test public void test_2400() { testInvalid(test_2400_query); }

		private static final SubtypeQuery test_2401_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("(any | any)"));
		@Test public void test_2401() { testInvalid(test_2401_query); }

		private static final SubtypeQuery test_2402_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("(any & any)"));
		@Test public void test_2402() { testInvalid(test_2402_query); }

		private static final SubtypeQuery test_2403_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{{int, int}}"));
		@Test public void test_2403() { testInvalid(test_2403_query); }

		private static final SubtypeQuery test_2404_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("!(int | int)"));
		@Test public void test_2404() { testInvalid(test_2404_query); }

		private static final SubtypeQuery test_2405_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_2405() { testInvalid(test_2405_query); }

		private static final SubtypeQuery test_2406_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_2406() { testInvalid(test_2406_query); }

		private static final SubtypeQuery test_2407_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{{any}, int}"));
		@Test public void test_2407() { testInvalid(test_2407_query); }

		private static final SubtypeQuery test_2408_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_2408() { testInvalid(test_2408_query); }

		private static final SubtypeQuery test_2409_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{(any | int), int}"));
		@Test public void test_2409() { testInvalid(test_2409_query); }

		private static final SubtypeQuery test_2410_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_2410() { testInvalid(test_2410_query); }

		private static final SubtypeQuery test_2411_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{!any, {int}}"));
		@Test public void test_2411() { testValid(test_2411_query); }

		private static final SubtypeQuery test_2412_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_2412() { testInvalid(test_2412_query); }

		private static final SubtypeQuery test_2413_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_2413() { testInvalid(test_2413_query); }

		private static final SubtypeQuery test_2414_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{any, !any}"));
		@Test public void test_2414() { testValid(test_2414_query); }

		private static final SubtypeQuery test_2415_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{{any}, !int}"));
		@Test public void test_2415() { testInvalid(test_2415_query); }

		private static final SubtypeQuery test_2416_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_2416() { testInvalid(test_2416_query); }

		private static final SubtypeQuery test_2417_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_2417() { testInvalid(test_2417_query); }

		private static final SubtypeQuery test_2418_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_2418() { testInvalid(test_2418_query); }

		private static final SubtypeQuery test_2419_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_2419() { testInvalid(test_2419_query); }

		private static final SubtypeQuery test_2420_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_2420() { testInvalid(test_2420_query); }

		private static final SubtypeQuery test_2421_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_2421() { testInvalid(test_2421_query); }

		private static final SubtypeQuery test_2422_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_2422() { testInvalid(test_2422_query); }

		private static final SubtypeQuery test_2423_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_2423() { testInvalid(test_2423_query); }

		private static final SubtypeQuery test_2424_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_2424() { testValid(test_2424_query); }

		private static final SubtypeQuery test_2425_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_2425() { testValid(test_2425_query); }

		private static final SubtypeQuery test_2426_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_2426() { testInvalid(test_2426_query); }

		private static final SubtypeQuery test_2427_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_2427() { testInvalid(test_2427_query); }

		private static final SubtypeQuery test_2428_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_2428() { testInvalid(test_2428_query); }

		private static final SubtypeQuery test_2429_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_2429() { testValid(test_2429_query); }

		private static final SubtypeQuery test_2430_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_2430() { testInvalid(test_2430_query); }

		private static final SubtypeQuery test_2431_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_2431() { testValid(test_2431_query); }

		private static final SubtypeQuery test_2432_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_2432() { testInvalid(test_2432_query); }

		private static final SubtypeQuery test_2433_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_2433() { testInvalid(test_2433_query); }

		private static final SubtypeQuery test_2434_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_2434() { testInvalid(test_2434_query); }

		private static final SubtypeQuery test_2435_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_2435() { testInvalid(test_2435_query); }

		private static final SubtypeQuery test_2436_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_2436() { testInvalid(test_2436_query); }

		private static final SubtypeQuery test_2437_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_2437() { testInvalid(test_2437_query); }

		private static final SubtypeQuery test_2438_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_2438() { testInvalid(test_2438_query); }

		private static final SubtypeQuery test_2439_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_2439() { testInvalid(test_2439_query); }

		private static final SubtypeQuery test_2440_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_2440() { testInvalid(test_2440_query); }

		private static final SubtypeQuery test_2441_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_2441() { testValid(test_2441_query); }

		private static final SubtypeQuery test_2442_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_2442() { testInvalid(test_2442_query); }

		private static final SubtypeQuery test_2443_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_2443() { testInvalid(test_2443_query); }

		private static final SubtypeQuery test_2444_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_2444() { testInvalid(test_2444_query); }

		private static final SubtypeQuery test_2445_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_2445() { testInvalid(test_2445_query); }

		private static final SubtypeQuery test_2446_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_2446() { testInvalid(test_2446_query); }

		private static final SubtypeQuery test_2447_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_2447() { testInvalid(test_2447_query); }

		private static final SubtypeQuery test_2448_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_2448() { testInvalid(test_2448_query); }

		private static final SubtypeQuery test_2449_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_2449() { testInvalid(test_2449_query); }

		private static final SubtypeQuery test_2450_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_2450() { testInvalid(test_2450_query); }

		private static final SubtypeQuery test_2451_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_2451() { testInvalid(test_2451_query); }

		private static final SubtypeQuery test_2452_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_2452() { testInvalid(test_2452_query); }

		private static final SubtypeQuery test_2453_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_2453() { testInvalid(test_2453_query); }

		private static final SubtypeQuery test_2454_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_2454() { testInvalid(test_2454_query); }

		private static final SubtypeQuery test_2455_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_2455() { testInvalid(test_2455_query); }

		private static final SubtypeQuery test_2456_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("(!any | any)"));
		@Test public void test_2456() { testInvalid(test_2456_query); }

		private static final SubtypeQuery test_2457_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("({int, any} | any)"));
		@Test public void test_2457() { testInvalid(test_2457_query); }

		private static final SubtypeQuery test_2458_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("({any, int} | any)"));
		@Test public void test_2458() { testInvalid(test_2458_query); }

		private static final SubtypeQuery test_2459_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("((int & int) | any)"));
		@Test public void test_2459() { testInvalid(test_2459_query); }

		private static final SubtypeQuery test_2460_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("({int, int} | int)"));
		@Test public void test_2460() { testInvalid(test_2460_query); }

		private static final SubtypeQuery test_2461_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("((any | any) | int)"));
		@Test public void test_2461() { testInvalid(test_2461_query); }

		private static final SubtypeQuery test_2462_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("((int | any) | int)"));
		@Test public void test_2462() { testInvalid(test_2462_query); }

		private static final SubtypeQuery test_2463_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("(any | {any})"));
		@Test public void test_2463() { testInvalid(test_2463_query); }

		private static final SubtypeQuery test_2464_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("(int | {any})"));
		@Test public void test_2464() { testInvalid(test_2464_query); }

		private static final SubtypeQuery test_2465_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_2465() { testInvalid(test_2465_query); }

		private static final SubtypeQuery test_2466_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("(any | {int})"));
		@Test public void test_2466() { testInvalid(test_2466_query); }

		private static final SubtypeQuery test_2467_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_2467() { testInvalid(test_2467_query); }

		private static final SubtypeQuery test_2468_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("(!int | !any)"));
		@Test public void test_2468() { testInvalid(test_2468_query); }

		private static final SubtypeQuery test_2469_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_2469() { testInvalid(test_2469_query); }

		private static final SubtypeQuery test_2470_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_2470() { testInvalid(test_2470_query); }

		private static final SubtypeQuery test_2471_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("({int} | !int)"));
		@Test public void test_2471() { testInvalid(test_2471_query); }

		private static final SubtypeQuery test_2472_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("(!any | !int)"));
		@Test public void test_2472() { testInvalid(test_2472_query); }

		private static final SubtypeQuery test_2473_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_2473() { testInvalid(test_2473_query); }

		private static final SubtypeQuery test_2474_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_2474() { testInvalid(test_2474_query); }

		private static final SubtypeQuery test_2475_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_2475() { testInvalid(test_2475_query); }

		private static final SubtypeQuery test_2476_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_2476() { testInvalid(test_2476_query); }

		private static final SubtypeQuery test_2477_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_2477() { testInvalid(test_2477_query); }

		private static final SubtypeQuery test_2478_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_2478() { testInvalid(test_2478_query); }

		private static final SubtypeQuery test_2479_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_2479() { testInvalid(test_2479_query); }

		private static final SubtypeQuery test_2480_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_2480() { testInvalid(test_2480_query); }

		private static final SubtypeQuery test_2481_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_2481() { testInvalid(test_2481_query); }

		private static final SubtypeQuery test_2482_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_2482() { testInvalid(test_2482_query); }

		private static final SubtypeQuery test_2483_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_2483() { testInvalid(test_2483_query); }

		private static final SubtypeQuery test_2484_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_2484() { testInvalid(test_2484_query); }

		private static final SubtypeQuery test_2485_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_2485() { testInvalid(test_2485_query); }

		private static final SubtypeQuery test_2486_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_2486() { testInvalid(test_2486_query); }

		private static final SubtypeQuery test_2487_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("(int | (any | int))"));
		@Test public void test_2487() { testInvalid(test_2487_query); }

		private static final SubtypeQuery test_2488_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_2488() { testInvalid(test_2488_query); }

		private static final SubtypeQuery test_2489_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_2489() { testInvalid(test_2489_query); }

		private static final SubtypeQuery test_2490_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_2490() { testInvalid(test_2490_query); }

		private static final SubtypeQuery test_2491_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_2491() { testInvalid(test_2491_query); }

		private static final SubtypeQuery test_2492_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_2492() { testInvalid(test_2492_query); }

		private static final SubtypeQuery test_2493_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_2493() { testInvalid(test_2493_query); }

		private static final SubtypeQuery test_2494_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("(int | (any & any))"));
		@Test public void test_2494() { testInvalid(test_2494_query); }

		private static final SubtypeQuery test_2495_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_2495() { testInvalid(test_2495_query); }

		private static final SubtypeQuery test_2496_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_2496() { testInvalid(test_2496_query); }

		private static final SubtypeQuery test_2497_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_2497() { testInvalid(test_2497_query); }

		private static final SubtypeQuery test_2498_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_2498() { testInvalid(test_2498_query); }

		private static final SubtypeQuery test_2499_query = createSubtypeQuery(parseWhiley("{(int | int), {int, any}}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_2499() { testInvalid(test_2499_query); }

		private static final SubtypeQuery test_2500_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("!int"));
		@Test public void test_2500() { testInvalid(test_2500_query); }

		private static final SubtypeQuery test_2501_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("(any | any)"));
		@Test public void test_2501() { testInvalid(test_2501_query); }

		private static final SubtypeQuery test_2502_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("(any & any)"));
		@Test public void test_2502() { testInvalid(test_2502_query); }

		private static final SubtypeQuery test_2503_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{{int, int}}"));
		@Test public void test_2503() { testInvalid(test_2503_query); }

		private static final SubtypeQuery test_2504_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("!(int | int)"));
		@Test public void test_2504() { testInvalid(test_2504_query); }

		private static final SubtypeQuery test_2505_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_2505() { testInvalid(test_2505_query); }

		private static final SubtypeQuery test_2506_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_2506() { testInvalid(test_2506_query); }

		private static final SubtypeQuery test_2507_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{{any}, int}"));
		@Test public void test_2507() { testInvalid(test_2507_query); }

		private static final SubtypeQuery test_2508_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_2508() { testInvalid(test_2508_query); }

		private static final SubtypeQuery test_2509_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{(any | int), int}"));
		@Test public void test_2509() { testInvalid(test_2509_query); }

		private static final SubtypeQuery test_2510_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_2510() { testInvalid(test_2510_query); }

		private static final SubtypeQuery test_2511_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{!any, {int}}"));
		@Test public void test_2511() { testValid(test_2511_query); }

		private static final SubtypeQuery test_2512_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_2512() { testInvalid(test_2512_query); }

		private static final SubtypeQuery test_2513_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_2513() { testInvalid(test_2513_query); }

		private static final SubtypeQuery test_2514_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{any, !any}"));
		@Test public void test_2514() { testValid(test_2514_query); }

		private static final SubtypeQuery test_2515_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{{any}, !int}"));
		@Test public void test_2515() { testInvalid(test_2515_query); }

		private static final SubtypeQuery test_2516_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_2516() { testInvalid(test_2516_query); }

		private static final SubtypeQuery test_2517_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_2517() { testInvalid(test_2517_query); }

		private static final SubtypeQuery test_2518_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_2518() { testInvalid(test_2518_query); }

		private static final SubtypeQuery test_2519_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_2519() { testInvalid(test_2519_query); }

		private static final SubtypeQuery test_2520_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_2520() { testInvalid(test_2520_query); }

		private static final SubtypeQuery test_2521_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_2521() { testInvalid(test_2521_query); }

		private static final SubtypeQuery test_2522_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_2522() { testInvalid(test_2522_query); }

		private static final SubtypeQuery test_2523_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_2523() { testInvalid(test_2523_query); }

		private static final SubtypeQuery test_2524_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_2524() { testValid(test_2524_query); }

		private static final SubtypeQuery test_2525_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_2525() { testValid(test_2525_query); }

		private static final SubtypeQuery test_2526_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_2526() { testInvalid(test_2526_query); }

		private static final SubtypeQuery test_2527_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_2527() { testInvalid(test_2527_query); }

		private static final SubtypeQuery test_2528_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_2528() { testInvalid(test_2528_query); }

		private static final SubtypeQuery test_2529_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_2529() { testValid(test_2529_query); }

		private static final SubtypeQuery test_2530_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_2530() { testInvalid(test_2530_query); }

		private static final SubtypeQuery test_2531_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_2531() { testValid(test_2531_query); }

		private static final SubtypeQuery test_2532_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_2532() { testInvalid(test_2532_query); }

		private static final SubtypeQuery test_2533_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_2533() { testInvalid(test_2533_query); }

		private static final SubtypeQuery test_2534_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_2534() { testInvalid(test_2534_query); }

		private static final SubtypeQuery test_2535_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_2535() { testInvalid(test_2535_query); }

		private static final SubtypeQuery test_2536_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_2536() { testInvalid(test_2536_query); }

		private static final SubtypeQuery test_2537_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_2537() { testInvalid(test_2537_query); }

		private static final SubtypeQuery test_2538_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_2538() { testInvalid(test_2538_query); }

		private static final SubtypeQuery test_2539_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_2539() { testInvalid(test_2539_query); }

		private static final SubtypeQuery test_2540_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_2540() { testInvalid(test_2540_query); }

		private static final SubtypeQuery test_2541_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_2541() { testValid(test_2541_query); }

		private static final SubtypeQuery test_2542_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_2542() { testInvalid(test_2542_query); }

		private static final SubtypeQuery test_2543_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_2543() { testInvalid(test_2543_query); }

		private static final SubtypeQuery test_2544_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_2544() { testInvalid(test_2544_query); }

		private static final SubtypeQuery test_2545_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_2545() { testInvalid(test_2545_query); }

		private static final SubtypeQuery test_2546_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_2546() { testInvalid(test_2546_query); }

		private static final SubtypeQuery test_2547_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_2547() { testInvalid(test_2547_query); }

		private static final SubtypeQuery test_2548_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_2548() { testInvalid(test_2548_query); }

		private static final SubtypeQuery test_2549_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_2549() { testInvalid(test_2549_query); }

		private static final SubtypeQuery test_2550_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_2550() { testInvalid(test_2550_query); }

		private static final SubtypeQuery test_2551_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_2551() { testInvalid(test_2551_query); }

		private static final SubtypeQuery test_2552_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_2552() { testInvalid(test_2552_query); }

		private static final SubtypeQuery test_2553_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_2553() { testInvalid(test_2553_query); }

		private static final SubtypeQuery test_2554_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_2554() { testInvalid(test_2554_query); }

		private static final SubtypeQuery test_2555_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_2555() { testInvalid(test_2555_query); }

		private static final SubtypeQuery test_2556_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("(!any | any)"));
		@Test public void test_2556() { testInvalid(test_2556_query); }

		private static final SubtypeQuery test_2557_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("({int, any} | any)"));
		@Test public void test_2557() { testInvalid(test_2557_query); }

		private static final SubtypeQuery test_2558_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("({any, int} | any)"));
		@Test public void test_2558() { testInvalid(test_2558_query); }

		private static final SubtypeQuery test_2559_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("((int & int) | any)"));
		@Test public void test_2559() { testInvalid(test_2559_query); }

		private static final SubtypeQuery test_2560_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("({int, int} | int)"));
		@Test public void test_2560() { testInvalid(test_2560_query); }

		private static final SubtypeQuery test_2561_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("((any | any) | int)"));
		@Test public void test_2561() { testInvalid(test_2561_query); }

		private static final SubtypeQuery test_2562_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("((int | any) | int)"));
		@Test public void test_2562() { testInvalid(test_2562_query); }

		private static final SubtypeQuery test_2563_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("(any | {any})"));
		@Test public void test_2563() { testInvalid(test_2563_query); }

		private static final SubtypeQuery test_2564_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("(int | {any})"));
		@Test public void test_2564() { testInvalid(test_2564_query); }

		private static final SubtypeQuery test_2565_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_2565() { testInvalid(test_2565_query); }

		private static final SubtypeQuery test_2566_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("(any | {int})"));
		@Test public void test_2566() { testInvalid(test_2566_query); }

		private static final SubtypeQuery test_2567_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_2567() { testInvalid(test_2567_query); }

		private static final SubtypeQuery test_2568_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("(!int | !any)"));
		@Test public void test_2568() { testInvalid(test_2568_query); }

		private static final SubtypeQuery test_2569_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_2569() { testInvalid(test_2569_query); }

		private static final SubtypeQuery test_2570_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_2570() { testInvalid(test_2570_query); }

		private static final SubtypeQuery test_2571_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("({int} | !int)"));
		@Test public void test_2571() { testInvalid(test_2571_query); }

		private static final SubtypeQuery test_2572_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("(!any | !int)"));
		@Test public void test_2572() { testInvalid(test_2572_query); }

		private static final SubtypeQuery test_2573_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_2573() { testInvalid(test_2573_query); }

		private static final SubtypeQuery test_2574_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_2574() { testInvalid(test_2574_query); }

		private static final SubtypeQuery test_2575_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_2575() { testInvalid(test_2575_query); }

		private static final SubtypeQuery test_2576_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_2576() { testInvalid(test_2576_query); }

		private static final SubtypeQuery test_2577_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_2577() { testInvalid(test_2577_query); }

		private static final SubtypeQuery test_2578_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_2578() { testInvalid(test_2578_query); }

		private static final SubtypeQuery test_2579_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_2579() { testInvalid(test_2579_query); }

		private static final SubtypeQuery test_2580_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_2580() { testInvalid(test_2580_query); }

		private static final SubtypeQuery test_2581_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_2581() { testInvalid(test_2581_query); }

		private static final SubtypeQuery test_2582_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_2582() { testInvalid(test_2582_query); }

		private static final SubtypeQuery test_2583_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_2583() { testInvalid(test_2583_query); }

		private static final SubtypeQuery test_2584_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_2584() { testInvalid(test_2584_query); }

		private static final SubtypeQuery test_2585_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_2585() { testInvalid(test_2585_query); }

		private static final SubtypeQuery test_2586_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_2586() { testInvalid(test_2586_query); }

		private static final SubtypeQuery test_2587_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("(int | (any | int))"));
		@Test public void test_2587() { testInvalid(test_2587_query); }

		private static final SubtypeQuery test_2588_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_2588() { testInvalid(test_2588_query); }

		private static final SubtypeQuery test_2589_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_2589() { testInvalid(test_2589_query); }

		private static final SubtypeQuery test_2590_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_2590() { testInvalid(test_2590_query); }

		private static final SubtypeQuery test_2591_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_2591() { testInvalid(test_2591_query); }

		private static final SubtypeQuery test_2592_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_2592() { testInvalid(test_2592_query); }

		private static final SubtypeQuery test_2593_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_2593() { testInvalid(test_2593_query); }

		private static final SubtypeQuery test_2594_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("(int | (any & any))"));
		@Test public void test_2594() { testInvalid(test_2594_query); }

		private static final SubtypeQuery test_2595_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_2595() { testInvalid(test_2595_query); }

		private static final SubtypeQuery test_2596_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_2596() { testInvalid(test_2596_query); }

		private static final SubtypeQuery test_2597_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_2597() { testInvalid(test_2597_query); }

		private static final SubtypeQuery test_2598_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_2598() { testInvalid(test_2598_query); }

		private static final SubtypeQuery test_2599_query = createSubtypeQuery(parseWhiley("{(int & int), {int, any}}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_2599() { testInvalid(test_2599_query); }

		private static final SubtypeQuery test_2600_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("!int"));
		@Test public void test_2600() { testInvalid(test_2600_query); }

		private static final SubtypeQuery test_2601_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("(any | any)"));
		@Test public void test_2601() { testInvalid(test_2601_query); }

		private static final SubtypeQuery test_2602_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("(any & any)"));
		@Test public void test_2602() { testInvalid(test_2602_query); }

		private static final SubtypeQuery test_2603_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{{int, int}}"));
		@Test public void test_2603() { testInvalid(test_2603_query); }

		private static final SubtypeQuery test_2604_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("!(int | int)"));
		@Test public void test_2604() { testInvalid(test_2604_query); }

		private static final SubtypeQuery test_2605_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_2605() { testInvalid(test_2605_query); }

		private static final SubtypeQuery test_2606_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_2606() { testInvalid(test_2606_query); }

		private static final SubtypeQuery test_2607_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{{any}, int}"));
		@Test public void test_2607() { testInvalid(test_2607_query); }

		private static final SubtypeQuery test_2608_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_2608() { testInvalid(test_2608_query); }

		private static final SubtypeQuery test_2609_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{(any | int), int}"));
		@Test public void test_2609() { testInvalid(test_2609_query); }

		private static final SubtypeQuery test_2610_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_2610() { testInvalid(test_2610_query); }

		private static final SubtypeQuery test_2611_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{!any, {int}}"));
		@Test public void test_2611() { testValid(test_2611_query); }

		private static final SubtypeQuery test_2612_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_2612() { testInvalid(test_2612_query); }

		private static final SubtypeQuery test_2613_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_2613() { testInvalid(test_2613_query); }

		private static final SubtypeQuery test_2614_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{any, !any}"));
		@Test public void test_2614() { testValid(test_2614_query); }

		private static final SubtypeQuery test_2615_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{{any}, !int}"));
		@Test public void test_2615() { testInvalid(test_2615_query); }

		private static final SubtypeQuery test_2616_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_2616() { testInvalid(test_2616_query); }

		private static final SubtypeQuery test_2617_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_2617() { testInvalid(test_2617_query); }

		private static final SubtypeQuery test_2618_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_2618() { testInvalid(test_2618_query); }

		private static final SubtypeQuery test_2619_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_2619() { testInvalid(test_2619_query); }

		private static final SubtypeQuery test_2620_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_2620() { testInvalid(test_2620_query); }

		private static final SubtypeQuery test_2621_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_2621() { testInvalid(test_2621_query); }

		private static final SubtypeQuery test_2622_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_2622() { testInvalid(test_2622_query); }

		private static final SubtypeQuery test_2623_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_2623() { testInvalid(test_2623_query); }

		private static final SubtypeQuery test_2624_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_2624() { testInvalid(test_2624_query); }

		private static final SubtypeQuery test_2625_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_2625() { testInvalid(test_2625_query); }

		private static final SubtypeQuery test_2626_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_2626() { testValid(test_2626_query); }

		private static final SubtypeQuery test_2627_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_2627() { testValid(test_2627_query); }

		private static final SubtypeQuery test_2628_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_2628() { testValid(test_2628_query); }

		private static final SubtypeQuery test_2629_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_2629() { testValid(test_2629_query); }

		private static final SubtypeQuery test_2630_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_2630() { testValid(test_2630_query); }

		private static final SubtypeQuery test_2631_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_2631() { testValid(test_2631_query); }

		private static final SubtypeQuery test_2632_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_2632() { testInvalid(test_2632_query); }

		private static final SubtypeQuery test_2633_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_2633() { testInvalid(test_2633_query); }

		private static final SubtypeQuery test_2634_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_2634() { testInvalid(test_2634_query); }

		private static final SubtypeQuery test_2635_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_2635() { testInvalid(test_2635_query); }

		private static final SubtypeQuery test_2636_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_2636() { testInvalid(test_2636_query); }

		private static final SubtypeQuery test_2637_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_2637() { testInvalid(test_2637_query); }

		private static final SubtypeQuery test_2638_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_2638() { testInvalid(test_2638_query); }

		private static final SubtypeQuery test_2639_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_2639() { testInvalid(test_2639_query); }

		private static final SubtypeQuery test_2640_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_2640() { testInvalid(test_2640_query); }

		private static final SubtypeQuery test_2641_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_2641() { testValid(test_2641_query); }

		private static final SubtypeQuery test_2642_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_2642() { testInvalid(test_2642_query); }

		private static final SubtypeQuery test_2643_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_2643() { testInvalid(test_2643_query); }

		private static final SubtypeQuery test_2644_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_2644() { testInvalid(test_2644_query); }

		private static final SubtypeQuery test_2645_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_2645() { testInvalid(test_2645_query); }

		private static final SubtypeQuery test_2646_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_2646() { testInvalid(test_2646_query); }

		private static final SubtypeQuery test_2647_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_2647() { testInvalid(test_2647_query); }

		private static final SubtypeQuery test_2648_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_2648() { testInvalid(test_2648_query); }

		private static final SubtypeQuery test_2649_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_2649() { testInvalid(test_2649_query); }

		private static final SubtypeQuery test_2650_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_2650() { testInvalid(test_2650_query); }

		private static final SubtypeQuery test_2651_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_2651() { testInvalid(test_2651_query); }

		private static final SubtypeQuery test_2652_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_2652() { testInvalid(test_2652_query); }

		private static final SubtypeQuery test_2653_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_2653() { testInvalid(test_2653_query); }

		private static final SubtypeQuery test_2654_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_2654() { testInvalid(test_2654_query); }

		private static final SubtypeQuery test_2655_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_2655() { testInvalid(test_2655_query); }

		private static final SubtypeQuery test_2656_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("(!any | any)"));
		@Test public void test_2656() { testInvalid(test_2656_query); }

		private static final SubtypeQuery test_2657_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("({int, any} | any)"));
		@Test public void test_2657() { testInvalid(test_2657_query); }

		private static final SubtypeQuery test_2658_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("({any, int} | any)"));
		@Test public void test_2658() { testInvalid(test_2658_query); }

		private static final SubtypeQuery test_2659_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("((int & int) | any)"));
		@Test public void test_2659() { testInvalid(test_2659_query); }

		private static final SubtypeQuery test_2660_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("({int, int} | int)"));
		@Test public void test_2660() { testInvalid(test_2660_query); }

		private static final SubtypeQuery test_2661_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("((any | any) | int)"));
		@Test public void test_2661() { testInvalid(test_2661_query); }

		private static final SubtypeQuery test_2662_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("((int | any) | int)"));
		@Test public void test_2662() { testInvalid(test_2662_query); }

		private static final SubtypeQuery test_2663_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("(any | {any})"));
		@Test public void test_2663() { testInvalid(test_2663_query); }

		private static final SubtypeQuery test_2664_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("(int | {any})"));
		@Test public void test_2664() { testInvalid(test_2664_query); }

		private static final SubtypeQuery test_2665_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_2665() { testInvalid(test_2665_query); }

		private static final SubtypeQuery test_2666_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("(any | {int})"));
		@Test public void test_2666() { testInvalid(test_2666_query); }

		private static final SubtypeQuery test_2667_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_2667() { testInvalid(test_2667_query); }

		private static final SubtypeQuery test_2668_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("(!int | !any)"));
		@Test public void test_2668() { testInvalid(test_2668_query); }

		private static final SubtypeQuery test_2669_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_2669() { testInvalid(test_2669_query); }

		private static final SubtypeQuery test_2670_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_2670() { testInvalid(test_2670_query); }

		private static final SubtypeQuery test_2671_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("({int} | !int)"));
		@Test public void test_2671() { testInvalid(test_2671_query); }

		private static final SubtypeQuery test_2672_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("(!any | !int)"));
		@Test public void test_2672() { testInvalid(test_2672_query); }

		private static final SubtypeQuery test_2673_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_2673() { testInvalid(test_2673_query); }

		private static final SubtypeQuery test_2674_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_2674() { testInvalid(test_2674_query); }

		private static final SubtypeQuery test_2675_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_2675() { testInvalid(test_2675_query); }

		private static final SubtypeQuery test_2676_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_2676() { testInvalid(test_2676_query); }

		private static final SubtypeQuery test_2677_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_2677() { testInvalid(test_2677_query); }

		private static final SubtypeQuery test_2678_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_2678() { testInvalid(test_2678_query); }

		private static final SubtypeQuery test_2679_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_2679() { testInvalid(test_2679_query); }

		private static final SubtypeQuery test_2680_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_2680() { testInvalid(test_2680_query); }

		private static final SubtypeQuery test_2681_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_2681() { testInvalid(test_2681_query); }

		private static final SubtypeQuery test_2682_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_2682() { testInvalid(test_2682_query); }

		private static final SubtypeQuery test_2683_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_2683() { testInvalid(test_2683_query); }

		private static final SubtypeQuery test_2684_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_2684() { testInvalid(test_2684_query); }

		private static final SubtypeQuery test_2685_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_2685() { testInvalid(test_2685_query); }

		private static final SubtypeQuery test_2686_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_2686() { testInvalid(test_2686_query); }

		private static final SubtypeQuery test_2687_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("(int | (any | int))"));
		@Test public void test_2687() { testInvalid(test_2687_query); }

		private static final SubtypeQuery test_2688_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_2688() { testInvalid(test_2688_query); }

		private static final SubtypeQuery test_2689_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_2689() { testInvalid(test_2689_query); }

		private static final SubtypeQuery test_2690_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_2690() { testInvalid(test_2690_query); }

		private static final SubtypeQuery test_2691_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_2691() { testInvalid(test_2691_query); }

		private static final SubtypeQuery test_2692_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_2692() { testInvalid(test_2692_query); }

		private static final SubtypeQuery test_2693_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_2693() { testInvalid(test_2693_query); }

		private static final SubtypeQuery test_2694_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("(int | (any & any))"));
		@Test public void test_2694() { testInvalid(test_2694_query); }

		private static final SubtypeQuery test_2695_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_2695() { testInvalid(test_2695_query); }

		private static final SubtypeQuery test_2696_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_2696() { testInvalid(test_2696_query); }

		private static final SubtypeQuery test_2697_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_2697() { testInvalid(test_2697_query); }

		private static final SubtypeQuery test_2698_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_2698() { testInvalid(test_2698_query); }

		private static final SubtypeQuery test_2699_query = createSubtypeQuery(parseWhiley("{any, {any, int}}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_2699() { testInvalid(test_2699_query); }

		private static final SubtypeQuery test_2700_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("!int"));
		@Test public void test_2700() { testInvalid(test_2700_query); }

		private static final SubtypeQuery test_2701_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("(any | any)"));
		@Test public void test_2701() { testInvalid(test_2701_query); }

		private static final SubtypeQuery test_2702_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("(any & any)"));
		@Test public void test_2702() { testInvalid(test_2702_query); }

		private static final SubtypeQuery test_2703_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{{int, int}}"));
		@Test public void test_2703() { testInvalid(test_2703_query); }

		private static final SubtypeQuery test_2704_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("!(int | int)"));
		@Test public void test_2704() { testInvalid(test_2704_query); }

		private static final SubtypeQuery test_2705_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_2705() { testInvalid(test_2705_query); }

		private static final SubtypeQuery test_2706_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_2706() { testInvalid(test_2706_query); }

		private static final SubtypeQuery test_2707_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{{any}, int}"));
		@Test public void test_2707() { testInvalid(test_2707_query); }

		private static final SubtypeQuery test_2708_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_2708() { testInvalid(test_2708_query); }

		private static final SubtypeQuery test_2709_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{(any | int), int}"));
		@Test public void test_2709() { testInvalid(test_2709_query); }

		private static final SubtypeQuery test_2710_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_2710() { testInvalid(test_2710_query); }

		private static final SubtypeQuery test_2711_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{!any, {int}}"));
		@Test public void test_2711() { testValid(test_2711_query); }

		private static final SubtypeQuery test_2712_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_2712() { testInvalid(test_2712_query); }

		private static final SubtypeQuery test_2713_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_2713() { testInvalid(test_2713_query); }

		private static final SubtypeQuery test_2714_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{any, !any}"));
		@Test public void test_2714() { testValid(test_2714_query); }

		private static final SubtypeQuery test_2715_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{{any}, !int}"));
		@Test public void test_2715() { testInvalid(test_2715_query); }

		private static final SubtypeQuery test_2716_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_2716() { testInvalid(test_2716_query); }

		private static final SubtypeQuery test_2717_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_2717() { testInvalid(test_2717_query); }

		private static final SubtypeQuery test_2718_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_2718() { testInvalid(test_2718_query); }

		private static final SubtypeQuery test_2719_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_2719() { testInvalid(test_2719_query); }

		private static final SubtypeQuery test_2720_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_2720() { testInvalid(test_2720_query); }

		private static final SubtypeQuery test_2721_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_2721() { testInvalid(test_2721_query); }

		private static final SubtypeQuery test_2722_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_2722() { testInvalid(test_2722_query); }

		private static final SubtypeQuery test_2723_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_2723() { testInvalid(test_2723_query); }

		private static final SubtypeQuery test_2724_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_2724() { testInvalid(test_2724_query); }

		private static final SubtypeQuery test_2725_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_2725() { testInvalid(test_2725_query); }

		private static final SubtypeQuery test_2726_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_2726() { testInvalid(test_2726_query); }

		private static final SubtypeQuery test_2727_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_2727() { testValid(test_2727_query); }

		private static final SubtypeQuery test_2728_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_2728() { testInvalid(test_2728_query); }

		private static final SubtypeQuery test_2729_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_2729() { testValid(test_2729_query); }

		private static final SubtypeQuery test_2730_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_2730() { testInvalid(test_2730_query); }

		private static final SubtypeQuery test_2731_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_2731() { testInvalid(test_2731_query); }

		private static final SubtypeQuery test_2732_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_2732() { testInvalid(test_2732_query); }

		private static final SubtypeQuery test_2733_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_2733() { testInvalid(test_2733_query); }

		private static final SubtypeQuery test_2734_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_2734() { testInvalid(test_2734_query); }

		private static final SubtypeQuery test_2735_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_2735() { testInvalid(test_2735_query); }

		private static final SubtypeQuery test_2736_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_2736() { testInvalid(test_2736_query); }

		private static final SubtypeQuery test_2737_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_2737() { testInvalid(test_2737_query); }

		private static final SubtypeQuery test_2738_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_2738() { testInvalid(test_2738_query); }

		private static final SubtypeQuery test_2739_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_2739() { testInvalid(test_2739_query); }

		private static final SubtypeQuery test_2740_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_2740() { testInvalid(test_2740_query); }

		private static final SubtypeQuery test_2741_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_2741() { testValid(test_2741_query); }

		private static final SubtypeQuery test_2742_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_2742() { testInvalid(test_2742_query); }

		private static final SubtypeQuery test_2743_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_2743() { testInvalid(test_2743_query); }

		private static final SubtypeQuery test_2744_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_2744() { testInvalid(test_2744_query); }

		private static final SubtypeQuery test_2745_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_2745() { testInvalid(test_2745_query); }

		private static final SubtypeQuery test_2746_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_2746() { testInvalid(test_2746_query); }

		private static final SubtypeQuery test_2747_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_2747() { testInvalid(test_2747_query); }

		private static final SubtypeQuery test_2748_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_2748() { testInvalid(test_2748_query); }

		private static final SubtypeQuery test_2749_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_2749() { testInvalid(test_2749_query); }

		private static final SubtypeQuery test_2750_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_2750() { testInvalid(test_2750_query); }

		private static final SubtypeQuery test_2751_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_2751() { testInvalid(test_2751_query); }

		private static final SubtypeQuery test_2752_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_2752() { testInvalid(test_2752_query); }

		private static final SubtypeQuery test_2753_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_2753() { testInvalid(test_2753_query); }

		private static final SubtypeQuery test_2754_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_2754() { testInvalid(test_2754_query); }

		private static final SubtypeQuery test_2755_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_2755() { testInvalid(test_2755_query); }

		private static final SubtypeQuery test_2756_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("(!any | any)"));
		@Test public void test_2756() { testInvalid(test_2756_query); }

		private static final SubtypeQuery test_2757_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("({int, any} | any)"));
		@Test public void test_2757() { testInvalid(test_2757_query); }

		private static final SubtypeQuery test_2758_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("({any, int} | any)"));
		@Test public void test_2758() { testInvalid(test_2758_query); }

		private static final SubtypeQuery test_2759_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("((int & int) | any)"));
		@Test public void test_2759() { testInvalid(test_2759_query); }

		private static final SubtypeQuery test_2760_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("({int, int} | int)"));
		@Test public void test_2760() { testInvalid(test_2760_query); }

		private static final SubtypeQuery test_2761_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("((any | any) | int)"));
		@Test public void test_2761() { testInvalid(test_2761_query); }

		private static final SubtypeQuery test_2762_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("((int | any) | int)"));
		@Test public void test_2762() { testInvalid(test_2762_query); }

		private static final SubtypeQuery test_2763_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("(any | {any})"));
		@Test public void test_2763() { testInvalid(test_2763_query); }

		private static final SubtypeQuery test_2764_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("(int | {any})"));
		@Test public void test_2764() { testInvalid(test_2764_query); }

		private static final SubtypeQuery test_2765_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_2765() { testInvalid(test_2765_query); }

		private static final SubtypeQuery test_2766_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("(any | {int})"));
		@Test public void test_2766() { testInvalid(test_2766_query); }

		private static final SubtypeQuery test_2767_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_2767() { testInvalid(test_2767_query); }

		private static final SubtypeQuery test_2768_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("(!int | !any)"));
		@Test public void test_2768() { testInvalid(test_2768_query); }

		private static final SubtypeQuery test_2769_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_2769() { testInvalid(test_2769_query); }

		private static final SubtypeQuery test_2770_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_2770() { testInvalid(test_2770_query); }

		private static final SubtypeQuery test_2771_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("({int} | !int)"));
		@Test public void test_2771() { testInvalid(test_2771_query); }

		private static final SubtypeQuery test_2772_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("(!any | !int)"));
		@Test public void test_2772() { testInvalid(test_2772_query); }

		private static final SubtypeQuery test_2773_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_2773() { testInvalid(test_2773_query); }

		private static final SubtypeQuery test_2774_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_2774() { testInvalid(test_2774_query); }

		private static final SubtypeQuery test_2775_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_2775() { testInvalid(test_2775_query); }

		private static final SubtypeQuery test_2776_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_2776() { testInvalid(test_2776_query); }

		private static final SubtypeQuery test_2777_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_2777() { testInvalid(test_2777_query); }

		private static final SubtypeQuery test_2778_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_2778() { testInvalid(test_2778_query); }

		private static final SubtypeQuery test_2779_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_2779() { testInvalid(test_2779_query); }

		private static final SubtypeQuery test_2780_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_2780() { testInvalid(test_2780_query); }

		private static final SubtypeQuery test_2781_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_2781() { testInvalid(test_2781_query); }

		private static final SubtypeQuery test_2782_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_2782() { testInvalid(test_2782_query); }

		private static final SubtypeQuery test_2783_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_2783() { testInvalid(test_2783_query); }

		private static final SubtypeQuery test_2784_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_2784() { testInvalid(test_2784_query); }

		private static final SubtypeQuery test_2785_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_2785() { testInvalid(test_2785_query); }

		private static final SubtypeQuery test_2786_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_2786() { testInvalid(test_2786_query); }

		private static final SubtypeQuery test_2787_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("(int | (any | int))"));
		@Test public void test_2787() { testInvalid(test_2787_query); }

		private static final SubtypeQuery test_2788_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_2788() { testInvalid(test_2788_query); }

		private static final SubtypeQuery test_2789_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_2789() { testInvalid(test_2789_query); }

		private static final SubtypeQuery test_2790_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_2790() { testInvalid(test_2790_query); }

		private static final SubtypeQuery test_2791_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_2791() { testInvalid(test_2791_query); }

		private static final SubtypeQuery test_2792_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_2792() { testInvalid(test_2792_query); }

		private static final SubtypeQuery test_2793_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_2793() { testInvalid(test_2793_query); }

		private static final SubtypeQuery test_2794_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("(int | (any & any))"));
		@Test public void test_2794() { testInvalid(test_2794_query); }

		private static final SubtypeQuery test_2795_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_2795() { testInvalid(test_2795_query); }

		private static final SubtypeQuery test_2796_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_2796() { testInvalid(test_2796_query); }

		private static final SubtypeQuery test_2797_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_2797() { testInvalid(test_2797_query); }

		private static final SubtypeQuery test_2798_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_2798() { testInvalid(test_2798_query); }

		private static final SubtypeQuery test_2799_query = createSubtypeQuery(parseWhiley("{{any}, {any, int}}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_2799() { testInvalid(test_2799_query); }

		private static final SubtypeQuery test_2800_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("!int"));
		@Test public void test_2800() { testInvalid(test_2800_query); }

		private static final SubtypeQuery test_2801_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("(any | any)"));
		@Test public void test_2801() { testInvalid(test_2801_query); }

		private static final SubtypeQuery test_2802_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("(any & any)"));
		@Test public void test_2802() { testInvalid(test_2802_query); }

		private static final SubtypeQuery test_2803_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{{int, int}}"));
		@Test public void test_2803() { testInvalid(test_2803_query); }

		private static final SubtypeQuery test_2804_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("!(int | int)"));
		@Test public void test_2804() { testInvalid(test_2804_query); }

		private static final SubtypeQuery test_2805_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_2805() { testInvalid(test_2805_query); }

		private static final SubtypeQuery test_2806_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_2806() { testInvalid(test_2806_query); }

		private static final SubtypeQuery test_2807_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{{any}, int}"));
		@Test public void test_2807() { testInvalid(test_2807_query); }

		private static final SubtypeQuery test_2808_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_2808() { testInvalid(test_2808_query); }

		private static final SubtypeQuery test_2809_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{(any | int), int}"));
		@Test public void test_2809() { testInvalid(test_2809_query); }

		private static final SubtypeQuery test_2810_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_2810() { testInvalid(test_2810_query); }

		private static final SubtypeQuery test_2811_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{!any, {int}}"));
		@Test public void test_2811() { testValid(test_2811_query); }

		private static final SubtypeQuery test_2812_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_2812() { testInvalid(test_2812_query); }

		private static final SubtypeQuery test_2813_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_2813() { testInvalid(test_2813_query); }

		private static final SubtypeQuery test_2814_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{any, !any}"));
		@Test public void test_2814() { testValid(test_2814_query); }

		private static final SubtypeQuery test_2815_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{{any}, !int}"));
		@Test public void test_2815() { testInvalid(test_2815_query); }

		private static final SubtypeQuery test_2816_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_2816() { testInvalid(test_2816_query); }

		private static final SubtypeQuery test_2817_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_2817() { testInvalid(test_2817_query); }

		private static final SubtypeQuery test_2818_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_2818() { testInvalid(test_2818_query); }

		private static final SubtypeQuery test_2819_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_2819() { testInvalid(test_2819_query); }

		private static final SubtypeQuery test_2820_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_2820() { testInvalid(test_2820_query); }

		private static final SubtypeQuery test_2821_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_2821() { testInvalid(test_2821_query); }

		private static final SubtypeQuery test_2822_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_2822() { testInvalid(test_2822_query); }

		private static final SubtypeQuery test_2823_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_2823() { testInvalid(test_2823_query); }

		private static final SubtypeQuery test_2824_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_2824() { testInvalid(test_2824_query); }

		private static final SubtypeQuery test_2825_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_2825() { testInvalid(test_2825_query); }

		private static final SubtypeQuery test_2826_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_2826() { testInvalid(test_2826_query); }

		private static final SubtypeQuery test_2827_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_2827() { testInvalid(test_2827_query); }

		private static final SubtypeQuery test_2828_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_2828() { testValid(test_2828_query); }

		private static final SubtypeQuery test_2829_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_2829() { testValid(test_2829_query); }

		private static final SubtypeQuery test_2830_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_2830() { testInvalid(test_2830_query); }

		private static final SubtypeQuery test_2831_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_2831() { testInvalid(test_2831_query); }

		private static final SubtypeQuery test_2832_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_2832() { testInvalid(test_2832_query); }

		private static final SubtypeQuery test_2833_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_2833() { testInvalid(test_2833_query); }

		private static final SubtypeQuery test_2834_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_2834() { testInvalid(test_2834_query); }

		private static final SubtypeQuery test_2835_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_2835() { testInvalid(test_2835_query); }

		private static final SubtypeQuery test_2836_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_2836() { testInvalid(test_2836_query); }

		private static final SubtypeQuery test_2837_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_2837() { testInvalid(test_2837_query); }

		private static final SubtypeQuery test_2838_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_2838() { testInvalid(test_2838_query); }

		private static final SubtypeQuery test_2839_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_2839() { testInvalid(test_2839_query); }

		private static final SubtypeQuery test_2840_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_2840() { testInvalid(test_2840_query); }

		private static final SubtypeQuery test_2841_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_2841() { testValid(test_2841_query); }

		private static final SubtypeQuery test_2842_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_2842() { testInvalid(test_2842_query); }

		private static final SubtypeQuery test_2843_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_2843() { testInvalid(test_2843_query); }

		private static final SubtypeQuery test_2844_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_2844() { testInvalid(test_2844_query); }

		private static final SubtypeQuery test_2845_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_2845() { testInvalid(test_2845_query); }

		private static final SubtypeQuery test_2846_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_2846() { testInvalid(test_2846_query); }

		private static final SubtypeQuery test_2847_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_2847() { testInvalid(test_2847_query); }

		private static final SubtypeQuery test_2848_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_2848() { testInvalid(test_2848_query); }

		private static final SubtypeQuery test_2849_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_2849() { testInvalid(test_2849_query); }

		private static final SubtypeQuery test_2850_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_2850() { testInvalid(test_2850_query); }

		private static final SubtypeQuery test_2851_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_2851() { testInvalid(test_2851_query); }

		private static final SubtypeQuery test_2852_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_2852() { testInvalid(test_2852_query); }

		private static final SubtypeQuery test_2853_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_2853() { testInvalid(test_2853_query); }

		private static final SubtypeQuery test_2854_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_2854() { testInvalid(test_2854_query); }

		private static final SubtypeQuery test_2855_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_2855() { testInvalid(test_2855_query); }

		private static final SubtypeQuery test_2856_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("(!any | any)"));
		@Test public void test_2856() { testInvalid(test_2856_query); }

		private static final SubtypeQuery test_2857_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("({int, any} | any)"));
		@Test public void test_2857() { testInvalid(test_2857_query); }

		private static final SubtypeQuery test_2858_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("({any, int} | any)"));
		@Test public void test_2858() { testInvalid(test_2858_query); }

		private static final SubtypeQuery test_2859_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("((int & int) | any)"));
		@Test public void test_2859() { testInvalid(test_2859_query); }

		private static final SubtypeQuery test_2860_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("({int, int} | int)"));
		@Test public void test_2860() { testInvalid(test_2860_query); }

		private static final SubtypeQuery test_2861_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("((any | any) | int)"));
		@Test public void test_2861() { testInvalid(test_2861_query); }

		private static final SubtypeQuery test_2862_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("((int | any) | int)"));
		@Test public void test_2862() { testInvalid(test_2862_query); }

		private static final SubtypeQuery test_2863_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("(any | {any})"));
		@Test public void test_2863() { testInvalid(test_2863_query); }

		private static final SubtypeQuery test_2864_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("(int | {any})"));
		@Test public void test_2864() { testInvalid(test_2864_query); }

		private static final SubtypeQuery test_2865_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_2865() { testInvalid(test_2865_query); }

		private static final SubtypeQuery test_2866_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("(any | {int})"));
		@Test public void test_2866() { testInvalid(test_2866_query); }

		private static final SubtypeQuery test_2867_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_2867() { testInvalid(test_2867_query); }

		private static final SubtypeQuery test_2868_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("(!int | !any)"));
		@Test public void test_2868() { testInvalid(test_2868_query); }

		private static final SubtypeQuery test_2869_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_2869() { testInvalid(test_2869_query); }

		private static final SubtypeQuery test_2870_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_2870() { testInvalid(test_2870_query); }

		private static final SubtypeQuery test_2871_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("({int} | !int)"));
		@Test public void test_2871() { testInvalid(test_2871_query); }

		private static final SubtypeQuery test_2872_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("(!any | !int)"));
		@Test public void test_2872() { testInvalid(test_2872_query); }

		private static final SubtypeQuery test_2873_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_2873() { testInvalid(test_2873_query); }

		private static final SubtypeQuery test_2874_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_2874() { testInvalid(test_2874_query); }

		private static final SubtypeQuery test_2875_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_2875() { testInvalid(test_2875_query); }

		private static final SubtypeQuery test_2876_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_2876() { testInvalid(test_2876_query); }

		private static final SubtypeQuery test_2877_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_2877() { testInvalid(test_2877_query); }

		private static final SubtypeQuery test_2878_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_2878() { testInvalid(test_2878_query); }

		private static final SubtypeQuery test_2879_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_2879() { testInvalid(test_2879_query); }

		private static final SubtypeQuery test_2880_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_2880() { testInvalid(test_2880_query); }

		private static final SubtypeQuery test_2881_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_2881() { testInvalid(test_2881_query); }

		private static final SubtypeQuery test_2882_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_2882() { testInvalid(test_2882_query); }

		private static final SubtypeQuery test_2883_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_2883() { testInvalid(test_2883_query); }

		private static final SubtypeQuery test_2884_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_2884() { testInvalid(test_2884_query); }

		private static final SubtypeQuery test_2885_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_2885() { testInvalid(test_2885_query); }

		private static final SubtypeQuery test_2886_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_2886() { testInvalid(test_2886_query); }

		private static final SubtypeQuery test_2887_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("(int | (any | int))"));
		@Test public void test_2887() { testInvalid(test_2887_query); }

		private static final SubtypeQuery test_2888_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_2888() { testInvalid(test_2888_query); }

		private static final SubtypeQuery test_2889_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_2889() { testInvalid(test_2889_query); }

		private static final SubtypeQuery test_2890_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_2890() { testInvalid(test_2890_query); }

		private static final SubtypeQuery test_2891_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_2891() { testInvalid(test_2891_query); }

		private static final SubtypeQuery test_2892_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_2892() { testInvalid(test_2892_query); }

		private static final SubtypeQuery test_2893_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_2893() { testInvalid(test_2893_query); }

		private static final SubtypeQuery test_2894_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("(int | (any & any))"));
		@Test public void test_2894() { testInvalid(test_2894_query); }

		private static final SubtypeQuery test_2895_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_2895() { testInvalid(test_2895_query); }

		private static final SubtypeQuery test_2896_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_2896() { testInvalid(test_2896_query); }

		private static final SubtypeQuery test_2897_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_2897() { testInvalid(test_2897_query); }

		private static final SubtypeQuery test_2898_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_2898() { testInvalid(test_2898_query); }

		private static final SubtypeQuery test_2899_query = createSubtypeQuery(parseWhiley("{{int, any}, {any, int}}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_2899() { testInvalid(test_2899_query); }

		private static final SubtypeQuery test_2900_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("!int"));
		@Test public void test_2900() { testInvalid(test_2900_query); }

		private static final SubtypeQuery test_2901_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("(any | any)"));
		@Test public void test_2901() { testInvalid(test_2901_query); }

		private static final SubtypeQuery test_2902_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("(any & any)"));
		@Test public void test_2902() { testInvalid(test_2902_query); }

		private static final SubtypeQuery test_2903_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{{int, int}}"));
		@Test public void test_2903() { testInvalid(test_2903_query); }

		private static final SubtypeQuery test_2904_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("!(int | int)"));
		@Test public void test_2904() { testInvalid(test_2904_query); }

		private static final SubtypeQuery test_2905_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_2905() { testInvalid(test_2905_query); }

		private static final SubtypeQuery test_2906_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_2906() { testInvalid(test_2906_query); }

		private static final SubtypeQuery test_2907_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{{any}, int}"));
		@Test public void test_2907() { testInvalid(test_2907_query); }

		private static final SubtypeQuery test_2908_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_2908() { testInvalid(test_2908_query); }

		private static final SubtypeQuery test_2909_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{(any | int), int}"));
		@Test public void test_2909() { testInvalid(test_2909_query); }

		private static final SubtypeQuery test_2910_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_2910() { testInvalid(test_2910_query); }

		private static final SubtypeQuery test_2911_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{!any, {int}}"));
		@Test public void test_2911() { testValid(test_2911_query); }

		private static final SubtypeQuery test_2912_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_2912() { testInvalid(test_2912_query); }

		private static final SubtypeQuery test_2913_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_2913() { testInvalid(test_2913_query); }

		private static final SubtypeQuery test_2914_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{any, !any}"));
		@Test public void test_2914() { testValid(test_2914_query); }

		private static final SubtypeQuery test_2915_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{{any}, !int}"));
		@Test public void test_2915() { testInvalid(test_2915_query); }

		private static final SubtypeQuery test_2916_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_2916() { testInvalid(test_2916_query); }

		private static final SubtypeQuery test_2917_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_2917() { testInvalid(test_2917_query); }

		private static final SubtypeQuery test_2918_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_2918() { testInvalid(test_2918_query); }

		private static final SubtypeQuery test_2919_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_2919() { testInvalid(test_2919_query); }

		private static final SubtypeQuery test_2920_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_2920() { testInvalid(test_2920_query); }

		private static final SubtypeQuery test_2921_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_2921() { testInvalid(test_2921_query); }

		private static final SubtypeQuery test_2922_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_2922() { testInvalid(test_2922_query); }

		private static final SubtypeQuery test_2923_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_2923() { testInvalid(test_2923_query); }

		private static final SubtypeQuery test_2924_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_2924() { testInvalid(test_2924_query); }

		private static final SubtypeQuery test_2925_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_2925() { testInvalid(test_2925_query); }

		private static final SubtypeQuery test_2926_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_2926() { testInvalid(test_2926_query); }

		private static final SubtypeQuery test_2927_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_2927() { testInvalid(test_2927_query); }

		private static final SubtypeQuery test_2928_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_2928() { testInvalid(test_2928_query); }

		private static final SubtypeQuery test_2929_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_2929() { testValid(test_2929_query); }

		private static final SubtypeQuery test_2930_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_2930() { testInvalid(test_2930_query); }

		private static final SubtypeQuery test_2931_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_2931() { testInvalid(test_2931_query); }

		private static final SubtypeQuery test_2932_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_2932() { testInvalid(test_2932_query); }

		private static final SubtypeQuery test_2933_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_2933() { testInvalid(test_2933_query); }

		private static final SubtypeQuery test_2934_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_2934() { testInvalid(test_2934_query); }

		private static final SubtypeQuery test_2935_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_2935() { testInvalid(test_2935_query); }

		private static final SubtypeQuery test_2936_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_2936() { testInvalid(test_2936_query); }

		private static final SubtypeQuery test_2937_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_2937() { testInvalid(test_2937_query); }

		private static final SubtypeQuery test_2938_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_2938() { testInvalid(test_2938_query); }

		private static final SubtypeQuery test_2939_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_2939() { testInvalid(test_2939_query); }

		private static final SubtypeQuery test_2940_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_2940() { testInvalid(test_2940_query); }

		private static final SubtypeQuery test_2941_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_2941() { testValid(test_2941_query); }

		private static final SubtypeQuery test_2942_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_2942() { testInvalid(test_2942_query); }

		private static final SubtypeQuery test_2943_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_2943() { testInvalid(test_2943_query); }

		private static final SubtypeQuery test_2944_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_2944() { testInvalid(test_2944_query); }

		private static final SubtypeQuery test_2945_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_2945() { testInvalid(test_2945_query); }

		private static final SubtypeQuery test_2946_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_2946() { testInvalid(test_2946_query); }

		private static final SubtypeQuery test_2947_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_2947() { testInvalid(test_2947_query); }

		private static final SubtypeQuery test_2948_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_2948() { testInvalid(test_2948_query); }

		private static final SubtypeQuery test_2949_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_2949() { testInvalid(test_2949_query); }

		private static final SubtypeQuery test_2950_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_2950() { testInvalid(test_2950_query); }

		private static final SubtypeQuery test_2951_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_2951() { testInvalid(test_2951_query); }

		private static final SubtypeQuery test_2952_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_2952() { testInvalid(test_2952_query); }

		private static final SubtypeQuery test_2953_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_2953() { testInvalid(test_2953_query); }

		private static final SubtypeQuery test_2954_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_2954() { testInvalid(test_2954_query); }

		private static final SubtypeQuery test_2955_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_2955() { testInvalid(test_2955_query); }

		private static final SubtypeQuery test_2956_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("(!any | any)"));
		@Test public void test_2956() { testInvalid(test_2956_query); }

		private static final SubtypeQuery test_2957_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("({int, any} | any)"));
		@Test public void test_2957() { testInvalid(test_2957_query); }

		private static final SubtypeQuery test_2958_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("({any, int} | any)"));
		@Test public void test_2958() { testInvalid(test_2958_query); }

		private static final SubtypeQuery test_2959_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("((int & int) | any)"));
		@Test public void test_2959() { testInvalid(test_2959_query); }

		private static final SubtypeQuery test_2960_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("({int, int} | int)"));
		@Test public void test_2960() { testInvalid(test_2960_query); }

		private static final SubtypeQuery test_2961_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("((any | any) | int)"));
		@Test public void test_2961() { testInvalid(test_2961_query); }

		private static final SubtypeQuery test_2962_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("((int | any) | int)"));
		@Test public void test_2962() { testInvalid(test_2962_query); }

		private static final SubtypeQuery test_2963_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("(any | {any})"));
		@Test public void test_2963() { testInvalid(test_2963_query); }

		private static final SubtypeQuery test_2964_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("(int | {any})"));
		@Test public void test_2964() { testInvalid(test_2964_query); }

		private static final SubtypeQuery test_2965_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_2965() { testInvalid(test_2965_query); }

		private static final SubtypeQuery test_2966_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("(any | {int})"));
		@Test public void test_2966() { testInvalid(test_2966_query); }

		private static final SubtypeQuery test_2967_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_2967() { testInvalid(test_2967_query); }

		private static final SubtypeQuery test_2968_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("(!int | !any)"));
		@Test public void test_2968() { testInvalid(test_2968_query); }

		private static final SubtypeQuery test_2969_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_2969() { testInvalid(test_2969_query); }

		private static final SubtypeQuery test_2970_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_2970() { testInvalid(test_2970_query); }

		private static final SubtypeQuery test_2971_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("({int} | !int)"));
		@Test public void test_2971() { testInvalid(test_2971_query); }

		private static final SubtypeQuery test_2972_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("(!any | !int)"));
		@Test public void test_2972() { testInvalid(test_2972_query); }

		private static final SubtypeQuery test_2973_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_2973() { testInvalid(test_2973_query); }

		private static final SubtypeQuery test_2974_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_2974() { testInvalid(test_2974_query); }

		private static final SubtypeQuery test_2975_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_2975() { testInvalid(test_2975_query); }

		private static final SubtypeQuery test_2976_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_2976() { testInvalid(test_2976_query); }

		private static final SubtypeQuery test_2977_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_2977() { testInvalid(test_2977_query); }

		private static final SubtypeQuery test_2978_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_2978() { testInvalid(test_2978_query); }

		private static final SubtypeQuery test_2979_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_2979() { testInvalid(test_2979_query); }

		private static final SubtypeQuery test_2980_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_2980() { testInvalid(test_2980_query); }

		private static final SubtypeQuery test_2981_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_2981() { testInvalid(test_2981_query); }

		private static final SubtypeQuery test_2982_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_2982() { testInvalid(test_2982_query); }

		private static final SubtypeQuery test_2983_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_2983() { testInvalid(test_2983_query); }

		private static final SubtypeQuery test_2984_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_2984() { testInvalid(test_2984_query); }

		private static final SubtypeQuery test_2985_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_2985() { testInvalid(test_2985_query); }

		private static final SubtypeQuery test_2986_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_2986() { testInvalid(test_2986_query); }

		private static final SubtypeQuery test_2987_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("(int | (any | int))"));
		@Test public void test_2987() { testInvalid(test_2987_query); }

		private static final SubtypeQuery test_2988_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_2988() { testInvalid(test_2988_query); }

		private static final SubtypeQuery test_2989_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_2989() { testInvalid(test_2989_query); }

		private static final SubtypeQuery test_2990_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_2990() { testInvalid(test_2990_query); }

		private static final SubtypeQuery test_2991_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_2991() { testInvalid(test_2991_query); }

		private static final SubtypeQuery test_2992_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_2992() { testInvalid(test_2992_query); }

		private static final SubtypeQuery test_2993_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_2993() { testInvalid(test_2993_query); }

		private static final SubtypeQuery test_2994_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("(int | (any & any))"));
		@Test public void test_2994() { testInvalid(test_2994_query); }

		private static final SubtypeQuery test_2995_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_2995() { testInvalid(test_2995_query); }

		private static final SubtypeQuery test_2996_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_2996() { testInvalid(test_2996_query); }

		private static final SubtypeQuery test_2997_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_2997() { testInvalid(test_2997_query); }

		private static final SubtypeQuery test_2998_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_2998() { testInvalid(test_2998_query); }

		private static final SubtypeQuery test_2999_query = createSubtypeQuery(parseWhiley("{!any, {int, int}}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_2999() { testInvalid(test_2999_query); }

	}
	public static class Part_3 {
		private static final SubtypeQuery test_3000_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("!int"));
		@Test public void test_3000() { testInvalid(test_3000_query); }

		private static final SubtypeQuery test_3001_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("(any | any)"));
		@Test public void test_3001() { testInvalid(test_3001_query); }

		private static final SubtypeQuery test_3002_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("(any & any)"));
		@Test public void test_3002() { testInvalid(test_3002_query); }

		private static final SubtypeQuery test_3003_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{{int, int}}"));
		@Test public void test_3003() { testInvalid(test_3003_query); }

		private static final SubtypeQuery test_3004_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("!(int | int)"));
		@Test public void test_3004() { testInvalid(test_3004_query); }

		private static final SubtypeQuery test_3005_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_3005() { testInvalid(test_3005_query); }

		private static final SubtypeQuery test_3006_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_3006() { testInvalid(test_3006_query); }

		private static final SubtypeQuery test_3007_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{{any}, int}"));
		@Test public void test_3007() { testInvalid(test_3007_query); }

		private static final SubtypeQuery test_3008_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_3008() { testInvalid(test_3008_query); }

		private static final SubtypeQuery test_3009_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{(any | int), int}"));
		@Test public void test_3009() { testInvalid(test_3009_query); }

		private static final SubtypeQuery test_3010_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_3010() { testInvalid(test_3010_query); }

		private static final SubtypeQuery test_3011_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{!any, {int}}"));
		@Test public void test_3011() { testValid(test_3011_query); }

		private static final SubtypeQuery test_3012_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_3012() { testInvalid(test_3012_query); }

		private static final SubtypeQuery test_3013_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_3013() { testInvalid(test_3013_query); }

		private static final SubtypeQuery test_3014_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{any, !any}"));
		@Test public void test_3014() { testValid(test_3014_query); }

		private static final SubtypeQuery test_3015_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{{any}, !int}"));
		@Test public void test_3015() { testInvalid(test_3015_query); }

		private static final SubtypeQuery test_3016_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_3016() { testInvalid(test_3016_query); }

		private static final SubtypeQuery test_3017_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_3017() { testInvalid(test_3017_query); }

		private static final SubtypeQuery test_3018_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_3018() { testInvalid(test_3018_query); }

		private static final SubtypeQuery test_3019_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_3019() { testInvalid(test_3019_query); }

		private static final SubtypeQuery test_3020_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_3020() { testInvalid(test_3020_query); }

		private static final SubtypeQuery test_3021_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_3021() { testInvalid(test_3021_query); }

		private static final SubtypeQuery test_3022_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_3022() { testInvalid(test_3022_query); }

		private static final SubtypeQuery test_3023_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_3023() { testInvalid(test_3023_query); }

		private static final SubtypeQuery test_3024_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_3024() { testInvalid(test_3024_query); }

		private static final SubtypeQuery test_3025_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_3025() { testInvalid(test_3025_query); }

		private static final SubtypeQuery test_3026_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_3026() { testInvalid(test_3026_query); }

		private static final SubtypeQuery test_3027_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_3027() { testInvalid(test_3027_query); }

		private static final SubtypeQuery test_3028_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_3028() { testInvalid(test_3028_query); }

		private static final SubtypeQuery test_3029_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_3029() { testValid(test_3029_query); }

		private static final SubtypeQuery test_3030_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_3030() { testValid(test_3030_query); }

		private static final SubtypeQuery test_3031_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_3031() { testValid(test_3031_query); }

		private static final SubtypeQuery test_3032_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_3032() { testInvalid(test_3032_query); }

		private static final SubtypeQuery test_3033_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_3033() { testInvalid(test_3033_query); }

		private static final SubtypeQuery test_3034_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_3034() { testInvalid(test_3034_query); }

		private static final SubtypeQuery test_3035_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_3035() { testInvalid(test_3035_query); }

		private static final SubtypeQuery test_3036_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_3036() { testInvalid(test_3036_query); }

		private static final SubtypeQuery test_3037_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_3037() { testInvalid(test_3037_query); }

		private static final SubtypeQuery test_3038_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_3038() { testInvalid(test_3038_query); }

		private static final SubtypeQuery test_3039_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_3039() { testInvalid(test_3039_query); }

		private static final SubtypeQuery test_3040_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_3040() { testInvalid(test_3040_query); }

		private static final SubtypeQuery test_3041_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_3041() { testValid(test_3041_query); }

		private static final SubtypeQuery test_3042_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_3042() { testInvalid(test_3042_query); }

		private static final SubtypeQuery test_3043_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_3043() { testInvalid(test_3043_query); }

		private static final SubtypeQuery test_3044_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_3044() { testInvalid(test_3044_query); }

		private static final SubtypeQuery test_3045_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_3045() { testInvalid(test_3045_query); }

		private static final SubtypeQuery test_3046_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_3046() { testInvalid(test_3046_query); }

		private static final SubtypeQuery test_3047_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_3047() { testInvalid(test_3047_query); }

		private static final SubtypeQuery test_3048_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_3048() { testInvalid(test_3048_query); }

		private static final SubtypeQuery test_3049_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_3049() { testInvalid(test_3049_query); }

		private static final SubtypeQuery test_3050_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_3050() { testInvalid(test_3050_query); }

		private static final SubtypeQuery test_3051_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_3051() { testInvalid(test_3051_query); }

		private static final SubtypeQuery test_3052_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_3052() { testInvalid(test_3052_query); }

		private static final SubtypeQuery test_3053_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_3053() { testInvalid(test_3053_query); }

		private static final SubtypeQuery test_3054_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_3054() { testInvalid(test_3054_query); }

		private static final SubtypeQuery test_3055_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_3055() { testInvalid(test_3055_query); }

		private static final SubtypeQuery test_3056_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("(!any | any)"));
		@Test public void test_3056() { testInvalid(test_3056_query); }

		private static final SubtypeQuery test_3057_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("({int, any} | any)"));
		@Test public void test_3057() { testInvalid(test_3057_query); }

		private static final SubtypeQuery test_3058_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("({any, int} | any)"));
		@Test public void test_3058() { testInvalid(test_3058_query); }

		private static final SubtypeQuery test_3059_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("((int & int) | any)"));
		@Test public void test_3059() { testInvalid(test_3059_query); }

		private static final SubtypeQuery test_3060_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("({int, int} | int)"));
		@Test public void test_3060() { testInvalid(test_3060_query); }

		private static final SubtypeQuery test_3061_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("((any | any) | int)"));
		@Test public void test_3061() { testInvalid(test_3061_query); }

		private static final SubtypeQuery test_3062_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("((int | any) | int)"));
		@Test public void test_3062() { testInvalid(test_3062_query); }

		private static final SubtypeQuery test_3063_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("(any | {any})"));
		@Test public void test_3063() { testInvalid(test_3063_query); }

		private static final SubtypeQuery test_3064_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("(int | {any})"));
		@Test public void test_3064() { testInvalid(test_3064_query); }

		private static final SubtypeQuery test_3065_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_3065() { testInvalid(test_3065_query); }

		private static final SubtypeQuery test_3066_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("(any | {int})"));
		@Test public void test_3066() { testInvalid(test_3066_query); }

		private static final SubtypeQuery test_3067_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_3067() { testInvalid(test_3067_query); }

		private static final SubtypeQuery test_3068_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("(!int | !any)"));
		@Test public void test_3068() { testInvalid(test_3068_query); }

		private static final SubtypeQuery test_3069_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_3069() { testInvalid(test_3069_query); }

		private static final SubtypeQuery test_3070_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_3070() { testInvalid(test_3070_query); }

		private static final SubtypeQuery test_3071_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("({int} | !int)"));
		@Test public void test_3071() { testInvalid(test_3071_query); }

		private static final SubtypeQuery test_3072_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("(!any | !int)"));
		@Test public void test_3072() { testInvalid(test_3072_query); }

		private static final SubtypeQuery test_3073_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_3073() { testInvalid(test_3073_query); }

		private static final SubtypeQuery test_3074_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_3074() { testInvalid(test_3074_query); }

		private static final SubtypeQuery test_3075_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_3075() { testInvalid(test_3075_query); }

		private static final SubtypeQuery test_3076_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_3076() { testInvalid(test_3076_query); }

		private static final SubtypeQuery test_3077_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_3077() { testInvalid(test_3077_query); }

		private static final SubtypeQuery test_3078_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_3078() { testInvalid(test_3078_query); }

		private static final SubtypeQuery test_3079_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_3079() { testInvalid(test_3079_query); }

		private static final SubtypeQuery test_3080_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_3080() { testInvalid(test_3080_query); }

		private static final SubtypeQuery test_3081_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_3081() { testInvalid(test_3081_query); }

		private static final SubtypeQuery test_3082_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_3082() { testInvalid(test_3082_query); }

		private static final SubtypeQuery test_3083_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_3083() { testInvalid(test_3083_query); }

		private static final SubtypeQuery test_3084_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_3084() { testInvalid(test_3084_query); }

		private static final SubtypeQuery test_3085_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_3085() { testInvalid(test_3085_query); }

		private static final SubtypeQuery test_3086_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_3086() { testInvalid(test_3086_query); }

		private static final SubtypeQuery test_3087_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("(int | (any | int))"));
		@Test public void test_3087() { testInvalid(test_3087_query); }

		private static final SubtypeQuery test_3088_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_3088() { testInvalid(test_3088_query); }

		private static final SubtypeQuery test_3089_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_3089() { testInvalid(test_3089_query); }

		private static final SubtypeQuery test_3090_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_3090() { testInvalid(test_3090_query); }

		private static final SubtypeQuery test_3091_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_3091() { testInvalid(test_3091_query); }

		private static final SubtypeQuery test_3092_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_3092() { testInvalid(test_3092_query); }

		private static final SubtypeQuery test_3093_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_3093() { testInvalid(test_3093_query); }

		private static final SubtypeQuery test_3094_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("(int | (any & any))"));
		@Test public void test_3094() { testInvalid(test_3094_query); }

		private static final SubtypeQuery test_3095_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_3095() { testInvalid(test_3095_query); }

		private static final SubtypeQuery test_3096_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_3096() { testInvalid(test_3096_query); }

		private static final SubtypeQuery test_3097_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_3097() { testInvalid(test_3097_query); }

		private static final SubtypeQuery test_3098_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_3098() { testInvalid(test_3098_query); }

		private static final SubtypeQuery test_3099_query = createSubtypeQuery(parseWhiley("{(int | any), {int, int}}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_3099() { testInvalid(test_3099_query); }

		private static final SubtypeQuery test_3100_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("!int"));
		@Test public void test_3100() { testInvalid(test_3100_query); }

		private static final SubtypeQuery test_3101_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("(any | any)"));
		@Test public void test_3101() { testInvalid(test_3101_query); }

		private static final SubtypeQuery test_3102_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("(any & any)"));
		@Test public void test_3102() { testInvalid(test_3102_query); }

		private static final SubtypeQuery test_3103_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{{int, int}}"));
		@Test public void test_3103() { testInvalid(test_3103_query); }

		private static final SubtypeQuery test_3104_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("!(int | int)"));
		@Test public void test_3104() { testInvalid(test_3104_query); }

		private static final SubtypeQuery test_3105_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_3105() { testInvalid(test_3105_query); }

		private static final SubtypeQuery test_3106_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_3106() { testInvalid(test_3106_query); }

		private static final SubtypeQuery test_3107_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{{any}, int}"));
		@Test public void test_3107() { testInvalid(test_3107_query); }

		private static final SubtypeQuery test_3108_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_3108() { testInvalid(test_3108_query); }

		private static final SubtypeQuery test_3109_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{(any | int), int}"));
		@Test public void test_3109() { testInvalid(test_3109_query); }

		private static final SubtypeQuery test_3110_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_3110() { testInvalid(test_3110_query); }

		private static final SubtypeQuery test_3111_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{!any, {int}}"));
		@Test public void test_3111() { testValid(test_3111_query); }

		private static final SubtypeQuery test_3112_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_3112() { testInvalid(test_3112_query); }

		private static final SubtypeQuery test_3113_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_3113() { testInvalid(test_3113_query); }

		private static final SubtypeQuery test_3114_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{any, !any}"));
		@Test public void test_3114() { testValid(test_3114_query); }

		private static final SubtypeQuery test_3115_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{{any}, !int}"));
		@Test public void test_3115() { testInvalid(test_3115_query); }

		private static final SubtypeQuery test_3116_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_3116() { testInvalid(test_3116_query); }

		private static final SubtypeQuery test_3117_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_3117() { testInvalid(test_3117_query); }

		private static final SubtypeQuery test_3118_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_3118() { testInvalid(test_3118_query); }

		private static final SubtypeQuery test_3119_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_3119() { testInvalid(test_3119_query); }

		private static final SubtypeQuery test_3120_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_3120() { testInvalid(test_3120_query); }

		private static final SubtypeQuery test_3121_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_3121() { testInvalid(test_3121_query); }

		private static final SubtypeQuery test_3122_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_3122() { testInvalid(test_3122_query); }

		private static final SubtypeQuery test_3123_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_3123() { testInvalid(test_3123_query); }

		private static final SubtypeQuery test_3124_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_3124() { testInvalid(test_3124_query); }

		private static final SubtypeQuery test_3125_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_3125() { testInvalid(test_3125_query); }

		private static final SubtypeQuery test_3126_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_3126() { testInvalid(test_3126_query); }

		private static final SubtypeQuery test_3127_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_3127() { testInvalid(test_3127_query); }

		private static final SubtypeQuery test_3128_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_3128() { testInvalid(test_3128_query); }

		private static final SubtypeQuery test_3129_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_3129() { testValid(test_3129_query); }

		private static final SubtypeQuery test_3130_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_3130() { testInvalid(test_3130_query); }

		private static final SubtypeQuery test_3131_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_3131() { testValid(test_3131_query); }

		private static final SubtypeQuery test_3132_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_3132() { testInvalid(test_3132_query); }

		private static final SubtypeQuery test_3133_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_3133() { testInvalid(test_3133_query); }

		private static final SubtypeQuery test_3134_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_3134() { testInvalid(test_3134_query); }

		private static final SubtypeQuery test_3135_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_3135() { testInvalid(test_3135_query); }

		private static final SubtypeQuery test_3136_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_3136() { testInvalid(test_3136_query); }

		private static final SubtypeQuery test_3137_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_3137() { testInvalid(test_3137_query); }

		private static final SubtypeQuery test_3138_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_3138() { testInvalid(test_3138_query); }

		private static final SubtypeQuery test_3139_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_3139() { testInvalid(test_3139_query); }

		private static final SubtypeQuery test_3140_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_3140() { testInvalid(test_3140_query); }

		private static final SubtypeQuery test_3141_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_3141() { testValid(test_3141_query); }

		private static final SubtypeQuery test_3142_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_3142() { testInvalid(test_3142_query); }

		private static final SubtypeQuery test_3143_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_3143() { testInvalid(test_3143_query); }

		private static final SubtypeQuery test_3144_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_3144() { testInvalid(test_3144_query); }

		private static final SubtypeQuery test_3145_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_3145() { testInvalid(test_3145_query); }

		private static final SubtypeQuery test_3146_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_3146() { testInvalid(test_3146_query); }

		private static final SubtypeQuery test_3147_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_3147() { testInvalid(test_3147_query); }

		private static final SubtypeQuery test_3148_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_3148() { testInvalid(test_3148_query); }

		private static final SubtypeQuery test_3149_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_3149() { testInvalid(test_3149_query); }

		private static final SubtypeQuery test_3150_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_3150() { testInvalid(test_3150_query); }

		private static final SubtypeQuery test_3151_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_3151() { testInvalid(test_3151_query); }

		private static final SubtypeQuery test_3152_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_3152() { testInvalid(test_3152_query); }

		private static final SubtypeQuery test_3153_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_3153() { testInvalid(test_3153_query); }

		private static final SubtypeQuery test_3154_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_3154() { testInvalid(test_3154_query); }

		private static final SubtypeQuery test_3155_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_3155() { testInvalid(test_3155_query); }

		private static final SubtypeQuery test_3156_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("(!any | any)"));
		@Test public void test_3156() { testInvalid(test_3156_query); }

		private static final SubtypeQuery test_3157_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("({int, any} | any)"));
		@Test public void test_3157() { testInvalid(test_3157_query); }

		private static final SubtypeQuery test_3158_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("({any, int} | any)"));
		@Test public void test_3158() { testInvalid(test_3158_query); }

		private static final SubtypeQuery test_3159_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("((int & int) | any)"));
		@Test public void test_3159() { testInvalid(test_3159_query); }

		private static final SubtypeQuery test_3160_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("({int, int} | int)"));
		@Test public void test_3160() { testInvalid(test_3160_query); }

		private static final SubtypeQuery test_3161_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("((any | any) | int)"));
		@Test public void test_3161() { testInvalid(test_3161_query); }

		private static final SubtypeQuery test_3162_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("((int | any) | int)"));
		@Test public void test_3162() { testInvalid(test_3162_query); }

		private static final SubtypeQuery test_3163_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("(any | {any})"));
		@Test public void test_3163() { testInvalid(test_3163_query); }

		private static final SubtypeQuery test_3164_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("(int | {any})"));
		@Test public void test_3164() { testInvalid(test_3164_query); }

		private static final SubtypeQuery test_3165_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_3165() { testInvalid(test_3165_query); }

		private static final SubtypeQuery test_3166_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("(any | {int})"));
		@Test public void test_3166() { testInvalid(test_3166_query); }

		private static final SubtypeQuery test_3167_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_3167() { testInvalid(test_3167_query); }

		private static final SubtypeQuery test_3168_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("(!int | !any)"));
		@Test public void test_3168() { testInvalid(test_3168_query); }

		private static final SubtypeQuery test_3169_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_3169() { testInvalid(test_3169_query); }

		private static final SubtypeQuery test_3170_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_3170() { testInvalid(test_3170_query); }

		private static final SubtypeQuery test_3171_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("({int} | !int)"));
		@Test public void test_3171() { testInvalid(test_3171_query); }

		private static final SubtypeQuery test_3172_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("(!any | !int)"));
		@Test public void test_3172() { testInvalid(test_3172_query); }

		private static final SubtypeQuery test_3173_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_3173() { testInvalid(test_3173_query); }

		private static final SubtypeQuery test_3174_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_3174() { testInvalid(test_3174_query); }

		private static final SubtypeQuery test_3175_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_3175() { testInvalid(test_3175_query); }

		private static final SubtypeQuery test_3176_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_3176() { testInvalid(test_3176_query); }

		private static final SubtypeQuery test_3177_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_3177() { testInvalid(test_3177_query); }

		private static final SubtypeQuery test_3178_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_3178() { testInvalid(test_3178_query); }

		private static final SubtypeQuery test_3179_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_3179() { testInvalid(test_3179_query); }

		private static final SubtypeQuery test_3180_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_3180() { testInvalid(test_3180_query); }

		private static final SubtypeQuery test_3181_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_3181() { testInvalid(test_3181_query); }

		private static final SubtypeQuery test_3182_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_3182() { testInvalid(test_3182_query); }

		private static final SubtypeQuery test_3183_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_3183() { testInvalid(test_3183_query); }

		private static final SubtypeQuery test_3184_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_3184() { testInvalid(test_3184_query); }

		private static final SubtypeQuery test_3185_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_3185() { testInvalid(test_3185_query); }

		private static final SubtypeQuery test_3186_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_3186() { testInvalid(test_3186_query); }

		private static final SubtypeQuery test_3187_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("(int | (any | int))"));
		@Test public void test_3187() { testInvalid(test_3187_query); }

		private static final SubtypeQuery test_3188_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_3188() { testInvalid(test_3188_query); }

		private static final SubtypeQuery test_3189_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_3189() { testInvalid(test_3189_query); }

		private static final SubtypeQuery test_3190_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_3190() { testInvalid(test_3190_query); }

		private static final SubtypeQuery test_3191_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_3191() { testInvalid(test_3191_query); }

		private static final SubtypeQuery test_3192_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_3192() { testInvalid(test_3192_query); }

		private static final SubtypeQuery test_3193_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_3193() { testInvalid(test_3193_query); }

		private static final SubtypeQuery test_3194_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("(int | (any & any))"));
		@Test public void test_3194() { testInvalid(test_3194_query); }

		private static final SubtypeQuery test_3195_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_3195() { testInvalid(test_3195_query); }

		private static final SubtypeQuery test_3196_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_3196() { testInvalid(test_3196_query); }

		private static final SubtypeQuery test_3197_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_3197() { testInvalid(test_3197_query); }

		private static final SubtypeQuery test_3198_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_3198() { testInvalid(test_3198_query); }

		private static final SubtypeQuery test_3199_query = createSubtypeQuery(parseWhiley("{(int & int), {int, int}}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_3199() { testInvalid(test_3199_query); }

		private static final SubtypeQuery test_3200_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("!int"));
		@Test public void test_3200() { testInvalid(test_3200_query); }

		private static final SubtypeQuery test_3201_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("(any | any)"));
		@Test public void test_3201() { testInvalid(test_3201_query); }

		private static final SubtypeQuery test_3202_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("(any & any)"));
		@Test public void test_3202() { testInvalid(test_3202_query); }

		private static final SubtypeQuery test_3203_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{{int, int}}"));
		@Test public void test_3203() { testInvalid(test_3203_query); }

		private static final SubtypeQuery test_3204_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("!(int | int)"));
		@Test public void test_3204() { testInvalid(test_3204_query); }

		private static final SubtypeQuery test_3205_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_3205() { testInvalid(test_3205_query); }

		private static final SubtypeQuery test_3206_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_3206() { testInvalid(test_3206_query); }

		private static final SubtypeQuery test_3207_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{{any}, int}"));
		@Test public void test_3207() { testValid(test_3207_query); }

		private static final SubtypeQuery test_3208_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_3208() { testInvalid(test_3208_query); }

		private static final SubtypeQuery test_3209_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{(any | int), int}"));
		@Test public void test_3209() { testInvalid(test_3209_query); }

		private static final SubtypeQuery test_3210_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_3210() { testInvalid(test_3210_query); }

		private static final SubtypeQuery test_3211_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{!any, {int}}"));
		@Test public void test_3211() { testValid(test_3211_query); }

		private static final SubtypeQuery test_3212_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_3212() { testInvalid(test_3212_query); }

		private static final SubtypeQuery test_3213_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_3213() { testInvalid(test_3213_query); }

		private static final SubtypeQuery test_3214_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{any, !any}"));
		@Test public void test_3214() { testValid(test_3214_query); }

		private static final SubtypeQuery test_3215_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{{any}, !int}"));
		@Test public void test_3215() { testValid(test_3215_query); }

		private static final SubtypeQuery test_3216_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_3216() { testInvalid(test_3216_query); }

		private static final SubtypeQuery test_3217_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_3217() { testInvalid(test_3217_query); }

		private static final SubtypeQuery test_3218_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_3218() { testInvalid(test_3218_query); }

		private static final SubtypeQuery test_3219_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_3219() { testInvalid(test_3219_query); }

		private static final SubtypeQuery test_3220_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_3220() { testInvalid(test_3220_query); }

		private static final SubtypeQuery test_3221_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_3221() { testInvalid(test_3221_query); }

		private static final SubtypeQuery test_3222_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_3222() { testInvalid(test_3222_query); }

		private static final SubtypeQuery test_3223_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_3223() { testInvalid(test_3223_query); }

		private static final SubtypeQuery test_3224_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_3224() { testInvalid(test_3224_query); }

		private static final SubtypeQuery test_3225_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_3225() { testInvalid(test_3225_query); }

		private static final SubtypeQuery test_3226_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_3226() { testInvalid(test_3226_query); }

		private static final SubtypeQuery test_3227_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_3227() { testValid(test_3227_query); }

		private static final SubtypeQuery test_3228_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_3228() { testInvalid(test_3228_query); }

		private static final SubtypeQuery test_3229_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_3229() { testValid(test_3229_query); }

		private static final SubtypeQuery test_3230_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_3230() { testInvalid(test_3230_query); }

		private static final SubtypeQuery test_3231_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_3231() { testInvalid(test_3231_query); }

		private static final SubtypeQuery test_3232_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_3232() { testValid(test_3232_query); }

		private static final SubtypeQuery test_3233_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_3233() { testInvalid(test_3233_query); }

		private static final SubtypeQuery test_3234_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_3234() { testInvalid(test_3234_query); }

		private static final SubtypeQuery test_3235_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_3235() { testInvalid(test_3235_query); }

		private static final SubtypeQuery test_3236_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_3236() { testInvalid(test_3236_query); }

		private static final SubtypeQuery test_3237_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_3237() { testInvalid(test_3237_query); }

		private static final SubtypeQuery test_3238_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_3238() { testInvalid(test_3238_query); }

		private static final SubtypeQuery test_3239_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_3239() { testInvalid(test_3239_query); }

		private static final SubtypeQuery test_3240_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_3240() { testValid(test_3240_query); }

		private static final SubtypeQuery test_3241_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_3241() { testValid(test_3241_query); }

		private static final SubtypeQuery test_3242_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_3242() { testInvalid(test_3242_query); }

		private static final SubtypeQuery test_3243_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_3243() { testInvalid(test_3243_query); }

		private static final SubtypeQuery test_3244_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_3244() { testValid(test_3244_query); }

		private static final SubtypeQuery test_3245_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_3245() { testInvalid(test_3245_query); }

		private static final SubtypeQuery test_3246_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_3246() { testInvalid(test_3246_query); }

		private static final SubtypeQuery test_3247_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_3247() { testInvalid(test_3247_query); }

		private static final SubtypeQuery test_3248_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_3248() { testInvalid(test_3248_query); }

		private static final SubtypeQuery test_3249_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_3249() { testValid(test_3249_query); }

		private static final SubtypeQuery test_3250_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_3250() { testInvalid(test_3250_query); }

		private static final SubtypeQuery test_3251_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_3251() { testInvalid(test_3251_query); }

		private static final SubtypeQuery test_3252_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_3252() { testInvalid(test_3252_query); }

		private static final SubtypeQuery test_3253_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_3253() { testValid(test_3253_query); }

		private static final SubtypeQuery test_3254_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_3254() { testInvalid(test_3254_query); }

		private static final SubtypeQuery test_3255_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_3255() { testInvalid(test_3255_query); }

		private static final SubtypeQuery test_3256_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("(!any | any)"));
		@Test public void test_3256() { testInvalid(test_3256_query); }

		private static final SubtypeQuery test_3257_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("({int, any} | any)"));
		@Test public void test_3257() { testInvalid(test_3257_query); }

		private static final SubtypeQuery test_3258_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("({any, int} | any)"));
		@Test public void test_3258() { testInvalid(test_3258_query); }

		private static final SubtypeQuery test_3259_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("((int & int) | any)"));
		@Test public void test_3259() { testInvalid(test_3259_query); }

		private static final SubtypeQuery test_3260_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("({int, int} | int)"));
		@Test public void test_3260() { testInvalid(test_3260_query); }

		private static final SubtypeQuery test_3261_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("((any | any) | int)"));
		@Test public void test_3261() { testInvalid(test_3261_query); }

		private static final SubtypeQuery test_3262_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("((int | any) | int)"));
		@Test public void test_3262() { testInvalid(test_3262_query); }

		private static final SubtypeQuery test_3263_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("(any | {any})"));
		@Test public void test_3263() { testInvalid(test_3263_query); }

		private static final SubtypeQuery test_3264_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("(int | {any})"));
		@Test public void test_3264() { testInvalid(test_3264_query); }

		private static final SubtypeQuery test_3265_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_3265() { testInvalid(test_3265_query); }

		private static final SubtypeQuery test_3266_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("(any | {int})"));
		@Test public void test_3266() { testInvalid(test_3266_query); }

		private static final SubtypeQuery test_3267_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_3267() { testInvalid(test_3267_query); }

		private static final SubtypeQuery test_3268_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("(!int | !any)"));
		@Test public void test_3268() { testInvalid(test_3268_query); }

		private static final SubtypeQuery test_3269_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_3269() { testInvalid(test_3269_query); }

		private static final SubtypeQuery test_3270_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_3270() { testInvalid(test_3270_query); }

		private static final SubtypeQuery test_3271_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("({int} | !int)"));
		@Test public void test_3271() { testInvalid(test_3271_query); }

		private static final SubtypeQuery test_3272_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("(!any | !int)"));
		@Test public void test_3272() { testInvalid(test_3272_query); }

		private static final SubtypeQuery test_3273_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_3273() { testInvalid(test_3273_query); }

		private static final SubtypeQuery test_3274_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_3274() { testInvalid(test_3274_query); }

		private static final SubtypeQuery test_3275_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_3275() { testInvalid(test_3275_query); }

		private static final SubtypeQuery test_3276_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_3276() { testInvalid(test_3276_query); }

		private static final SubtypeQuery test_3277_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_3277() { testInvalid(test_3277_query); }

		private static final SubtypeQuery test_3278_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_3278() { testInvalid(test_3278_query); }

		private static final SubtypeQuery test_3279_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_3279() { testInvalid(test_3279_query); }

		private static final SubtypeQuery test_3280_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_3280() { testInvalid(test_3280_query); }

		private static final SubtypeQuery test_3281_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_3281() { testInvalid(test_3281_query); }

		private static final SubtypeQuery test_3282_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_3282() { testInvalid(test_3282_query); }

		private static final SubtypeQuery test_3283_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_3283() { testInvalid(test_3283_query); }

		private static final SubtypeQuery test_3284_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_3284() { testInvalid(test_3284_query); }

		private static final SubtypeQuery test_3285_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_3285() { testInvalid(test_3285_query); }

		private static final SubtypeQuery test_3286_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_3286() { testInvalid(test_3286_query); }

		private static final SubtypeQuery test_3287_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("(int | (any | int))"));
		@Test public void test_3287() { testInvalid(test_3287_query); }

		private static final SubtypeQuery test_3288_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_3288() { testInvalid(test_3288_query); }

		private static final SubtypeQuery test_3289_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_3289() { testInvalid(test_3289_query); }

		private static final SubtypeQuery test_3290_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_3290() { testInvalid(test_3290_query); }

		private static final SubtypeQuery test_3291_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_3291() { testInvalid(test_3291_query); }

		private static final SubtypeQuery test_3292_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_3292() { testInvalid(test_3292_query); }

		private static final SubtypeQuery test_3293_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_3293() { testInvalid(test_3293_query); }

		private static final SubtypeQuery test_3294_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("(int | (any & any))"));
		@Test public void test_3294() { testInvalid(test_3294_query); }

		private static final SubtypeQuery test_3295_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_3295() { testInvalid(test_3295_query); }

		private static final SubtypeQuery test_3296_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_3296() { testInvalid(test_3296_query); }

		private static final SubtypeQuery test_3297_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_3297() { testInvalid(test_3297_query); }

		private static final SubtypeQuery test_3298_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_3298() { testInvalid(test_3298_query); }

		private static final SubtypeQuery test_3299_query = createSubtypeQuery(parseWhiley("{{any}, (any | any)}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_3299() { testInvalid(test_3299_query); }

		private static final SubtypeQuery test_3300_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("!int"));
		@Test public void test_3300() { testInvalid(test_3300_query); }

		private static final SubtypeQuery test_3301_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("(any | any)"));
		@Test public void test_3301() { testInvalid(test_3301_query); }

		private static final SubtypeQuery test_3302_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("(any & any)"));
		@Test public void test_3302() { testInvalid(test_3302_query); }

		private static final SubtypeQuery test_3303_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{{int, int}}"));
		@Test public void test_3303() { testInvalid(test_3303_query); }

		private static final SubtypeQuery test_3304_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("!(int | int)"));
		@Test public void test_3304() { testInvalid(test_3304_query); }

		private static final SubtypeQuery test_3305_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_3305() { testInvalid(test_3305_query); }

		private static final SubtypeQuery test_3306_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_3306() { testInvalid(test_3306_query); }

		private static final SubtypeQuery test_3307_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{{any}, int}"));
		@Test public void test_3307() { testInvalid(test_3307_query); }

		private static final SubtypeQuery test_3308_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_3308() { testInvalid(test_3308_query); }

		private static final SubtypeQuery test_3309_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{(any | int), int}"));
		@Test public void test_3309() { testInvalid(test_3309_query); }

		private static final SubtypeQuery test_3310_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_3310() { testInvalid(test_3310_query); }

		private static final SubtypeQuery test_3311_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{!any, {int}}"));
		@Test public void test_3311() { testValid(test_3311_query); }

		private static final SubtypeQuery test_3312_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_3312() { testInvalid(test_3312_query); }

		private static final SubtypeQuery test_3313_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_3313() { testValid(test_3313_query); }

		private static final SubtypeQuery test_3314_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{any, !any}"));
		@Test public void test_3314() { testValid(test_3314_query); }

		private static final SubtypeQuery test_3315_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{{any}, !int}"));
		@Test public void test_3315() { testInvalid(test_3315_query); }

		private static final SubtypeQuery test_3316_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_3316() { testInvalid(test_3316_query); }

		private static final SubtypeQuery test_3317_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_3317() { testInvalid(test_3317_query); }

		private static final SubtypeQuery test_3318_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_3318() { testValid(test_3318_query); }

		private static final SubtypeQuery test_3319_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_3319() { testInvalid(test_3319_query); }

		private static final SubtypeQuery test_3320_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_3320() { testInvalid(test_3320_query); }

		private static final SubtypeQuery test_3321_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_3321() { testValid(test_3321_query); }

		private static final SubtypeQuery test_3322_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_3322() { testValid(test_3322_query); }

		private static final SubtypeQuery test_3323_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_3323() { testInvalid(test_3323_query); }

		private static final SubtypeQuery test_3324_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_3324() { testValid(test_3324_query); }

		private static final SubtypeQuery test_3325_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_3325() { testValid(test_3325_query); }

		private static final SubtypeQuery test_3326_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_3326() { testInvalid(test_3326_query); }

		private static final SubtypeQuery test_3327_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_3327() { testInvalid(test_3327_query); }

		private static final SubtypeQuery test_3328_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_3328() { testInvalid(test_3328_query); }

		private static final SubtypeQuery test_3329_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_3329() { testValid(test_3329_query); }

		private static final SubtypeQuery test_3330_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_3330() { testInvalid(test_3330_query); }

		private static final SubtypeQuery test_3331_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_3331() { testValid(test_3331_query); }

		private static final SubtypeQuery test_3332_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_3332() { testInvalid(test_3332_query); }

		private static final SubtypeQuery test_3333_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_3333() { testValid(test_3333_query); }

		private static final SubtypeQuery test_3334_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_3334() { testInvalid(test_3334_query); }

		private static final SubtypeQuery test_3335_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_3335() { testInvalid(test_3335_query); }

		private static final SubtypeQuery test_3336_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_3336() { testInvalid(test_3336_query); }

		private static final SubtypeQuery test_3337_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_3337() { testValid(test_3337_query); }

		private static final SubtypeQuery test_3338_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_3338() { testInvalid(test_3338_query); }

		private static final SubtypeQuery test_3339_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_3339() { testInvalid(test_3339_query); }

		private static final SubtypeQuery test_3340_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_3340() { testInvalid(test_3340_query); }

		private static final SubtypeQuery test_3341_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_3341() { testValid(test_3341_query); }

		private static final SubtypeQuery test_3342_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_3342() { testInvalid(test_3342_query); }

		private static final SubtypeQuery test_3343_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_3343() { testValid(test_3343_query); }

		private static final SubtypeQuery test_3344_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_3344() { testInvalid(test_3344_query); }

		private static final SubtypeQuery test_3345_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_3345() { testInvalid(test_3345_query); }

		private static final SubtypeQuery test_3346_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_3346() { testInvalid(test_3346_query); }

		private static final SubtypeQuery test_3347_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_3347() { testValid(test_3347_query); }

		private static final SubtypeQuery test_3348_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_3348() { testInvalid(test_3348_query); }

		private static final SubtypeQuery test_3349_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_3349() { testInvalid(test_3349_query); }

		private static final SubtypeQuery test_3350_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_3350() { testInvalid(test_3350_query); }

		private static final SubtypeQuery test_3351_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_3351() { testInvalid(test_3351_query); }

		private static final SubtypeQuery test_3352_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_3352() { testValid(test_3352_query); }

		private static final SubtypeQuery test_3353_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_3353() { testInvalid(test_3353_query); }

		private static final SubtypeQuery test_3354_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_3354() { testInvalid(test_3354_query); }

		private static final SubtypeQuery test_3355_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_3355() { testValid(test_3355_query); }

		private static final SubtypeQuery test_3356_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("(!any | any)"));
		@Test public void test_3356() { testInvalid(test_3356_query); }

		private static final SubtypeQuery test_3357_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("({int, any} | any)"));
		@Test public void test_3357() { testInvalid(test_3357_query); }

		private static final SubtypeQuery test_3358_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("({any, int} | any)"));
		@Test public void test_3358() { testInvalid(test_3358_query); }

		private static final SubtypeQuery test_3359_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("((int & int) | any)"));
		@Test public void test_3359() { testInvalid(test_3359_query); }

		private static final SubtypeQuery test_3360_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("({int, int} | int)"));
		@Test public void test_3360() { testInvalid(test_3360_query); }

		private static final SubtypeQuery test_3361_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("((any | any) | int)"));
		@Test public void test_3361() { testInvalid(test_3361_query); }

		private static final SubtypeQuery test_3362_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("((int | any) | int)"));
		@Test public void test_3362() { testInvalid(test_3362_query); }

		private static final SubtypeQuery test_3363_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("(any | {any})"));
		@Test public void test_3363() { testInvalid(test_3363_query); }

		private static final SubtypeQuery test_3364_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("(int | {any})"));
		@Test public void test_3364() { testInvalid(test_3364_query); }

		private static final SubtypeQuery test_3365_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_3365() { testInvalid(test_3365_query); }

		private static final SubtypeQuery test_3366_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("(any | {int})"));
		@Test public void test_3366() { testInvalid(test_3366_query); }

		private static final SubtypeQuery test_3367_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_3367() { testInvalid(test_3367_query); }

		private static final SubtypeQuery test_3368_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("(!int | !any)"));
		@Test public void test_3368() { testInvalid(test_3368_query); }

		private static final SubtypeQuery test_3369_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_3369() { testValid(test_3369_query); }

		private static final SubtypeQuery test_3370_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_3370() { testInvalid(test_3370_query); }

		private static final SubtypeQuery test_3371_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("({int} | !int)"));
		@Test public void test_3371() { testInvalid(test_3371_query); }

		private static final SubtypeQuery test_3372_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("(!any | !int)"));
		@Test public void test_3372() { testInvalid(test_3372_query); }

		private static final SubtypeQuery test_3373_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_3373() { testInvalid(test_3373_query); }

		private static final SubtypeQuery test_3374_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_3374() { testInvalid(test_3374_query); }

		private static final SubtypeQuery test_3375_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_3375() { testInvalid(test_3375_query); }

		private static final SubtypeQuery test_3376_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_3376() { testInvalid(test_3376_query); }

		private static final SubtypeQuery test_3377_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_3377() { testInvalid(test_3377_query); }

		private static final SubtypeQuery test_3378_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_3378() { testInvalid(test_3378_query); }

		private static final SubtypeQuery test_3379_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_3379() { testInvalid(test_3379_query); }

		private static final SubtypeQuery test_3380_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_3380() { testInvalid(test_3380_query); }

		private static final SubtypeQuery test_3381_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_3381() { testInvalid(test_3381_query); }

		private static final SubtypeQuery test_3382_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_3382() { testInvalid(test_3382_query); }

		private static final SubtypeQuery test_3383_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_3383() { testInvalid(test_3383_query); }

		private static final SubtypeQuery test_3384_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_3384() { testInvalid(test_3384_query); }

		private static final SubtypeQuery test_3385_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_3385() { testInvalid(test_3385_query); }

		private static final SubtypeQuery test_3386_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_3386() { testInvalid(test_3386_query); }

		private static final SubtypeQuery test_3387_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("(int | (any | int))"));
		@Test public void test_3387() { testInvalid(test_3387_query); }

		private static final SubtypeQuery test_3388_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_3388() { testInvalid(test_3388_query); }

		private static final SubtypeQuery test_3389_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_3389() { testInvalid(test_3389_query); }

		private static final SubtypeQuery test_3390_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_3390() { testInvalid(test_3390_query); }

		private static final SubtypeQuery test_3391_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_3391() { testInvalid(test_3391_query); }

		private static final SubtypeQuery test_3392_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_3392() { testInvalid(test_3392_query); }

		private static final SubtypeQuery test_3393_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_3393() { testInvalid(test_3393_query); }

		private static final SubtypeQuery test_3394_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("(int | (any & any))"));
		@Test public void test_3394() { testInvalid(test_3394_query); }

		private static final SubtypeQuery test_3395_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_3395() { testInvalid(test_3395_query); }

		private static final SubtypeQuery test_3396_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_3396() { testInvalid(test_3396_query); }

		private static final SubtypeQuery test_3397_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_3397() { testInvalid(test_3397_query); }

		private static final SubtypeQuery test_3398_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_3398() { testInvalid(test_3398_query); }

		private static final SubtypeQuery test_3399_query = createSubtypeQuery(parseWhiley("{(int & any), (any | any)}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_3399() { testInvalid(test_3399_query); }

		private static final SubtypeQuery test_3400_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("!int"));
		@Test public void test_3400() { testInvalid(test_3400_query); }

		private static final SubtypeQuery test_3401_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("(any | any)"));
		@Test public void test_3401() { testInvalid(test_3401_query); }

		private static final SubtypeQuery test_3402_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("(any & any)"));
		@Test public void test_3402() { testInvalid(test_3402_query); }

		private static final SubtypeQuery test_3403_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{{int, int}}"));
		@Test public void test_3403() { testInvalid(test_3403_query); }

		private static final SubtypeQuery test_3404_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("!(int | int)"));
		@Test public void test_3404() { testInvalid(test_3404_query); }

		private static final SubtypeQuery test_3405_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_3405() { testValid(test_3405_query); }

		private static final SubtypeQuery test_3406_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_3406() { testValid(test_3406_query); }

		private static final SubtypeQuery test_3407_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{{any}, int}"));
		@Test public void test_3407() { testValid(test_3407_query); }

		private static final SubtypeQuery test_3408_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_3408() { testValid(test_3408_query); }

		private static final SubtypeQuery test_3409_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{(any | int), int}"));
		@Test public void test_3409() { testValid(test_3409_query); }

		private static final SubtypeQuery test_3410_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_3410() { testValid(test_3410_query); }

		private static final SubtypeQuery test_3411_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{!any, {int}}"));
		@Test public void test_3411() { testValid(test_3411_query); }

		private static final SubtypeQuery test_3412_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_3412() { testValid(test_3412_query); }

		private static final SubtypeQuery test_3413_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_3413() { testValid(test_3413_query); }

		private static final SubtypeQuery test_3414_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{any, !any}"));
		@Test public void test_3414() { testValid(test_3414_query); }

		private static final SubtypeQuery test_3415_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{{any}, !int}"));
		@Test public void test_3415() { testValid(test_3415_query); }

		private static final SubtypeQuery test_3416_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_3416() { testValid(test_3416_query); }

		private static final SubtypeQuery test_3417_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_3417() { testValid(test_3417_query); }

		private static final SubtypeQuery test_3418_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_3418() { testValid(test_3418_query); }

		private static final SubtypeQuery test_3419_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_3419() { testValid(test_3419_query); }

		private static final SubtypeQuery test_3420_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_3420() { testValid(test_3420_query); }

		private static final SubtypeQuery test_3421_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_3421() { testValid(test_3421_query); }

		private static final SubtypeQuery test_3422_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_3422() { testValid(test_3422_query); }

		private static final SubtypeQuery test_3423_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_3423() { testValid(test_3423_query); }

		private static final SubtypeQuery test_3424_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_3424() { testValid(test_3424_query); }

		private static final SubtypeQuery test_3425_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_3425() { testValid(test_3425_query); }

		private static final SubtypeQuery test_3426_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_3426() { testValid(test_3426_query); }

		private static final SubtypeQuery test_3427_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_3427() { testValid(test_3427_query); }

		private static final SubtypeQuery test_3428_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_3428() { testValid(test_3428_query); }

		private static final SubtypeQuery test_3429_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_3429() { testValid(test_3429_query); }

		private static final SubtypeQuery test_3430_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_3430() { testValid(test_3430_query); }

		private static final SubtypeQuery test_3431_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_3431() { testValid(test_3431_query); }

		private static final SubtypeQuery test_3432_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_3432() { testValid(test_3432_query); }

		private static final SubtypeQuery test_3433_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_3433() { testValid(test_3433_query); }

		private static final SubtypeQuery test_3434_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_3434() { testValid(test_3434_query); }

		private static final SubtypeQuery test_3435_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_3435() { testValid(test_3435_query); }

		private static final SubtypeQuery test_3436_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_3436() { testValid(test_3436_query); }

		private static final SubtypeQuery test_3437_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_3437() { testValid(test_3437_query); }

		private static final SubtypeQuery test_3438_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_3438() { testValid(test_3438_query); }

		private static final SubtypeQuery test_3439_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_3439() { testValid(test_3439_query); }

		private static final SubtypeQuery test_3440_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_3440() { testValid(test_3440_query); }

		private static final SubtypeQuery test_3441_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_3441() { testValid(test_3441_query); }

		private static final SubtypeQuery test_3442_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_3442() { testValid(test_3442_query); }

		private static final SubtypeQuery test_3443_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_3443() { testValid(test_3443_query); }

		private static final SubtypeQuery test_3444_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_3444() { testValid(test_3444_query); }

		private static final SubtypeQuery test_3445_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_3445() { testValid(test_3445_query); }

		private static final SubtypeQuery test_3446_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_3446() { testValid(test_3446_query); }

		private static final SubtypeQuery test_3447_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_3447() { testValid(test_3447_query); }

		private static final SubtypeQuery test_3448_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_3448() { testValid(test_3448_query); }

		private static final SubtypeQuery test_3449_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_3449() { testValid(test_3449_query); }

		private static final SubtypeQuery test_3450_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_3450() { testValid(test_3450_query); }

		private static final SubtypeQuery test_3451_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_3451() { testValid(test_3451_query); }

		private static final SubtypeQuery test_3452_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_3452() { testValid(test_3452_query); }

		private static final SubtypeQuery test_3453_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_3453() { testValid(test_3453_query); }

		private static final SubtypeQuery test_3454_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_3454() { testValid(test_3454_query); }

		private static final SubtypeQuery test_3455_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_3455() { testValid(test_3455_query); }

		private static final SubtypeQuery test_3456_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("(!any | any)"));
		@Test public void test_3456() { testInvalid(test_3456_query); }

		private static final SubtypeQuery test_3457_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("({int, any} | any)"));
		@Test public void test_3457() { testInvalid(test_3457_query); }

		private static final SubtypeQuery test_3458_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("({any, int} | any)"));
		@Test public void test_3458() { testInvalid(test_3458_query); }

		private static final SubtypeQuery test_3459_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("((int & int) | any)"));
		@Test public void test_3459() { testInvalid(test_3459_query); }

		private static final SubtypeQuery test_3460_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("({int, int} | int)"));
		@Test public void test_3460() { testInvalid(test_3460_query); }

		private static final SubtypeQuery test_3461_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("((any | any) | int)"));
		@Test public void test_3461() { testInvalid(test_3461_query); }

		private static final SubtypeQuery test_3462_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("((int | any) | int)"));
		@Test public void test_3462() { testInvalid(test_3462_query); }

		private static final SubtypeQuery test_3463_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("(any | {any})"));
		@Test public void test_3463() { testInvalid(test_3463_query); }

		private static final SubtypeQuery test_3464_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("(int | {any})"));
		@Test public void test_3464() { testInvalid(test_3464_query); }

		private static final SubtypeQuery test_3465_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_3465() { testInvalid(test_3465_query); }

		private static final SubtypeQuery test_3466_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("(any | {int})"));
		@Test public void test_3466() { testInvalid(test_3466_query); }

		private static final SubtypeQuery test_3467_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_3467() { testInvalid(test_3467_query); }

		private static final SubtypeQuery test_3468_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("(!int | !any)"));
		@Test public void test_3468() { testInvalid(test_3468_query); }

		private static final SubtypeQuery test_3469_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_3469() { testValid(test_3469_query); }

		private static final SubtypeQuery test_3470_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_3470() { testInvalid(test_3470_query); }

		private static final SubtypeQuery test_3471_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("({int} | !int)"));
		@Test public void test_3471() { testInvalid(test_3471_query); }

		private static final SubtypeQuery test_3472_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("(!any | !int)"));
		@Test public void test_3472() { testInvalid(test_3472_query); }

		private static final SubtypeQuery test_3473_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_3473() { testInvalid(test_3473_query); }

		private static final SubtypeQuery test_3474_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_3474() { testInvalid(test_3474_query); }

		private static final SubtypeQuery test_3475_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_3475() { testInvalid(test_3475_query); }

		private static final SubtypeQuery test_3476_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_3476() { testValid(test_3476_query); }

		private static final SubtypeQuery test_3477_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_3477() { testInvalid(test_3477_query); }

		private static final SubtypeQuery test_3478_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_3478() { testInvalid(test_3478_query); }

		private static final SubtypeQuery test_3479_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_3479() { testInvalid(test_3479_query); }

		private static final SubtypeQuery test_3480_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_3480() { testInvalid(test_3480_query); }

		private static final SubtypeQuery test_3481_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_3481() { testInvalid(test_3481_query); }

		private static final SubtypeQuery test_3482_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_3482() { testInvalid(test_3482_query); }

		private static final SubtypeQuery test_3483_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_3483() { testInvalid(test_3483_query); }

		private static final SubtypeQuery test_3484_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_3484() { testInvalid(test_3484_query); }

		private static final SubtypeQuery test_3485_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_3485() { testInvalid(test_3485_query); }

		private static final SubtypeQuery test_3486_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_3486() { testInvalid(test_3486_query); }

		private static final SubtypeQuery test_3487_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("(int | (any | int))"));
		@Test public void test_3487() { testInvalid(test_3487_query); }

		private static final SubtypeQuery test_3488_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_3488() { testInvalid(test_3488_query); }

		private static final SubtypeQuery test_3489_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_3489() { testInvalid(test_3489_query); }

		private static final SubtypeQuery test_3490_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_3490() { testInvalid(test_3490_query); }

		private static final SubtypeQuery test_3491_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_3491() { testInvalid(test_3491_query); }

		private static final SubtypeQuery test_3492_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_3492() { testInvalid(test_3492_query); }

		private static final SubtypeQuery test_3493_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_3493() { testInvalid(test_3493_query); }

		private static final SubtypeQuery test_3494_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("(int | (any & any))"));
		@Test public void test_3494() { testInvalid(test_3494_query); }

		private static final SubtypeQuery test_3495_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_3495() { testInvalid(test_3495_query); }

		private static final SubtypeQuery test_3496_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_3496() { testInvalid(test_3496_query); }

		private static final SubtypeQuery test_3497_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_3497() { testInvalid(test_3497_query); }

		private static final SubtypeQuery test_3498_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_3498() { testInvalid(test_3498_query); }

		private static final SubtypeQuery test_3499_query = createSubtypeQuery(parseWhiley("{(int | any), (int | any)}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_3499() { testInvalid(test_3499_query); }

		private static final SubtypeQuery test_3500_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("!int"));
		@Test public void test_3500() { testInvalid(test_3500_query); }

		private static final SubtypeQuery test_3501_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("(any | any)"));
		@Test public void test_3501() { testInvalid(test_3501_query); }

		private static final SubtypeQuery test_3502_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("(any & any)"));
		@Test public void test_3502() { testInvalid(test_3502_query); }

		private static final SubtypeQuery test_3503_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{{int, int}}"));
		@Test public void test_3503() { testInvalid(test_3503_query); }

		private static final SubtypeQuery test_3504_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("!(int | int)"));
		@Test public void test_3504() { testInvalid(test_3504_query); }

		private static final SubtypeQuery test_3505_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_3505() { testValid(test_3505_query); }

		private static final SubtypeQuery test_3506_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_3506() { testValid(test_3506_query); }

		private static final SubtypeQuery test_3507_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{{any}, int}"));
		@Test public void test_3507() { testValid(test_3507_query); }

		private static final SubtypeQuery test_3508_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_3508() { testValid(test_3508_query); }

		private static final SubtypeQuery test_3509_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{(any | int), int}"));
		@Test public void test_3509() { testValid(test_3509_query); }

		private static final SubtypeQuery test_3510_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_3510() { testValid(test_3510_query); }

		private static final SubtypeQuery test_3511_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{!any, {int}}"));
		@Test public void test_3511() { testValid(test_3511_query); }

		private static final SubtypeQuery test_3512_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_3512() { testValid(test_3512_query); }

		private static final SubtypeQuery test_3513_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_3513() { testValid(test_3513_query); }

		private static final SubtypeQuery test_3514_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{any, !any}"));
		@Test public void test_3514() { testValid(test_3514_query); }

		private static final SubtypeQuery test_3515_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{{any}, !int}"));
		@Test public void test_3515() { testValid(test_3515_query); }

		private static final SubtypeQuery test_3516_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_3516() { testValid(test_3516_query); }

		private static final SubtypeQuery test_3517_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_3517() { testValid(test_3517_query); }

		private static final SubtypeQuery test_3518_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_3518() { testValid(test_3518_query); }

		private static final SubtypeQuery test_3519_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_3519() { testValid(test_3519_query); }

		private static final SubtypeQuery test_3520_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_3520() { testValid(test_3520_query); }

		private static final SubtypeQuery test_3521_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_3521() { testValid(test_3521_query); }

		private static final SubtypeQuery test_3522_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_3522() { testValid(test_3522_query); }

		private static final SubtypeQuery test_3523_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_3523() { testValid(test_3523_query); }

		private static final SubtypeQuery test_3524_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_3524() { testValid(test_3524_query); }

		private static final SubtypeQuery test_3525_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_3525() { testValid(test_3525_query); }

		private static final SubtypeQuery test_3526_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_3526() { testValid(test_3526_query); }

		private static final SubtypeQuery test_3527_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_3527() { testValid(test_3527_query); }

		private static final SubtypeQuery test_3528_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_3528() { testValid(test_3528_query); }

		private static final SubtypeQuery test_3529_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_3529() { testValid(test_3529_query); }

		private static final SubtypeQuery test_3530_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_3530() { testValid(test_3530_query); }

		private static final SubtypeQuery test_3531_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_3531() { testValid(test_3531_query); }

		private static final SubtypeQuery test_3532_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_3532() { testValid(test_3532_query); }

		private static final SubtypeQuery test_3533_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_3533() { testValid(test_3533_query); }

		private static final SubtypeQuery test_3534_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_3534() { testValid(test_3534_query); }

		private static final SubtypeQuery test_3535_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_3535() { testValid(test_3535_query); }

		private static final SubtypeQuery test_3536_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_3536() { testValid(test_3536_query); }

		private static final SubtypeQuery test_3537_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_3537() { testValid(test_3537_query); }

		private static final SubtypeQuery test_3538_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_3538() { testValid(test_3538_query); }

		private static final SubtypeQuery test_3539_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_3539() { testValid(test_3539_query); }

		private static final SubtypeQuery test_3540_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_3540() { testValid(test_3540_query); }

		private static final SubtypeQuery test_3541_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_3541() { testValid(test_3541_query); }

		private static final SubtypeQuery test_3542_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_3542() { testValid(test_3542_query); }

		private static final SubtypeQuery test_3543_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_3543() { testValid(test_3543_query); }

		private static final SubtypeQuery test_3544_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_3544() { testValid(test_3544_query); }

		private static final SubtypeQuery test_3545_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_3545() { testValid(test_3545_query); }

		private static final SubtypeQuery test_3546_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_3546() { testValid(test_3546_query); }

		private static final SubtypeQuery test_3547_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_3547() { testValid(test_3547_query); }

		private static final SubtypeQuery test_3548_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_3548() { testValid(test_3548_query); }

		private static final SubtypeQuery test_3549_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_3549() { testValid(test_3549_query); }

		private static final SubtypeQuery test_3550_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_3550() { testValid(test_3550_query); }

		private static final SubtypeQuery test_3551_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_3551() { testValid(test_3551_query); }

		private static final SubtypeQuery test_3552_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_3552() { testValid(test_3552_query); }

		private static final SubtypeQuery test_3553_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_3553() { testValid(test_3553_query); }

		private static final SubtypeQuery test_3554_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_3554() { testValid(test_3554_query); }

		private static final SubtypeQuery test_3555_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_3555() { testValid(test_3555_query); }

		private static final SubtypeQuery test_3556_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("(!any | any)"));
		@Test public void test_3556() { testInvalid(test_3556_query); }

		private static final SubtypeQuery test_3557_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("({int, any} | any)"));
		@Test public void test_3557() { testInvalid(test_3557_query); }

		private static final SubtypeQuery test_3558_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("({any, int} | any)"));
		@Test public void test_3558() { testInvalid(test_3558_query); }

		private static final SubtypeQuery test_3559_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("((int & int) | any)"));
		@Test public void test_3559() { testInvalid(test_3559_query); }

		private static final SubtypeQuery test_3560_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("({int, int} | int)"));
		@Test public void test_3560() { testInvalid(test_3560_query); }

		private static final SubtypeQuery test_3561_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("((any | any) | int)"));
		@Test public void test_3561() { testInvalid(test_3561_query); }

		private static final SubtypeQuery test_3562_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("((int | any) | int)"));
		@Test public void test_3562() { testInvalid(test_3562_query); }

		private static final SubtypeQuery test_3563_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("(any | {any})"));
		@Test public void test_3563() { testInvalid(test_3563_query); }

		private static final SubtypeQuery test_3564_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("(int | {any})"));
		@Test public void test_3564() { testInvalid(test_3564_query); }

		private static final SubtypeQuery test_3565_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_3565() { testInvalid(test_3565_query); }

		private static final SubtypeQuery test_3566_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("(any | {int})"));
		@Test public void test_3566() { testInvalid(test_3566_query); }

		private static final SubtypeQuery test_3567_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_3567() { testInvalid(test_3567_query); }

		private static final SubtypeQuery test_3568_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("(!int | !any)"));
		@Test public void test_3568() { testInvalid(test_3568_query); }

		private static final SubtypeQuery test_3569_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_3569() { testValid(test_3569_query); }

		private static final SubtypeQuery test_3570_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_3570() { testInvalid(test_3570_query); }

		private static final SubtypeQuery test_3571_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("({int} | !int)"));
		@Test public void test_3571() { testInvalid(test_3571_query); }

		private static final SubtypeQuery test_3572_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("(!any | !int)"));
		@Test public void test_3572() { testInvalid(test_3572_query); }

		private static final SubtypeQuery test_3573_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_3573() { testInvalid(test_3573_query); }

		private static final SubtypeQuery test_3574_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_3574() { testInvalid(test_3574_query); }

		private static final SubtypeQuery test_3575_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_3575() { testInvalid(test_3575_query); }

		private static final SubtypeQuery test_3576_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_3576() { testValid(test_3576_query); }

		private static final SubtypeQuery test_3577_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_3577() { testInvalid(test_3577_query); }

		private static final SubtypeQuery test_3578_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_3578() { testInvalid(test_3578_query); }

		private static final SubtypeQuery test_3579_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_3579() { testInvalid(test_3579_query); }

		private static final SubtypeQuery test_3580_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_3580() { testInvalid(test_3580_query); }

		private static final SubtypeQuery test_3581_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_3581() { testInvalid(test_3581_query); }

		private static final SubtypeQuery test_3582_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_3582() { testInvalid(test_3582_query); }

		private static final SubtypeQuery test_3583_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_3583() { testInvalid(test_3583_query); }

		private static final SubtypeQuery test_3584_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_3584() { testInvalid(test_3584_query); }

		private static final SubtypeQuery test_3585_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_3585() { testInvalid(test_3585_query); }

		private static final SubtypeQuery test_3586_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_3586() { testInvalid(test_3586_query); }

		private static final SubtypeQuery test_3587_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("(int | (any | int))"));
		@Test public void test_3587() { testInvalid(test_3587_query); }

		private static final SubtypeQuery test_3588_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_3588() { testInvalid(test_3588_query); }

		private static final SubtypeQuery test_3589_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_3589() { testInvalid(test_3589_query); }

		private static final SubtypeQuery test_3590_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_3590() { testInvalid(test_3590_query); }

		private static final SubtypeQuery test_3591_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_3591() { testInvalid(test_3591_query); }

		private static final SubtypeQuery test_3592_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_3592() { testInvalid(test_3592_query); }

		private static final SubtypeQuery test_3593_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_3593() { testInvalid(test_3593_query); }

		private static final SubtypeQuery test_3594_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("(int | (any & any))"));
		@Test public void test_3594() { testInvalid(test_3594_query); }

		private static final SubtypeQuery test_3595_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_3595() { testInvalid(test_3595_query); }

		private static final SubtypeQuery test_3596_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_3596() { testInvalid(test_3596_query); }

		private static final SubtypeQuery test_3597_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_3597() { testInvalid(test_3597_query); }

		private static final SubtypeQuery test_3598_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_3598() { testInvalid(test_3598_query); }

		private static final SubtypeQuery test_3599_query = createSubtypeQuery(parseWhiley("{(any | int), (int | any)}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_3599() { testInvalid(test_3599_query); }

		private static final SubtypeQuery test_3600_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("!int"));
		@Test public void test_3600() { testInvalid(test_3600_query); }

		private static final SubtypeQuery test_3601_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("(any | any)"));
		@Test public void test_3601() { testInvalid(test_3601_query); }

		private static final SubtypeQuery test_3602_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("(any & any)"));
		@Test public void test_3602() { testInvalid(test_3602_query); }

		private static final SubtypeQuery test_3603_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{{int, int}}"));
		@Test public void test_3603() { testInvalid(test_3603_query); }

		private static final SubtypeQuery test_3604_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("!(int | int)"));
		@Test public void test_3604() { testInvalid(test_3604_query); }

		private static final SubtypeQuery test_3605_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_3605() { testInvalid(test_3605_query); }

		private static final SubtypeQuery test_3606_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_3606() { testInvalid(test_3606_query); }

		private static final SubtypeQuery test_3607_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{{any}, int}"));
		@Test public void test_3607() { testInvalid(test_3607_query); }

		private static final SubtypeQuery test_3608_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_3608() { testInvalid(test_3608_query); }

		private static final SubtypeQuery test_3609_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{(any | int), int}"));
		@Test public void test_3609() { testInvalid(test_3609_query); }

		private static final SubtypeQuery test_3610_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_3610() { testInvalid(test_3610_query); }

		private static final SubtypeQuery test_3611_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{!any, {int}}"));
		@Test public void test_3611() { testValid(test_3611_query); }

		private static final SubtypeQuery test_3612_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_3612() { testValid(test_3612_query); }

		private static final SubtypeQuery test_3613_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_3613() { testInvalid(test_3613_query); }

		private static final SubtypeQuery test_3614_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{any, !any}"));
		@Test public void test_3614() { testValid(test_3614_query); }

		private static final SubtypeQuery test_3615_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{{any}, !int}"));
		@Test public void test_3615() { testInvalid(test_3615_query); }

		private static final SubtypeQuery test_3616_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_3616() { testInvalid(test_3616_query); }

		private static final SubtypeQuery test_3617_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_3617() { testInvalid(test_3617_query); }

		private static final SubtypeQuery test_3618_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_3618() { testInvalid(test_3618_query); }

		private static final SubtypeQuery test_3619_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_3619() { testInvalid(test_3619_query); }

		private static final SubtypeQuery test_3620_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_3620() { testInvalid(test_3620_query); }

		private static final SubtypeQuery test_3621_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_3621() { testInvalid(test_3621_query); }

		private static final SubtypeQuery test_3622_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_3622() { testInvalid(test_3622_query); }

		private static final SubtypeQuery test_3623_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_3623() { testInvalid(test_3623_query); }

		private static final SubtypeQuery test_3624_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_3624() { testInvalid(test_3624_query); }

		private static final SubtypeQuery test_3625_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_3625() { testInvalid(test_3625_query); }

		private static final SubtypeQuery test_3626_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_3626() { testInvalid(test_3626_query); }

		private static final SubtypeQuery test_3627_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_3627() { testInvalid(test_3627_query); }

		private static final SubtypeQuery test_3628_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_3628() { testInvalid(test_3628_query); }

		private static final SubtypeQuery test_3629_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_3629() { testValid(test_3629_query); }

		private static final SubtypeQuery test_3630_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_3630() { testInvalid(test_3630_query); }

		private static final SubtypeQuery test_3631_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_3631() { testInvalid(test_3631_query); }

		private static final SubtypeQuery test_3632_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_3632() { testInvalid(test_3632_query); }

		private static final SubtypeQuery test_3633_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_3633() { testInvalid(test_3633_query); }

		private static final SubtypeQuery test_3634_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_3634() { testInvalid(test_3634_query); }

		private static final SubtypeQuery test_3635_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_3635() { testInvalid(test_3635_query); }

		private static final SubtypeQuery test_3636_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_3636() { testValid(test_3636_query); }

		private static final SubtypeQuery test_3637_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_3637() { testInvalid(test_3637_query); }

		private static final SubtypeQuery test_3638_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_3638() { testInvalid(test_3638_query); }

		private static final SubtypeQuery test_3639_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_3639() { testInvalid(test_3639_query); }

		private static final SubtypeQuery test_3640_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_3640() { testInvalid(test_3640_query); }

		private static final SubtypeQuery test_3641_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_3641() { testValid(test_3641_query); }

		private static final SubtypeQuery test_3642_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_3642() { testInvalid(test_3642_query); }

		private static final SubtypeQuery test_3643_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_3643() { testInvalid(test_3643_query); }

		private static final SubtypeQuery test_3644_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_3644() { testInvalid(test_3644_query); }

		private static final SubtypeQuery test_3645_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_3645() { testInvalid(test_3645_query); }

		private static final SubtypeQuery test_3646_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_3646() { testInvalid(test_3646_query); }

		private static final SubtypeQuery test_3647_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_3647() { testInvalid(test_3647_query); }

		private static final SubtypeQuery test_3648_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_3648() { testInvalid(test_3648_query); }

		private static final SubtypeQuery test_3649_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_3649() { testInvalid(test_3649_query); }

		private static final SubtypeQuery test_3650_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_3650() { testInvalid(test_3650_query); }

		private static final SubtypeQuery test_3651_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_3651() { testInvalid(test_3651_query); }

		private static final SubtypeQuery test_3652_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_3652() { testInvalid(test_3652_query); }

		private static final SubtypeQuery test_3653_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_3653() { testInvalid(test_3653_query); }

		private static final SubtypeQuery test_3654_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_3654() { testInvalid(test_3654_query); }

		private static final SubtypeQuery test_3655_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_3655() { testInvalid(test_3655_query); }

		private static final SubtypeQuery test_3656_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("(!any | any)"));
		@Test public void test_3656() { testInvalid(test_3656_query); }

		private static final SubtypeQuery test_3657_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("({int, any} | any)"));
		@Test public void test_3657() { testInvalid(test_3657_query); }

		private static final SubtypeQuery test_3658_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("({any, int} | any)"));
		@Test public void test_3658() { testInvalid(test_3658_query); }

		private static final SubtypeQuery test_3659_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("((int & int) | any)"));
		@Test public void test_3659() { testInvalid(test_3659_query); }

		private static final SubtypeQuery test_3660_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("({int, int} | int)"));
		@Test public void test_3660() { testInvalid(test_3660_query); }

		private static final SubtypeQuery test_3661_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("((any | any) | int)"));
		@Test public void test_3661() { testInvalid(test_3661_query); }

		private static final SubtypeQuery test_3662_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("((int | any) | int)"));
		@Test public void test_3662() { testInvalid(test_3662_query); }

		private static final SubtypeQuery test_3663_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("(any | {any})"));
		@Test public void test_3663() { testInvalid(test_3663_query); }

		private static final SubtypeQuery test_3664_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("(int | {any})"));
		@Test public void test_3664() { testInvalid(test_3664_query); }

		private static final SubtypeQuery test_3665_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_3665() { testInvalid(test_3665_query); }

		private static final SubtypeQuery test_3666_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("(any | {int})"));
		@Test public void test_3666() { testInvalid(test_3666_query); }

		private static final SubtypeQuery test_3667_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_3667() { testInvalid(test_3667_query); }

		private static final SubtypeQuery test_3668_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("(!int | !any)"));
		@Test public void test_3668() { testInvalid(test_3668_query); }

		private static final SubtypeQuery test_3669_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_3669() { testInvalid(test_3669_query); }

		private static final SubtypeQuery test_3670_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_3670() { testInvalid(test_3670_query); }

		private static final SubtypeQuery test_3671_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("({int} | !int)"));
		@Test public void test_3671() { testInvalid(test_3671_query); }

		private static final SubtypeQuery test_3672_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("(!any | !int)"));
		@Test public void test_3672() { testInvalid(test_3672_query); }

		private static final SubtypeQuery test_3673_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_3673() { testInvalid(test_3673_query); }

		private static final SubtypeQuery test_3674_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_3674() { testInvalid(test_3674_query); }

		private static final SubtypeQuery test_3675_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_3675() { testInvalid(test_3675_query); }

		private static final SubtypeQuery test_3676_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_3676() { testInvalid(test_3676_query); }

		private static final SubtypeQuery test_3677_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_3677() { testInvalid(test_3677_query); }

		private static final SubtypeQuery test_3678_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_3678() { testInvalid(test_3678_query); }

		private static final SubtypeQuery test_3679_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_3679() { testInvalid(test_3679_query); }

		private static final SubtypeQuery test_3680_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_3680() { testInvalid(test_3680_query); }

		private static final SubtypeQuery test_3681_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_3681() { testInvalid(test_3681_query); }

		private static final SubtypeQuery test_3682_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_3682() { testInvalid(test_3682_query); }

		private static final SubtypeQuery test_3683_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_3683() { testInvalid(test_3683_query); }

		private static final SubtypeQuery test_3684_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_3684() { testInvalid(test_3684_query); }

		private static final SubtypeQuery test_3685_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_3685() { testInvalid(test_3685_query); }

		private static final SubtypeQuery test_3686_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_3686() { testInvalid(test_3686_query); }

		private static final SubtypeQuery test_3687_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("(int | (any | int))"));
		@Test public void test_3687() { testInvalid(test_3687_query); }

		private static final SubtypeQuery test_3688_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_3688() { testInvalid(test_3688_query); }

		private static final SubtypeQuery test_3689_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_3689() { testInvalid(test_3689_query); }

		private static final SubtypeQuery test_3690_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_3690() { testInvalid(test_3690_query); }

		private static final SubtypeQuery test_3691_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_3691() { testInvalid(test_3691_query); }

		private static final SubtypeQuery test_3692_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_3692() { testInvalid(test_3692_query); }

		private static final SubtypeQuery test_3693_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_3693() { testInvalid(test_3693_query); }

		private static final SubtypeQuery test_3694_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("(int | (any & any))"));
		@Test public void test_3694() { testInvalid(test_3694_query); }

		private static final SubtypeQuery test_3695_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_3695() { testInvalid(test_3695_query); }

		private static final SubtypeQuery test_3696_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_3696() { testInvalid(test_3696_query); }

		private static final SubtypeQuery test_3697_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_3697() { testInvalid(test_3697_query); }

		private static final SubtypeQuery test_3698_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_3698() { testInvalid(test_3698_query); }

		private static final SubtypeQuery test_3699_query = createSubtypeQuery(parseWhiley("{{int, int}, (any | int)}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_3699() { testInvalid(test_3699_query); }

		private static final SubtypeQuery test_3700_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("!int"));
		@Test public void test_3700() { testInvalid(test_3700_query); }

		private static final SubtypeQuery test_3701_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("(any | any)"));
		@Test public void test_3701() { testInvalid(test_3701_query); }

		private static final SubtypeQuery test_3702_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("(any & any)"));
		@Test public void test_3702() { testInvalid(test_3702_query); }

		private static final SubtypeQuery test_3703_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{{int, int}}"));
		@Test public void test_3703() { testInvalid(test_3703_query); }

		private static final SubtypeQuery test_3704_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("!(int | int)"));
		@Test public void test_3704() { testInvalid(test_3704_query); }

		private static final SubtypeQuery test_3705_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_3705() { testInvalid(test_3705_query); }

		private static final SubtypeQuery test_3706_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_3706() { testInvalid(test_3706_query); }

		private static final SubtypeQuery test_3707_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{{any}, int}"));
		@Test public void test_3707() { testInvalid(test_3707_query); }

		private static final SubtypeQuery test_3708_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_3708() { testInvalid(test_3708_query); }

		private static final SubtypeQuery test_3709_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{(any | int), int}"));
		@Test public void test_3709() { testInvalid(test_3709_query); }

		private static final SubtypeQuery test_3710_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_3710() { testInvalid(test_3710_query); }

		private static final SubtypeQuery test_3711_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{!any, {int}}"));
		@Test public void test_3711() { testValid(test_3711_query); }

		private static final SubtypeQuery test_3712_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_3712() { testInvalid(test_3712_query); }

		private static final SubtypeQuery test_3713_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_3713() { testInvalid(test_3713_query); }

		private static final SubtypeQuery test_3714_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{any, !any}"));
		@Test public void test_3714() { testValid(test_3714_query); }

		private static final SubtypeQuery test_3715_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{{any}, !int}"));
		@Test public void test_3715() { testInvalid(test_3715_query); }

		private static final SubtypeQuery test_3716_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_3716() { testInvalid(test_3716_query); }

		private static final SubtypeQuery test_3717_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_3717() { testInvalid(test_3717_query); }

		private static final SubtypeQuery test_3718_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_3718() { testInvalid(test_3718_query); }

		private static final SubtypeQuery test_3719_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_3719() { testInvalid(test_3719_query); }

		private static final SubtypeQuery test_3720_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_3720() { testInvalid(test_3720_query); }

		private static final SubtypeQuery test_3721_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_3721() { testInvalid(test_3721_query); }

		private static final SubtypeQuery test_3722_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_3722() { testInvalid(test_3722_query); }

		private static final SubtypeQuery test_3723_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_3723() { testInvalid(test_3723_query); }

		private static final SubtypeQuery test_3724_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_3724() { testInvalid(test_3724_query); }

		private static final SubtypeQuery test_3725_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_3725() { testInvalid(test_3725_query); }

		private static final SubtypeQuery test_3726_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_3726() { testInvalid(test_3726_query); }

		private static final SubtypeQuery test_3727_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_3727() { testInvalid(test_3727_query); }

		private static final SubtypeQuery test_3728_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_3728() { testInvalid(test_3728_query); }

		private static final SubtypeQuery test_3729_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_3729() { testValid(test_3729_query); }

		private static final SubtypeQuery test_3730_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_3730() { testInvalid(test_3730_query); }

		private static final SubtypeQuery test_3731_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_3731() { testInvalid(test_3731_query); }

		private static final SubtypeQuery test_3732_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_3732() { testInvalid(test_3732_query); }

		private static final SubtypeQuery test_3733_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_3733() { testInvalid(test_3733_query); }

		private static final SubtypeQuery test_3734_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_3734() { testInvalid(test_3734_query); }

		private static final SubtypeQuery test_3735_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_3735() { testInvalid(test_3735_query); }

		private static final SubtypeQuery test_3736_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_3736() { testInvalid(test_3736_query); }

		private static final SubtypeQuery test_3737_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_3737() { testValid(test_3737_query); }

		private static final SubtypeQuery test_3738_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_3738() { testInvalid(test_3738_query); }

		private static final SubtypeQuery test_3739_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_3739() { testInvalid(test_3739_query); }

		private static final SubtypeQuery test_3740_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_3740() { testInvalid(test_3740_query); }

		private static final SubtypeQuery test_3741_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_3741() { testValid(test_3741_query); }

		private static final SubtypeQuery test_3742_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_3742() { testInvalid(test_3742_query); }

		private static final SubtypeQuery test_3743_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_3743() { testInvalid(test_3743_query); }

		private static final SubtypeQuery test_3744_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_3744() { testInvalid(test_3744_query); }

		private static final SubtypeQuery test_3745_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_3745() { testInvalid(test_3745_query); }

		private static final SubtypeQuery test_3746_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_3746() { testInvalid(test_3746_query); }

		private static final SubtypeQuery test_3747_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_3747() { testValid(test_3747_query); }

		private static final SubtypeQuery test_3748_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_3748() { testInvalid(test_3748_query); }

		private static final SubtypeQuery test_3749_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_3749() { testInvalid(test_3749_query); }

		private static final SubtypeQuery test_3750_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_3750() { testInvalid(test_3750_query); }

		private static final SubtypeQuery test_3751_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_3751() { testInvalid(test_3751_query); }

		private static final SubtypeQuery test_3752_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_3752() { testValid(test_3752_query); }

		private static final SubtypeQuery test_3753_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_3753() { testInvalid(test_3753_query); }

		private static final SubtypeQuery test_3754_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_3754() { testInvalid(test_3754_query); }

		private static final SubtypeQuery test_3755_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_3755() { testValid(test_3755_query); }

		private static final SubtypeQuery test_3756_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("(!any | any)"));
		@Test public void test_3756() { testInvalid(test_3756_query); }

		private static final SubtypeQuery test_3757_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("({int, any} | any)"));
		@Test public void test_3757() { testInvalid(test_3757_query); }

		private static final SubtypeQuery test_3758_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("({any, int} | any)"));
		@Test public void test_3758() { testInvalid(test_3758_query); }

		private static final SubtypeQuery test_3759_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("((int & int) | any)"));
		@Test public void test_3759() { testInvalid(test_3759_query); }

		private static final SubtypeQuery test_3760_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("({int, int} | int)"));
		@Test public void test_3760() { testInvalid(test_3760_query); }

		private static final SubtypeQuery test_3761_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("((any | any) | int)"));
		@Test public void test_3761() { testInvalid(test_3761_query); }

		private static final SubtypeQuery test_3762_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("((int | any) | int)"));
		@Test public void test_3762() { testInvalid(test_3762_query); }

		private static final SubtypeQuery test_3763_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("(any | {any})"));
		@Test public void test_3763() { testInvalid(test_3763_query); }

		private static final SubtypeQuery test_3764_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("(int | {any})"));
		@Test public void test_3764() { testInvalid(test_3764_query); }

		private static final SubtypeQuery test_3765_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_3765() { testInvalid(test_3765_query); }

		private static final SubtypeQuery test_3766_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("(any | {int})"));
		@Test public void test_3766() { testInvalid(test_3766_query); }

		private static final SubtypeQuery test_3767_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_3767() { testInvalid(test_3767_query); }

		private static final SubtypeQuery test_3768_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("(!int | !any)"));
		@Test public void test_3768() { testInvalid(test_3768_query); }

		private static final SubtypeQuery test_3769_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_3769() { testInvalid(test_3769_query); }

		private static final SubtypeQuery test_3770_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_3770() { testInvalid(test_3770_query); }

		private static final SubtypeQuery test_3771_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("({int} | !int)"));
		@Test public void test_3771() { testInvalid(test_3771_query); }

		private static final SubtypeQuery test_3772_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("(!any | !int)"));
		@Test public void test_3772() { testInvalid(test_3772_query); }

		private static final SubtypeQuery test_3773_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_3773() { testInvalid(test_3773_query); }

		private static final SubtypeQuery test_3774_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_3774() { testInvalid(test_3774_query); }

		private static final SubtypeQuery test_3775_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_3775() { testInvalid(test_3775_query); }

		private static final SubtypeQuery test_3776_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_3776() { testInvalid(test_3776_query); }

		private static final SubtypeQuery test_3777_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_3777() { testInvalid(test_3777_query); }

		private static final SubtypeQuery test_3778_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_3778() { testInvalid(test_3778_query); }

		private static final SubtypeQuery test_3779_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_3779() { testInvalid(test_3779_query); }

		private static final SubtypeQuery test_3780_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_3780() { testInvalid(test_3780_query); }

		private static final SubtypeQuery test_3781_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_3781() { testInvalid(test_3781_query); }

		private static final SubtypeQuery test_3782_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_3782() { testInvalid(test_3782_query); }

		private static final SubtypeQuery test_3783_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_3783() { testInvalid(test_3783_query); }

		private static final SubtypeQuery test_3784_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_3784() { testInvalid(test_3784_query); }

		private static final SubtypeQuery test_3785_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_3785() { testInvalid(test_3785_query); }

		private static final SubtypeQuery test_3786_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_3786() { testInvalid(test_3786_query); }

		private static final SubtypeQuery test_3787_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("(int | (any | int))"));
		@Test public void test_3787() { testInvalid(test_3787_query); }

		private static final SubtypeQuery test_3788_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_3788() { testInvalid(test_3788_query); }

		private static final SubtypeQuery test_3789_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_3789() { testInvalid(test_3789_query); }

		private static final SubtypeQuery test_3790_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_3790() { testInvalid(test_3790_query); }

		private static final SubtypeQuery test_3791_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_3791() { testInvalid(test_3791_query); }

		private static final SubtypeQuery test_3792_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_3792() { testInvalid(test_3792_query); }

		private static final SubtypeQuery test_3793_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_3793() { testInvalid(test_3793_query); }

		private static final SubtypeQuery test_3794_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("(int | (any & any))"));
		@Test public void test_3794() { testInvalid(test_3794_query); }

		private static final SubtypeQuery test_3795_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_3795() { testInvalid(test_3795_query); }

		private static final SubtypeQuery test_3796_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_3796() { testInvalid(test_3796_query); }

		private static final SubtypeQuery test_3797_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_3797() { testInvalid(test_3797_query); }

		private static final SubtypeQuery test_3798_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_3798() { testInvalid(test_3798_query); }

		private static final SubtypeQuery test_3799_query = createSubtypeQuery(parseWhiley("{int, (int | int)}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_3799() { testInvalid(test_3799_query); }

		private static final SubtypeQuery test_3800_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("!int"));
		@Test public void test_3800() { testInvalid(test_3800_query); }

		private static final SubtypeQuery test_3801_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("(any | any)"));
		@Test public void test_3801() { testInvalid(test_3801_query); }

		private static final SubtypeQuery test_3802_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("(any & any)"));
		@Test public void test_3802() { testInvalid(test_3802_query); }

		private static final SubtypeQuery test_3803_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{{int, int}}"));
		@Test public void test_3803() { testInvalid(test_3803_query); }

		private static final SubtypeQuery test_3804_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("!(int | int)"));
		@Test public void test_3804() { testInvalid(test_3804_query); }

		private static final SubtypeQuery test_3805_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_3805() { testInvalid(test_3805_query); }

		private static final SubtypeQuery test_3806_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_3806() { testInvalid(test_3806_query); }

		private static final SubtypeQuery test_3807_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{{any}, int}"));
		@Test public void test_3807() { testInvalid(test_3807_query); }

		private static final SubtypeQuery test_3808_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_3808() { testInvalid(test_3808_query); }

		private static final SubtypeQuery test_3809_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{(any | int), int}"));
		@Test public void test_3809() { testInvalid(test_3809_query); }

		private static final SubtypeQuery test_3810_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_3810() { testInvalid(test_3810_query); }

		private static final SubtypeQuery test_3811_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{!any, {int}}"));
		@Test public void test_3811() { testValid(test_3811_query); }

		private static final SubtypeQuery test_3812_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_3812() { testInvalid(test_3812_query); }

		private static final SubtypeQuery test_3813_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_3813() { testInvalid(test_3813_query); }

		private static final SubtypeQuery test_3814_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{any, !any}"));
		@Test public void test_3814() { testValid(test_3814_query); }

		private static final SubtypeQuery test_3815_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{{any}, !int}"));
		@Test public void test_3815() { testInvalid(test_3815_query); }

		private static final SubtypeQuery test_3816_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_3816() { testInvalid(test_3816_query); }

		private static final SubtypeQuery test_3817_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_3817() { testInvalid(test_3817_query); }

		private static final SubtypeQuery test_3818_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_3818() { testInvalid(test_3818_query); }

		private static final SubtypeQuery test_3819_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_3819() { testInvalid(test_3819_query); }

		private static final SubtypeQuery test_3820_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_3820() { testInvalid(test_3820_query); }

		private static final SubtypeQuery test_3821_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_3821() { testInvalid(test_3821_query); }

		private static final SubtypeQuery test_3822_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_3822() { testInvalid(test_3822_query); }

		private static final SubtypeQuery test_3823_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_3823() { testInvalid(test_3823_query); }

		private static final SubtypeQuery test_3824_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_3824() { testInvalid(test_3824_query); }

		private static final SubtypeQuery test_3825_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_3825() { testInvalid(test_3825_query); }

		private static final SubtypeQuery test_3826_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_3826() { testInvalid(test_3826_query); }

		private static final SubtypeQuery test_3827_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_3827() { testInvalid(test_3827_query); }

		private static final SubtypeQuery test_3828_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_3828() { testInvalid(test_3828_query); }

		private static final SubtypeQuery test_3829_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_3829() { testValid(test_3829_query); }

		private static final SubtypeQuery test_3830_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_3830() { testInvalid(test_3830_query); }

		private static final SubtypeQuery test_3831_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_3831() { testInvalid(test_3831_query); }

		private static final SubtypeQuery test_3832_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_3832() { testInvalid(test_3832_query); }

		private static final SubtypeQuery test_3833_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_3833() { testInvalid(test_3833_query); }

		private static final SubtypeQuery test_3834_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_3834() { testInvalid(test_3834_query); }

		private static final SubtypeQuery test_3835_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_3835() { testInvalid(test_3835_query); }

		private static final SubtypeQuery test_3836_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_3836() { testInvalid(test_3836_query); }

		private static final SubtypeQuery test_3837_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_3837() { testInvalid(test_3837_query); }

		private static final SubtypeQuery test_3838_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_3838() { testValid(test_3838_query); }

		private static final SubtypeQuery test_3839_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_3839() { testInvalid(test_3839_query); }

		private static final SubtypeQuery test_3840_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_3840() { testInvalid(test_3840_query); }

		private static final SubtypeQuery test_3841_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_3841() { testValid(test_3841_query); }

		private static final SubtypeQuery test_3842_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_3842() { testInvalid(test_3842_query); }

		private static final SubtypeQuery test_3843_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_3843() { testInvalid(test_3843_query); }

		private static final SubtypeQuery test_3844_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_3844() { testInvalid(test_3844_query); }

		private static final SubtypeQuery test_3845_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_3845() { testInvalid(test_3845_query); }

		private static final SubtypeQuery test_3846_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_3846() { testInvalid(test_3846_query); }

		private static final SubtypeQuery test_3847_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_3847() { testInvalid(test_3847_query); }

		private static final SubtypeQuery test_3848_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_3848() { testInvalid(test_3848_query); }

		private static final SubtypeQuery test_3849_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_3849() { testInvalid(test_3849_query); }

		private static final SubtypeQuery test_3850_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_3850() { testInvalid(test_3850_query); }

		private static final SubtypeQuery test_3851_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_3851() { testValid(test_3851_query); }

		private static final SubtypeQuery test_3852_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_3852() { testInvalid(test_3852_query); }

		private static final SubtypeQuery test_3853_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_3853() { testInvalid(test_3853_query); }

		private static final SubtypeQuery test_3854_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_3854() { testInvalid(test_3854_query); }

		private static final SubtypeQuery test_3855_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_3855() { testInvalid(test_3855_query); }

		private static final SubtypeQuery test_3856_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("(!any | any)"));
		@Test public void test_3856() { testInvalid(test_3856_query); }

		private static final SubtypeQuery test_3857_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("({int, any} | any)"));
		@Test public void test_3857() { testInvalid(test_3857_query); }

		private static final SubtypeQuery test_3858_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("({any, int} | any)"));
		@Test public void test_3858() { testInvalid(test_3858_query); }

		private static final SubtypeQuery test_3859_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("((int & int) | any)"));
		@Test public void test_3859() { testInvalid(test_3859_query); }

		private static final SubtypeQuery test_3860_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("({int, int} | int)"));
		@Test public void test_3860() { testInvalid(test_3860_query); }

		private static final SubtypeQuery test_3861_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("((any | any) | int)"));
		@Test public void test_3861() { testInvalid(test_3861_query); }

		private static final SubtypeQuery test_3862_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("((int | any) | int)"));
		@Test public void test_3862() { testInvalid(test_3862_query); }

		private static final SubtypeQuery test_3863_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("(any | {any})"));
		@Test public void test_3863() { testInvalid(test_3863_query); }

		private static final SubtypeQuery test_3864_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("(int | {any})"));
		@Test public void test_3864() { testInvalid(test_3864_query); }

		private static final SubtypeQuery test_3865_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_3865() { testInvalid(test_3865_query); }

		private static final SubtypeQuery test_3866_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("(any | {int})"));
		@Test public void test_3866() { testInvalid(test_3866_query); }

		private static final SubtypeQuery test_3867_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_3867() { testInvalid(test_3867_query); }

		private static final SubtypeQuery test_3868_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("(!int | !any)"));
		@Test public void test_3868() { testInvalid(test_3868_query); }

		private static final SubtypeQuery test_3869_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_3869() { testInvalid(test_3869_query); }

		private static final SubtypeQuery test_3870_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_3870() { testInvalid(test_3870_query); }

		private static final SubtypeQuery test_3871_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("({int} | !int)"));
		@Test public void test_3871() { testInvalid(test_3871_query); }

		private static final SubtypeQuery test_3872_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("(!any | !int)"));
		@Test public void test_3872() { testInvalid(test_3872_query); }

		private static final SubtypeQuery test_3873_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_3873() { testInvalid(test_3873_query); }

		private static final SubtypeQuery test_3874_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_3874() { testInvalid(test_3874_query); }

		private static final SubtypeQuery test_3875_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_3875() { testInvalid(test_3875_query); }

		private static final SubtypeQuery test_3876_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_3876() { testInvalid(test_3876_query); }

		private static final SubtypeQuery test_3877_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_3877() { testInvalid(test_3877_query); }

		private static final SubtypeQuery test_3878_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_3878() { testInvalid(test_3878_query); }

		private static final SubtypeQuery test_3879_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_3879() { testInvalid(test_3879_query); }

		private static final SubtypeQuery test_3880_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_3880() { testInvalid(test_3880_query); }

		private static final SubtypeQuery test_3881_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_3881() { testInvalid(test_3881_query); }

		private static final SubtypeQuery test_3882_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_3882() { testInvalid(test_3882_query); }

		private static final SubtypeQuery test_3883_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_3883() { testInvalid(test_3883_query); }

		private static final SubtypeQuery test_3884_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_3884() { testInvalid(test_3884_query); }

		private static final SubtypeQuery test_3885_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_3885() { testInvalid(test_3885_query); }

		private static final SubtypeQuery test_3886_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_3886() { testInvalid(test_3886_query); }

		private static final SubtypeQuery test_3887_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("(int | (any | int))"));
		@Test public void test_3887() { testInvalid(test_3887_query); }

		private static final SubtypeQuery test_3888_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_3888() { testInvalid(test_3888_query); }

		private static final SubtypeQuery test_3889_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_3889() { testInvalid(test_3889_query); }

		private static final SubtypeQuery test_3890_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_3890() { testInvalid(test_3890_query); }

		private static final SubtypeQuery test_3891_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_3891() { testInvalid(test_3891_query); }

		private static final SubtypeQuery test_3892_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_3892() { testInvalid(test_3892_query); }

		private static final SubtypeQuery test_3893_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_3893() { testInvalid(test_3893_query); }

		private static final SubtypeQuery test_3894_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("(int | (any & any))"));
		@Test public void test_3894() { testInvalid(test_3894_query); }

		private static final SubtypeQuery test_3895_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_3895() { testInvalid(test_3895_query); }

		private static final SubtypeQuery test_3896_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_3896() { testInvalid(test_3896_query); }

		private static final SubtypeQuery test_3897_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_3897() { testInvalid(test_3897_query); }

		private static final SubtypeQuery test_3898_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_3898() { testInvalid(test_3898_query); }

		private static final SubtypeQuery test_3899_query = createSubtypeQuery(parseWhiley("{{int, any}, (int | int)}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_3899() { testInvalid(test_3899_query); }

		private static final SubtypeQuery test_3900_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("!int"));
		@Test public void test_3900() { testInvalid(test_3900_query); }

		private static final SubtypeQuery test_3901_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("(any | any)"));
		@Test public void test_3901() { testInvalid(test_3901_query); }

		private static final SubtypeQuery test_3902_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("(any & any)"));
		@Test public void test_3902() { testInvalid(test_3902_query); }

		private static final SubtypeQuery test_3903_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{{int, int}}"));
		@Test public void test_3903() { testInvalid(test_3903_query); }

		private static final SubtypeQuery test_3904_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("!(int | int)"));
		@Test public void test_3904() { testInvalid(test_3904_query); }

		private static final SubtypeQuery test_3905_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_3905() { testValid(test_3905_query); }

		private static final SubtypeQuery test_3906_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_3906() { testValid(test_3906_query); }

		private static final SubtypeQuery test_3907_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{{any}, int}"));
		@Test public void test_3907() { testValid(test_3907_query); }

		private static final SubtypeQuery test_3908_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_3908() { testValid(test_3908_query); }

		private static final SubtypeQuery test_3909_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{(any | int), int}"));
		@Test public void test_3909() { testValid(test_3909_query); }

		private static final SubtypeQuery test_3910_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_3910() { testValid(test_3910_query); }

		private static final SubtypeQuery test_3911_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{!any, {int}}"));
		@Test public void test_3911() { testValid(test_3911_query); }

		private static final SubtypeQuery test_3912_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_3912() { testValid(test_3912_query); }

		private static final SubtypeQuery test_3913_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_3913() { testValid(test_3913_query); }

		private static final SubtypeQuery test_3914_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{any, !any}"));
		@Test public void test_3914() { testValid(test_3914_query); }

		private static final SubtypeQuery test_3915_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{{any}, !int}"));
		@Test public void test_3915() { testValid(test_3915_query); }

		private static final SubtypeQuery test_3916_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_3916() { testValid(test_3916_query); }

		private static final SubtypeQuery test_3917_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_3917() { testValid(test_3917_query); }

		private static final SubtypeQuery test_3918_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_3918() { testValid(test_3918_query); }

		private static final SubtypeQuery test_3919_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_3919() { testValid(test_3919_query); }

		private static final SubtypeQuery test_3920_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_3920() { testValid(test_3920_query); }

		private static final SubtypeQuery test_3921_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_3921() { testValid(test_3921_query); }

		private static final SubtypeQuery test_3922_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_3922() { testValid(test_3922_query); }

		private static final SubtypeQuery test_3923_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_3923() { testValid(test_3923_query); }

		private static final SubtypeQuery test_3924_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_3924() { testValid(test_3924_query); }

		private static final SubtypeQuery test_3925_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_3925() { testValid(test_3925_query); }

		private static final SubtypeQuery test_3926_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_3926() { testValid(test_3926_query); }

		private static final SubtypeQuery test_3927_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_3927() { testValid(test_3927_query); }

		private static final SubtypeQuery test_3928_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_3928() { testValid(test_3928_query); }

		private static final SubtypeQuery test_3929_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_3929() { testValid(test_3929_query); }

		private static final SubtypeQuery test_3930_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_3930() { testValid(test_3930_query); }

		private static final SubtypeQuery test_3931_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_3931() { testValid(test_3931_query); }

		private static final SubtypeQuery test_3932_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_3932() { testValid(test_3932_query); }

		private static final SubtypeQuery test_3933_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_3933() { testValid(test_3933_query); }

		private static final SubtypeQuery test_3934_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_3934() { testValid(test_3934_query); }

		private static final SubtypeQuery test_3935_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_3935() { testValid(test_3935_query); }

		private static final SubtypeQuery test_3936_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_3936() { testValid(test_3936_query); }

		private static final SubtypeQuery test_3937_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_3937() { testValid(test_3937_query); }

		private static final SubtypeQuery test_3938_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_3938() { testValid(test_3938_query); }

		private static final SubtypeQuery test_3939_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_3939() { testValid(test_3939_query); }

		private static final SubtypeQuery test_3940_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_3940() { testValid(test_3940_query); }

		private static final SubtypeQuery test_3941_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_3941() { testValid(test_3941_query); }

		private static final SubtypeQuery test_3942_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_3942() { testValid(test_3942_query); }

		private static final SubtypeQuery test_3943_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_3943() { testValid(test_3943_query); }

		private static final SubtypeQuery test_3944_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_3944() { testValid(test_3944_query); }

		private static final SubtypeQuery test_3945_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_3945() { testValid(test_3945_query); }

		private static final SubtypeQuery test_3946_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_3946() { testValid(test_3946_query); }

		private static final SubtypeQuery test_3947_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_3947() { testValid(test_3947_query); }

		private static final SubtypeQuery test_3948_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_3948() { testValid(test_3948_query); }

		private static final SubtypeQuery test_3949_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_3949() { testValid(test_3949_query); }

		private static final SubtypeQuery test_3950_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_3950() { testValid(test_3950_query); }

		private static final SubtypeQuery test_3951_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_3951() { testValid(test_3951_query); }

		private static final SubtypeQuery test_3952_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_3952() { testValid(test_3952_query); }

		private static final SubtypeQuery test_3953_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_3953() { testValid(test_3953_query); }

		private static final SubtypeQuery test_3954_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_3954() { testValid(test_3954_query); }

		private static final SubtypeQuery test_3955_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_3955() { testValid(test_3955_query); }

		private static final SubtypeQuery test_3956_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("(!any | any)"));
		@Test public void test_3956() { testInvalid(test_3956_query); }

		private static final SubtypeQuery test_3957_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("({int, any} | any)"));
		@Test public void test_3957() { testInvalid(test_3957_query); }

		private static final SubtypeQuery test_3958_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("({any, int} | any)"));
		@Test public void test_3958() { testInvalid(test_3958_query); }

		private static final SubtypeQuery test_3959_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("((int & int) | any)"));
		@Test public void test_3959() { testInvalid(test_3959_query); }

		private static final SubtypeQuery test_3960_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("({int, int} | int)"));
		@Test public void test_3960() { testInvalid(test_3960_query); }

		private static final SubtypeQuery test_3961_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("((any | any) | int)"));
		@Test public void test_3961() { testInvalid(test_3961_query); }

		private static final SubtypeQuery test_3962_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("((int | any) | int)"));
		@Test public void test_3962() { testInvalid(test_3962_query); }

		private static final SubtypeQuery test_3963_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("(any | {any})"));
		@Test public void test_3963() { testInvalid(test_3963_query); }

		private static final SubtypeQuery test_3964_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("(int | {any})"));
		@Test public void test_3964() { testInvalid(test_3964_query); }

		private static final SubtypeQuery test_3965_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_3965() { testInvalid(test_3965_query); }

		private static final SubtypeQuery test_3966_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("(any | {int})"));
		@Test public void test_3966() { testInvalid(test_3966_query); }

		private static final SubtypeQuery test_3967_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_3967() { testInvalid(test_3967_query); }

		private static final SubtypeQuery test_3968_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("(!int | !any)"));
		@Test public void test_3968() { testInvalid(test_3968_query); }

		private static final SubtypeQuery test_3969_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_3969() { testValid(test_3969_query); }

		private static final SubtypeQuery test_3970_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_3970() { testInvalid(test_3970_query); }

		private static final SubtypeQuery test_3971_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("({int} | !int)"));
		@Test public void test_3971() { testInvalid(test_3971_query); }

		private static final SubtypeQuery test_3972_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("(!any | !int)"));
		@Test public void test_3972() { testInvalid(test_3972_query); }

		private static final SubtypeQuery test_3973_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_3973() { testInvalid(test_3973_query); }

		private static final SubtypeQuery test_3974_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_3974() { testInvalid(test_3974_query); }

		private static final SubtypeQuery test_3975_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_3975() { testInvalid(test_3975_query); }

		private static final SubtypeQuery test_3976_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_3976() { testValid(test_3976_query); }

		private static final SubtypeQuery test_3977_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_3977() { testInvalid(test_3977_query); }

		private static final SubtypeQuery test_3978_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_3978() { testInvalid(test_3978_query); }

		private static final SubtypeQuery test_3979_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_3979() { testInvalid(test_3979_query); }

		private static final SubtypeQuery test_3980_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_3980() { testInvalid(test_3980_query); }

		private static final SubtypeQuery test_3981_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_3981() { testInvalid(test_3981_query); }

		private static final SubtypeQuery test_3982_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_3982() { testInvalid(test_3982_query); }

		private static final SubtypeQuery test_3983_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_3983() { testInvalid(test_3983_query); }

		private static final SubtypeQuery test_3984_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_3984() { testInvalid(test_3984_query); }

		private static final SubtypeQuery test_3985_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_3985() { testInvalid(test_3985_query); }

		private static final SubtypeQuery test_3986_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_3986() { testInvalid(test_3986_query); }

		private static final SubtypeQuery test_3987_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("(int | (any | int))"));
		@Test public void test_3987() { testInvalid(test_3987_query); }

		private static final SubtypeQuery test_3988_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_3988() { testInvalid(test_3988_query); }

		private static final SubtypeQuery test_3989_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_3989() { testInvalid(test_3989_query); }

		private static final SubtypeQuery test_3990_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_3990() { testInvalid(test_3990_query); }

		private static final SubtypeQuery test_3991_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_3991() { testInvalid(test_3991_query); }

		private static final SubtypeQuery test_3992_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_3992() { testInvalid(test_3992_query); }

		private static final SubtypeQuery test_3993_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_3993() { testInvalid(test_3993_query); }

		private static final SubtypeQuery test_3994_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("(int | (any & any))"));
		@Test public void test_3994() { testInvalid(test_3994_query); }

		private static final SubtypeQuery test_3995_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_3995() { testInvalid(test_3995_query); }

		private static final SubtypeQuery test_3996_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_3996() { testInvalid(test_3996_query); }

		private static final SubtypeQuery test_3997_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_3997() { testInvalid(test_3997_query); }

		private static final SubtypeQuery test_3998_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_3998() { testInvalid(test_3998_query); }

		private static final SubtypeQuery test_3999_query = createSubtypeQuery(parseWhiley("{any, (any & any)}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_3999() { testInvalid(test_3999_query); }

	}
	public static class Part_4 {
		private static final SubtypeQuery test_4000_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("!int"));
		@Test public void test_4000() { testInvalid(test_4000_query); }

		private static final SubtypeQuery test_4001_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("(any | any)"));
		@Test public void test_4001() { testInvalid(test_4001_query); }

		private static final SubtypeQuery test_4002_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("(any & any)"));
		@Test public void test_4002() { testInvalid(test_4002_query); }

		private static final SubtypeQuery test_4003_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{{int, int}}"));
		@Test public void test_4003() { testInvalid(test_4003_query); }

		private static final SubtypeQuery test_4004_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("!(int | int)"));
		@Test public void test_4004() { testInvalid(test_4004_query); }

		private static final SubtypeQuery test_4005_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_4005() { testInvalid(test_4005_query); }

		private static final SubtypeQuery test_4006_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_4006() { testInvalid(test_4006_query); }

		private static final SubtypeQuery test_4007_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{{any}, int}"));
		@Test public void test_4007() { testValid(test_4007_query); }

		private static final SubtypeQuery test_4008_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_4008() { testInvalid(test_4008_query); }

		private static final SubtypeQuery test_4009_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{(any | int), int}"));
		@Test public void test_4009() { testInvalid(test_4009_query); }

		private static final SubtypeQuery test_4010_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_4010() { testInvalid(test_4010_query); }

		private static final SubtypeQuery test_4011_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{!any, {int}}"));
		@Test public void test_4011() { testValid(test_4011_query); }

		private static final SubtypeQuery test_4012_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_4012() { testInvalid(test_4012_query); }

		private static final SubtypeQuery test_4013_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_4013() { testInvalid(test_4013_query); }

		private static final SubtypeQuery test_4014_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{any, !any}"));
		@Test public void test_4014() { testValid(test_4014_query); }

		private static final SubtypeQuery test_4015_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{{any}, !int}"));
		@Test public void test_4015() { testValid(test_4015_query); }

		private static final SubtypeQuery test_4016_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_4016() { testInvalid(test_4016_query); }

		private static final SubtypeQuery test_4017_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_4017() { testInvalid(test_4017_query); }

		private static final SubtypeQuery test_4018_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_4018() { testInvalid(test_4018_query); }

		private static final SubtypeQuery test_4019_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_4019() { testInvalid(test_4019_query); }

		private static final SubtypeQuery test_4020_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_4020() { testInvalid(test_4020_query); }

		private static final SubtypeQuery test_4021_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_4021() { testInvalid(test_4021_query); }

		private static final SubtypeQuery test_4022_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_4022() { testInvalid(test_4022_query); }

		private static final SubtypeQuery test_4023_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_4023() { testInvalid(test_4023_query); }

		private static final SubtypeQuery test_4024_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_4024() { testInvalid(test_4024_query); }

		private static final SubtypeQuery test_4025_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_4025() { testInvalid(test_4025_query); }

		private static final SubtypeQuery test_4026_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_4026() { testInvalid(test_4026_query); }

		private static final SubtypeQuery test_4027_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_4027() { testValid(test_4027_query); }

		private static final SubtypeQuery test_4028_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_4028() { testInvalid(test_4028_query); }

		private static final SubtypeQuery test_4029_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_4029() { testValid(test_4029_query); }

		private static final SubtypeQuery test_4030_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_4030() { testInvalid(test_4030_query); }

		private static final SubtypeQuery test_4031_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_4031() { testInvalid(test_4031_query); }

		private static final SubtypeQuery test_4032_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_4032() { testValid(test_4032_query); }

		private static final SubtypeQuery test_4033_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_4033() { testInvalid(test_4033_query); }

		private static final SubtypeQuery test_4034_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_4034() { testInvalid(test_4034_query); }

		private static final SubtypeQuery test_4035_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_4035() { testInvalid(test_4035_query); }

		private static final SubtypeQuery test_4036_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_4036() { testInvalid(test_4036_query); }

		private static final SubtypeQuery test_4037_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_4037() { testInvalid(test_4037_query); }

		private static final SubtypeQuery test_4038_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_4038() { testInvalid(test_4038_query); }

		private static final SubtypeQuery test_4039_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_4039() { testInvalid(test_4039_query); }

		private static final SubtypeQuery test_4040_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_4040() { testValid(test_4040_query); }

		private static final SubtypeQuery test_4041_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_4041() { testValid(test_4041_query); }

		private static final SubtypeQuery test_4042_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_4042() { testInvalid(test_4042_query); }

		private static final SubtypeQuery test_4043_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_4043() { testInvalid(test_4043_query); }

		private static final SubtypeQuery test_4044_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_4044() { testValid(test_4044_query); }

		private static final SubtypeQuery test_4045_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_4045() { testInvalid(test_4045_query); }

		private static final SubtypeQuery test_4046_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_4046() { testInvalid(test_4046_query); }

		private static final SubtypeQuery test_4047_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_4047() { testInvalid(test_4047_query); }

		private static final SubtypeQuery test_4048_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_4048() { testInvalid(test_4048_query); }

		private static final SubtypeQuery test_4049_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_4049() { testValid(test_4049_query); }

		private static final SubtypeQuery test_4050_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_4050() { testInvalid(test_4050_query); }

		private static final SubtypeQuery test_4051_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_4051() { testInvalid(test_4051_query); }

		private static final SubtypeQuery test_4052_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_4052() { testInvalid(test_4052_query); }

		private static final SubtypeQuery test_4053_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_4053() { testValid(test_4053_query); }

		private static final SubtypeQuery test_4054_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_4054() { testInvalid(test_4054_query); }

		private static final SubtypeQuery test_4055_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_4055() { testInvalid(test_4055_query); }

		private static final SubtypeQuery test_4056_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("(!any | any)"));
		@Test public void test_4056() { testInvalid(test_4056_query); }

		private static final SubtypeQuery test_4057_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("({int, any} | any)"));
		@Test public void test_4057() { testInvalid(test_4057_query); }

		private static final SubtypeQuery test_4058_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("({any, int} | any)"));
		@Test public void test_4058() { testInvalid(test_4058_query); }

		private static final SubtypeQuery test_4059_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("((int & int) | any)"));
		@Test public void test_4059() { testInvalid(test_4059_query); }

		private static final SubtypeQuery test_4060_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("({int, int} | int)"));
		@Test public void test_4060() { testInvalid(test_4060_query); }

		private static final SubtypeQuery test_4061_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("((any | any) | int)"));
		@Test public void test_4061() { testInvalid(test_4061_query); }

		private static final SubtypeQuery test_4062_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("((int | any) | int)"));
		@Test public void test_4062() { testInvalid(test_4062_query); }

		private static final SubtypeQuery test_4063_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("(any | {any})"));
		@Test public void test_4063() { testInvalid(test_4063_query); }

		private static final SubtypeQuery test_4064_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("(int | {any})"));
		@Test public void test_4064() { testInvalid(test_4064_query); }

		private static final SubtypeQuery test_4065_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_4065() { testInvalid(test_4065_query); }

		private static final SubtypeQuery test_4066_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("(any | {int})"));
		@Test public void test_4066() { testInvalid(test_4066_query); }

		private static final SubtypeQuery test_4067_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_4067() { testInvalid(test_4067_query); }

		private static final SubtypeQuery test_4068_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("(!int | !any)"));
		@Test public void test_4068() { testInvalid(test_4068_query); }

		private static final SubtypeQuery test_4069_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_4069() { testInvalid(test_4069_query); }

		private static final SubtypeQuery test_4070_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_4070() { testInvalid(test_4070_query); }

		private static final SubtypeQuery test_4071_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("({int} | !int)"));
		@Test public void test_4071() { testInvalid(test_4071_query); }

		private static final SubtypeQuery test_4072_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("(!any | !int)"));
		@Test public void test_4072() { testInvalid(test_4072_query); }

		private static final SubtypeQuery test_4073_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_4073() { testInvalid(test_4073_query); }

		private static final SubtypeQuery test_4074_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_4074() { testInvalid(test_4074_query); }

		private static final SubtypeQuery test_4075_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_4075() { testInvalid(test_4075_query); }

		private static final SubtypeQuery test_4076_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_4076() { testInvalid(test_4076_query); }

		private static final SubtypeQuery test_4077_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_4077() { testInvalid(test_4077_query); }

		private static final SubtypeQuery test_4078_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_4078() { testInvalid(test_4078_query); }

		private static final SubtypeQuery test_4079_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_4079() { testInvalid(test_4079_query); }

		private static final SubtypeQuery test_4080_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_4080() { testInvalid(test_4080_query); }

		private static final SubtypeQuery test_4081_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_4081() { testInvalid(test_4081_query); }

		private static final SubtypeQuery test_4082_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_4082() { testInvalid(test_4082_query); }

		private static final SubtypeQuery test_4083_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_4083() { testInvalid(test_4083_query); }

		private static final SubtypeQuery test_4084_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_4084() { testInvalid(test_4084_query); }

		private static final SubtypeQuery test_4085_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_4085() { testInvalid(test_4085_query); }

		private static final SubtypeQuery test_4086_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_4086() { testInvalid(test_4086_query); }

		private static final SubtypeQuery test_4087_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("(int | (any | int))"));
		@Test public void test_4087() { testInvalid(test_4087_query); }

		private static final SubtypeQuery test_4088_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_4088() { testInvalid(test_4088_query); }

		private static final SubtypeQuery test_4089_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_4089() { testInvalid(test_4089_query); }

		private static final SubtypeQuery test_4090_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_4090() { testInvalid(test_4090_query); }

		private static final SubtypeQuery test_4091_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_4091() { testInvalid(test_4091_query); }

		private static final SubtypeQuery test_4092_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_4092() { testInvalid(test_4092_query); }

		private static final SubtypeQuery test_4093_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_4093() { testInvalid(test_4093_query); }

		private static final SubtypeQuery test_4094_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("(int | (any & any))"));
		@Test public void test_4094() { testInvalid(test_4094_query); }

		private static final SubtypeQuery test_4095_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_4095() { testInvalid(test_4095_query); }

		private static final SubtypeQuery test_4096_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_4096() { testInvalid(test_4096_query); }

		private static final SubtypeQuery test_4097_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_4097() { testInvalid(test_4097_query); }

		private static final SubtypeQuery test_4098_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_4098() { testInvalid(test_4098_query); }

		private static final SubtypeQuery test_4099_query = createSubtypeQuery(parseWhiley("{{any}, (any & any)}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_4099() { testInvalid(test_4099_query); }

		private static final SubtypeQuery test_4100_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("!int"));
		@Test public void test_4100() { testInvalid(test_4100_query); }

		private static final SubtypeQuery test_4101_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("(any | any)"));
		@Test public void test_4101() { testInvalid(test_4101_query); }

		private static final SubtypeQuery test_4102_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("(any & any)"));
		@Test public void test_4102() { testInvalid(test_4102_query); }

		private static final SubtypeQuery test_4103_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{{int, int}}"));
		@Test public void test_4103() { testInvalid(test_4103_query); }

		private static final SubtypeQuery test_4104_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("!(int | int)"));
		@Test public void test_4104() { testInvalid(test_4104_query); }

		private static final SubtypeQuery test_4105_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_4105() { testInvalid(test_4105_query); }

		private static final SubtypeQuery test_4106_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_4106() { testInvalid(test_4106_query); }

		private static final SubtypeQuery test_4107_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{{any}, int}"));
		@Test public void test_4107() { testInvalid(test_4107_query); }

		private static final SubtypeQuery test_4108_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_4108() { testInvalid(test_4108_query); }

		private static final SubtypeQuery test_4109_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{(any | int), int}"));
		@Test public void test_4109() { testInvalid(test_4109_query); }

		private static final SubtypeQuery test_4110_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_4110() { testInvalid(test_4110_query); }

		private static final SubtypeQuery test_4111_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{!any, {int}}"));
		@Test public void test_4111() { testValid(test_4111_query); }

		private static final SubtypeQuery test_4112_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_4112() { testInvalid(test_4112_query); }

		private static final SubtypeQuery test_4113_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_4113() { testInvalid(test_4113_query); }

		private static final SubtypeQuery test_4114_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{any, !any}"));
		@Test public void test_4114() { testValid(test_4114_query); }

		private static final SubtypeQuery test_4115_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{{any}, !int}"));
		@Test public void test_4115() { testInvalid(test_4115_query); }

		private static final SubtypeQuery test_4116_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_4116() { testInvalid(test_4116_query); }

		private static final SubtypeQuery test_4117_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_4117() { testInvalid(test_4117_query); }

		private static final SubtypeQuery test_4118_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_4118() { testInvalid(test_4118_query); }

		private static final SubtypeQuery test_4119_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_4119() { testInvalid(test_4119_query); }

		private static final SubtypeQuery test_4120_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_4120() { testInvalid(test_4120_query); }

		private static final SubtypeQuery test_4121_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_4121() { testInvalid(test_4121_query); }

		private static final SubtypeQuery test_4122_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_4122() { testInvalid(test_4122_query); }

		private static final SubtypeQuery test_4123_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_4123() { testInvalid(test_4123_query); }

		private static final SubtypeQuery test_4124_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_4124() { testInvalid(test_4124_query); }

		private static final SubtypeQuery test_4125_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_4125() { testInvalid(test_4125_query); }

		private static final SubtypeQuery test_4126_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_4126() { testInvalid(test_4126_query); }

		private static final SubtypeQuery test_4127_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_4127() { testInvalid(test_4127_query); }

		private static final SubtypeQuery test_4128_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_4128() { testInvalid(test_4128_query); }

		private static final SubtypeQuery test_4129_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_4129() { testValid(test_4129_query); }

		private static final SubtypeQuery test_4130_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_4130() { testInvalid(test_4130_query); }

		private static final SubtypeQuery test_4131_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_4131() { testInvalid(test_4131_query); }

		private static final SubtypeQuery test_4132_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_4132() { testInvalid(test_4132_query); }

		private static final SubtypeQuery test_4133_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_4133() { testInvalid(test_4133_query); }

		private static final SubtypeQuery test_4134_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_4134() { testInvalid(test_4134_query); }

		private static final SubtypeQuery test_4135_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_4135() { testInvalid(test_4135_query); }

		private static final SubtypeQuery test_4136_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_4136() { testInvalid(test_4136_query); }

		private static final SubtypeQuery test_4137_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_4137() { testInvalid(test_4137_query); }

		private static final SubtypeQuery test_4138_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_4138() { testInvalid(test_4138_query); }

		private static final SubtypeQuery test_4139_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_4139() { testInvalid(test_4139_query); }

		private static final SubtypeQuery test_4140_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_4140() { testInvalid(test_4140_query); }

		private static final SubtypeQuery test_4141_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_4141() { testValid(test_4141_query); }

		private static final SubtypeQuery test_4142_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_4142() { testInvalid(test_4142_query); }

		private static final SubtypeQuery test_4143_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_4143() { testInvalid(test_4143_query); }

		private static final SubtypeQuery test_4144_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_4144() { testInvalid(test_4144_query); }

		private static final SubtypeQuery test_4145_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_4145() { testInvalid(test_4145_query); }

		private static final SubtypeQuery test_4146_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_4146() { testInvalid(test_4146_query); }

		private static final SubtypeQuery test_4147_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_4147() { testInvalid(test_4147_query); }

		private static final SubtypeQuery test_4148_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_4148() { testInvalid(test_4148_query); }

		private static final SubtypeQuery test_4149_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_4149() { testInvalid(test_4149_query); }

		private static final SubtypeQuery test_4150_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_4150() { testInvalid(test_4150_query); }

		private static final SubtypeQuery test_4151_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_4151() { testInvalid(test_4151_query); }

		private static final SubtypeQuery test_4152_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_4152() { testInvalid(test_4152_query); }

		private static final SubtypeQuery test_4153_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_4153() { testInvalid(test_4153_query); }

		private static final SubtypeQuery test_4154_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_4154() { testInvalid(test_4154_query); }

		private static final SubtypeQuery test_4155_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_4155() { testInvalid(test_4155_query); }

		private static final SubtypeQuery test_4156_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("(!any | any)"));
		@Test public void test_4156() { testInvalid(test_4156_query); }

		private static final SubtypeQuery test_4157_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("({int, any} | any)"));
		@Test public void test_4157() { testInvalid(test_4157_query); }

		private static final SubtypeQuery test_4158_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("({any, int} | any)"));
		@Test public void test_4158() { testInvalid(test_4158_query); }

		private static final SubtypeQuery test_4159_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("((int & int) | any)"));
		@Test public void test_4159() { testInvalid(test_4159_query); }

		private static final SubtypeQuery test_4160_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("({int, int} | int)"));
		@Test public void test_4160() { testInvalid(test_4160_query); }

		private static final SubtypeQuery test_4161_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("((any | any) | int)"));
		@Test public void test_4161() { testInvalid(test_4161_query); }

		private static final SubtypeQuery test_4162_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("((int | any) | int)"));
		@Test public void test_4162() { testInvalid(test_4162_query); }

		private static final SubtypeQuery test_4163_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("(any | {any})"));
		@Test public void test_4163() { testInvalid(test_4163_query); }

		private static final SubtypeQuery test_4164_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("(int | {any})"));
		@Test public void test_4164() { testInvalid(test_4164_query); }

		private static final SubtypeQuery test_4165_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_4165() { testInvalid(test_4165_query); }

		private static final SubtypeQuery test_4166_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("(any | {int})"));
		@Test public void test_4166() { testInvalid(test_4166_query); }

		private static final SubtypeQuery test_4167_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_4167() { testInvalid(test_4167_query); }

		private static final SubtypeQuery test_4168_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("(!int | !any)"));
		@Test public void test_4168() { testInvalid(test_4168_query); }

		private static final SubtypeQuery test_4169_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_4169() { testInvalid(test_4169_query); }

		private static final SubtypeQuery test_4170_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_4170() { testInvalid(test_4170_query); }

		private static final SubtypeQuery test_4171_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("({int} | !int)"));
		@Test public void test_4171() { testInvalid(test_4171_query); }

		private static final SubtypeQuery test_4172_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("(!any | !int)"));
		@Test public void test_4172() { testInvalid(test_4172_query); }

		private static final SubtypeQuery test_4173_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_4173() { testInvalid(test_4173_query); }

		private static final SubtypeQuery test_4174_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_4174() { testInvalid(test_4174_query); }

		private static final SubtypeQuery test_4175_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_4175() { testInvalid(test_4175_query); }

		private static final SubtypeQuery test_4176_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_4176() { testInvalid(test_4176_query); }

		private static final SubtypeQuery test_4177_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_4177() { testInvalid(test_4177_query); }

		private static final SubtypeQuery test_4178_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_4178() { testInvalid(test_4178_query); }

		private static final SubtypeQuery test_4179_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_4179() { testInvalid(test_4179_query); }

		private static final SubtypeQuery test_4180_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_4180() { testInvalid(test_4180_query); }

		private static final SubtypeQuery test_4181_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_4181() { testInvalid(test_4181_query); }

		private static final SubtypeQuery test_4182_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_4182() { testInvalid(test_4182_query); }

		private static final SubtypeQuery test_4183_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_4183() { testInvalid(test_4183_query); }

		private static final SubtypeQuery test_4184_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_4184() { testInvalid(test_4184_query); }

		private static final SubtypeQuery test_4185_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_4185() { testInvalid(test_4185_query); }

		private static final SubtypeQuery test_4186_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_4186() { testInvalid(test_4186_query); }

		private static final SubtypeQuery test_4187_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("(int | (any | int))"));
		@Test public void test_4187() { testInvalid(test_4187_query); }

		private static final SubtypeQuery test_4188_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_4188() { testInvalid(test_4188_query); }

		private static final SubtypeQuery test_4189_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_4189() { testInvalid(test_4189_query); }

		private static final SubtypeQuery test_4190_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_4190() { testInvalid(test_4190_query); }

		private static final SubtypeQuery test_4191_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_4191() { testInvalid(test_4191_query); }

		private static final SubtypeQuery test_4192_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_4192() { testInvalid(test_4192_query); }

		private static final SubtypeQuery test_4193_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_4193() { testInvalid(test_4193_query); }

		private static final SubtypeQuery test_4194_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("(int | (any & any))"));
		@Test public void test_4194() { testInvalid(test_4194_query); }

		private static final SubtypeQuery test_4195_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_4195() { testInvalid(test_4195_query); }

		private static final SubtypeQuery test_4196_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_4196() { testInvalid(test_4196_query); }

		private static final SubtypeQuery test_4197_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_4197() { testInvalid(test_4197_query); }

		private static final SubtypeQuery test_4198_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_4198() { testInvalid(test_4198_query); }

		private static final SubtypeQuery test_4199_query = createSubtypeQuery(parseWhiley("{!any, (any & any)}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_4199() { testInvalid(test_4199_query); }

		private static final SubtypeQuery test_4200_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("!int"));
		@Test public void test_4200() { testInvalid(test_4200_query); }

		private static final SubtypeQuery test_4201_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("(any | any)"));
		@Test public void test_4201() { testInvalid(test_4201_query); }

		private static final SubtypeQuery test_4202_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("(any & any)"));
		@Test public void test_4202() { testInvalid(test_4202_query); }

		private static final SubtypeQuery test_4203_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{{int, int}}"));
		@Test public void test_4203() { testInvalid(test_4203_query); }

		private static final SubtypeQuery test_4204_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("!(int | int)"));
		@Test public void test_4204() { testInvalid(test_4204_query); }

		private static final SubtypeQuery test_4205_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_4205() { testValid(test_4205_query); }

		private static final SubtypeQuery test_4206_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_4206() { testValid(test_4206_query); }

		private static final SubtypeQuery test_4207_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{{any}, int}"));
		@Test public void test_4207() { testValid(test_4207_query); }

		private static final SubtypeQuery test_4208_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_4208() { testValid(test_4208_query); }

		private static final SubtypeQuery test_4209_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{(any | int), int}"));
		@Test public void test_4209() { testValid(test_4209_query); }

		private static final SubtypeQuery test_4210_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_4210() { testValid(test_4210_query); }

		private static final SubtypeQuery test_4211_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{!any, {int}}"));
		@Test public void test_4211() { testValid(test_4211_query); }

		private static final SubtypeQuery test_4212_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_4212() { testValid(test_4212_query); }

		private static final SubtypeQuery test_4213_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_4213() { testValid(test_4213_query); }

		private static final SubtypeQuery test_4214_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{any, !any}"));
		@Test public void test_4214() { testValid(test_4214_query); }

		private static final SubtypeQuery test_4215_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{{any}, !int}"));
		@Test public void test_4215() { testValid(test_4215_query); }

		private static final SubtypeQuery test_4216_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_4216() { testValid(test_4216_query); }

		private static final SubtypeQuery test_4217_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_4217() { testValid(test_4217_query); }

		private static final SubtypeQuery test_4218_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_4218() { testValid(test_4218_query); }

		private static final SubtypeQuery test_4219_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_4219() { testValid(test_4219_query); }

		private static final SubtypeQuery test_4220_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_4220() { testValid(test_4220_query); }

		private static final SubtypeQuery test_4221_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_4221() { testValid(test_4221_query); }

		private static final SubtypeQuery test_4222_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_4222() { testValid(test_4222_query); }

		private static final SubtypeQuery test_4223_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_4223() { testValid(test_4223_query); }

		private static final SubtypeQuery test_4224_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_4224() { testValid(test_4224_query); }

		private static final SubtypeQuery test_4225_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_4225() { testValid(test_4225_query); }

		private static final SubtypeQuery test_4226_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_4226() { testValid(test_4226_query); }

		private static final SubtypeQuery test_4227_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_4227() { testValid(test_4227_query); }

		private static final SubtypeQuery test_4228_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_4228() { testValid(test_4228_query); }

		private static final SubtypeQuery test_4229_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_4229() { testValid(test_4229_query); }

		private static final SubtypeQuery test_4230_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_4230() { testValid(test_4230_query); }

		private static final SubtypeQuery test_4231_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_4231() { testValid(test_4231_query); }

		private static final SubtypeQuery test_4232_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_4232() { testValid(test_4232_query); }

		private static final SubtypeQuery test_4233_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_4233() { testValid(test_4233_query); }

		private static final SubtypeQuery test_4234_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_4234() { testValid(test_4234_query); }

		private static final SubtypeQuery test_4235_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_4235() { testValid(test_4235_query); }

		private static final SubtypeQuery test_4236_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_4236() { testValid(test_4236_query); }

		private static final SubtypeQuery test_4237_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_4237() { testValid(test_4237_query); }

		private static final SubtypeQuery test_4238_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_4238() { testValid(test_4238_query); }

		private static final SubtypeQuery test_4239_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_4239() { testValid(test_4239_query); }

		private static final SubtypeQuery test_4240_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_4240() { testValid(test_4240_query); }

		private static final SubtypeQuery test_4241_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_4241() { testValid(test_4241_query); }

		private static final SubtypeQuery test_4242_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_4242() { testValid(test_4242_query); }

		private static final SubtypeQuery test_4243_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_4243() { testValid(test_4243_query); }

		private static final SubtypeQuery test_4244_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_4244() { testValid(test_4244_query); }

		private static final SubtypeQuery test_4245_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_4245() { testValid(test_4245_query); }

		private static final SubtypeQuery test_4246_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_4246() { testValid(test_4246_query); }

		private static final SubtypeQuery test_4247_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_4247() { testValid(test_4247_query); }

		private static final SubtypeQuery test_4248_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_4248() { testValid(test_4248_query); }

		private static final SubtypeQuery test_4249_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_4249() { testValid(test_4249_query); }

		private static final SubtypeQuery test_4250_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_4250() { testValid(test_4250_query); }

		private static final SubtypeQuery test_4251_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_4251() { testValid(test_4251_query); }

		private static final SubtypeQuery test_4252_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_4252() { testValid(test_4252_query); }

		private static final SubtypeQuery test_4253_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_4253() { testValid(test_4253_query); }

		private static final SubtypeQuery test_4254_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_4254() { testValid(test_4254_query); }

		private static final SubtypeQuery test_4255_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_4255() { testValid(test_4255_query); }

		private static final SubtypeQuery test_4256_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("(!any | any)"));
		@Test public void test_4256() { testInvalid(test_4256_query); }

		private static final SubtypeQuery test_4257_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("({int, any} | any)"));
		@Test public void test_4257() { testInvalid(test_4257_query); }

		private static final SubtypeQuery test_4258_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("({any, int} | any)"));
		@Test public void test_4258() { testInvalid(test_4258_query); }

		private static final SubtypeQuery test_4259_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("((int & int) | any)"));
		@Test public void test_4259() { testInvalid(test_4259_query); }

		private static final SubtypeQuery test_4260_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("({int, int} | int)"));
		@Test public void test_4260() { testInvalid(test_4260_query); }

		private static final SubtypeQuery test_4261_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("((any | any) | int)"));
		@Test public void test_4261() { testInvalid(test_4261_query); }

		private static final SubtypeQuery test_4262_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("((int | any) | int)"));
		@Test public void test_4262() { testInvalid(test_4262_query); }

		private static final SubtypeQuery test_4263_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("(any | {any})"));
		@Test public void test_4263() { testInvalid(test_4263_query); }

		private static final SubtypeQuery test_4264_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("(int | {any})"));
		@Test public void test_4264() { testInvalid(test_4264_query); }

		private static final SubtypeQuery test_4265_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_4265() { testInvalid(test_4265_query); }

		private static final SubtypeQuery test_4266_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("(any | {int})"));
		@Test public void test_4266() { testInvalid(test_4266_query); }

		private static final SubtypeQuery test_4267_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_4267() { testInvalid(test_4267_query); }

		private static final SubtypeQuery test_4268_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("(!int | !any)"));
		@Test public void test_4268() { testInvalid(test_4268_query); }

		private static final SubtypeQuery test_4269_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_4269() { testValid(test_4269_query); }

		private static final SubtypeQuery test_4270_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_4270() { testInvalid(test_4270_query); }

		private static final SubtypeQuery test_4271_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("({int} | !int)"));
		@Test public void test_4271() { testInvalid(test_4271_query); }

		private static final SubtypeQuery test_4272_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("(!any | !int)"));
		@Test public void test_4272() { testInvalid(test_4272_query); }

		private static final SubtypeQuery test_4273_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_4273() { testInvalid(test_4273_query); }

		private static final SubtypeQuery test_4274_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_4274() { testInvalid(test_4274_query); }

		private static final SubtypeQuery test_4275_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_4275() { testInvalid(test_4275_query); }

		private static final SubtypeQuery test_4276_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_4276() { testValid(test_4276_query); }

		private static final SubtypeQuery test_4277_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_4277() { testInvalid(test_4277_query); }

		private static final SubtypeQuery test_4278_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_4278() { testInvalid(test_4278_query); }

		private static final SubtypeQuery test_4279_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_4279() { testInvalid(test_4279_query); }

		private static final SubtypeQuery test_4280_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_4280() { testInvalid(test_4280_query); }

		private static final SubtypeQuery test_4281_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_4281() { testInvalid(test_4281_query); }

		private static final SubtypeQuery test_4282_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_4282() { testInvalid(test_4282_query); }

		private static final SubtypeQuery test_4283_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_4283() { testInvalid(test_4283_query); }

		private static final SubtypeQuery test_4284_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_4284() { testInvalid(test_4284_query); }

		private static final SubtypeQuery test_4285_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_4285() { testInvalid(test_4285_query); }

		private static final SubtypeQuery test_4286_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_4286() { testInvalid(test_4286_query); }

		private static final SubtypeQuery test_4287_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("(int | (any | int))"));
		@Test public void test_4287() { testInvalid(test_4287_query); }

		private static final SubtypeQuery test_4288_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_4288() { testInvalid(test_4288_query); }

		private static final SubtypeQuery test_4289_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_4289() { testInvalid(test_4289_query); }

		private static final SubtypeQuery test_4290_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_4290() { testInvalid(test_4290_query); }

		private static final SubtypeQuery test_4291_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_4291() { testInvalid(test_4291_query); }

		private static final SubtypeQuery test_4292_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_4292() { testInvalid(test_4292_query); }

		private static final SubtypeQuery test_4293_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_4293() { testInvalid(test_4293_query); }

		private static final SubtypeQuery test_4294_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("(int | (any & any))"));
		@Test public void test_4294() { testInvalid(test_4294_query); }

		private static final SubtypeQuery test_4295_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_4295() { testInvalid(test_4295_query); }

		private static final SubtypeQuery test_4296_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_4296() { testInvalid(test_4296_query); }

		private static final SubtypeQuery test_4297_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_4297() { testInvalid(test_4297_query); }

		private static final SubtypeQuery test_4298_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_4298() { testInvalid(test_4298_query); }

		private static final SubtypeQuery test_4299_query = createSubtypeQuery(parseWhiley("{(any & any), (any & any)}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_4299() { testInvalid(test_4299_query); }

		private static final SubtypeQuery test_4300_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("!int"));
		@Test public void test_4300() { testInvalid(test_4300_query); }

		private static final SubtypeQuery test_4301_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("(any | any)"));
		@Test public void test_4301() { testInvalid(test_4301_query); }

		private static final SubtypeQuery test_4302_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("(any & any)"));
		@Test public void test_4302() { testInvalid(test_4302_query); }

		private static final SubtypeQuery test_4303_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{{int, int}}"));
		@Test public void test_4303() { testInvalid(test_4303_query); }

		private static final SubtypeQuery test_4304_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("!(int | int)"));
		@Test public void test_4304() { testInvalid(test_4304_query); }

		private static final SubtypeQuery test_4305_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_4305() { testInvalid(test_4305_query); }

		private static final SubtypeQuery test_4306_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_4306() { testInvalid(test_4306_query); }

		private static final SubtypeQuery test_4307_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{{any}, int}"));
		@Test public void test_4307() { testInvalid(test_4307_query); }

		private static final SubtypeQuery test_4308_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_4308() { testInvalid(test_4308_query); }

		private static final SubtypeQuery test_4309_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{(any | int), int}"));
		@Test public void test_4309() { testInvalid(test_4309_query); }

		private static final SubtypeQuery test_4310_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_4310() { testInvalid(test_4310_query); }

		private static final SubtypeQuery test_4311_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{!any, {int}}"));
		@Test public void test_4311() { testValid(test_4311_query); }

		private static final SubtypeQuery test_4312_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_4312() { testInvalid(test_4312_query); }

		private static final SubtypeQuery test_4313_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_4313() { testValid(test_4313_query); }

		private static final SubtypeQuery test_4314_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{any, !any}"));
		@Test public void test_4314() { testValid(test_4314_query); }

		private static final SubtypeQuery test_4315_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{{any}, !int}"));
		@Test public void test_4315() { testInvalid(test_4315_query); }

		private static final SubtypeQuery test_4316_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_4316() { testInvalid(test_4316_query); }

		private static final SubtypeQuery test_4317_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_4317() { testInvalid(test_4317_query); }

		private static final SubtypeQuery test_4318_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_4318() { testValid(test_4318_query); }

		private static final SubtypeQuery test_4319_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_4319() { testInvalid(test_4319_query); }

		private static final SubtypeQuery test_4320_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_4320() { testInvalid(test_4320_query); }

		private static final SubtypeQuery test_4321_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_4321() { testValid(test_4321_query); }

		private static final SubtypeQuery test_4322_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_4322() { testValid(test_4322_query); }

		private static final SubtypeQuery test_4323_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_4323() { testInvalid(test_4323_query); }

		private static final SubtypeQuery test_4324_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_4324() { testValid(test_4324_query); }

		private static final SubtypeQuery test_4325_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_4325() { testValid(test_4325_query); }

		private static final SubtypeQuery test_4326_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_4326() { testInvalid(test_4326_query); }

		private static final SubtypeQuery test_4327_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_4327() { testInvalid(test_4327_query); }

		private static final SubtypeQuery test_4328_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_4328() { testInvalid(test_4328_query); }

		private static final SubtypeQuery test_4329_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_4329() { testValid(test_4329_query); }

		private static final SubtypeQuery test_4330_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_4330() { testInvalid(test_4330_query); }

		private static final SubtypeQuery test_4331_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_4331() { testValid(test_4331_query); }

		private static final SubtypeQuery test_4332_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_4332() { testInvalid(test_4332_query); }

		private static final SubtypeQuery test_4333_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_4333() { testValid(test_4333_query); }

		private static final SubtypeQuery test_4334_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_4334() { testInvalid(test_4334_query); }

		private static final SubtypeQuery test_4335_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_4335() { testInvalid(test_4335_query); }

		private static final SubtypeQuery test_4336_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_4336() { testInvalid(test_4336_query); }

		private static final SubtypeQuery test_4337_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_4337() { testValid(test_4337_query); }

		private static final SubtypeQuery test_4338_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_4338() { testInvalid(test_4338_query); }

		private static final SubtypeQuery test_4339_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_4339() { testInvalid(test_4339_query); }

		private static final SubtypeQuery test_4340_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_4340() { testInvalid(test_4340_query); }

		private static final SubtypeQuery test_4341_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_4341() { testValid(test_4341_query); }

		private static final SubtypeQuery test_4342_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_4342() { testInvalid(test_4342_query); }

		private static final SubtypeQuery test_4343_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_4343() { testValid(test_4343_query); }

		private static final SubtypeQuery test_4344_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_4344() { testInvalid(test_4344_query); }

		private static final SubtypeQuery test_4345_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_4345() { testInvalid(test_4345_query); }

		private static final SubtypeQuery test_4346_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_4346() { testInvalid(test_4346_query); }

		private static final SubtypeQuery test_4347_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_4347() { testValid(test_4347_query); }

		private static final SubtypeQuery test_4348_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_4348() { testInvalid(test_4348_query); }

		private static final SubtypeQuery test_4349_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_4349() { testInvalid(test_4349_query); }

		private static final SubtypeQuery test_4350_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_4350() { testInvalid(test_4350_query); }

		private static final SubtypeQuery test_4351_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_4351() { testInvalid(test_4351_query); }

		private static final SubtypeQuery test_4352_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_4352() { testValid(test_4352_query); }

		private static final SubtypeQuery test_4353_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_4353() { testInvalid(test_4353_query); }

		private static final SubtypeQuery test_4354_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_4354() { testInvalid(test_4354_query); }

		private static final SubtypeQuery test_4355_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_4355() { testValid(test_4355_query); }

		private static final SubtypeQuery test_4356_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("(!any | any)"));
		@Test public void test_4356() { testInvalid(test_4356_query); }

		private static final SubtypeQuery test_4357_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("({int, any} | any)"));
		@Test public void test_4357() { testInvalid(test_4357_query); }

		private static final SubtypeQuery test_4358_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("({any, int} | any)"));
		@Test public void test_4358() { testInvalid(test_4358_query); }

		private static final SubtypeQuery test_4359_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("((int & int) | any)"));
		@Test public void test_4359() { testInvalid(test_4359_query); }

		private static final SubtypeQuery test_4360_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("({int, int} | int)"));
		@Test public void test_4360() { testInvalid(test_4360_query); }

		private static final SubtypeQuery test_4361_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("((any | any) | int)"));
		@Test public void test_4361() { testInvalid(test_4361_query); }

		private static final SubtypeQuery test_4362_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("((int | any) | int)"));
		@Test public void test_4362() { testInvalid(test_4362_query); }

		private static final SubtypeQuery test_4363_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("(any | {any})"));
		@Test public void test_4363() { testInvalid(test_4363_query); }

		private static final SubtypeQuery test_4364_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("(int | {any})"));
		@Test public void test_4364() { testInvalid(test_4364_query); }

		private static final SubtypeQuery test_4365_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_4365() { testInvalid(test_4365_query); }

		private static final SubtypeQuery test_4366_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("(any | {int})"));
		@Test public void test_4366() { testInvalid(test_4366_query); }

		private static final SubtypeQuery test_4367_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_4367() { testInvalid(test_4367_query); }

		private static final SubtypeQuery test_4368_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("(!int | !any)"));
		@Test public void test_4368() { testInvalid(test_4368_query); }

		private static final SubtypeQuery test_4369_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_4369() { testValid(test_4369_query); }

		private static final SubtypeQuery test_4370_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_4370() { testInvalid(test_4370_query); }

		private static final SubtypeQuery test_4371_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("({int} | !int)"));
		@Test public void test_4371() { testInvalid(test_4371_query); }

		private static final SubtypeQuery test_4372_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("(!any | !int)"));
		@Test public void test_4372() { testInvalid(test_4372_query); }

		private static final SubtypeQuery test_4373_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_4373() { testInvalid(test_4373_query); }

		private static final SubtypeQuery test_4374_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_4374() { testInvalid(test_4374_query); }

		private static final SubtypeQuery test_4375_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_4375() { testInvalid(test_4375_query); }

		private static final SubtypeQuery test_4376_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_4376() { testInvalid(test_4376_query); }

		private static final SubtypeQuery test_4377_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_4377() { testInvalid(test_4377_query); }

		private static final SubtypeQuery test_4378_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_4378() { testInvalid(test_4378_query); }

		private static final SubtypeQuery test_4379_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_4379() { testInvalid(test_4379_query); }

		private static final SubtypeQuery test_4380_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_4380() { testInvalid(test_4380_query); }

		private static final SubtypeQuery test_4381_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_4381() { testInvalid(test_4381_query); }

		private static final SubtypeQuery test_4382_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_4382() { testInvalid(test_4382_query); }

		private static final SubtypeQuery test_4383_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_4383() { testInvalid(test_4383_query); }

		private static final SubtypeQuery test_4384_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_4384() { testInvalid(test_4384_query); }

		private static final SubtypeQuery test_4385_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_4385() { testInvalid(test_4385_query); }

		private static final SubtypeQuery test_4386_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_4386() { testInvalid(test_4386_query); }

		private static final SubtypeQuery test_4387_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("(int | (any | int))"));
		@Test public void test_4387() { testInvalid(test_4387_query); }

		private static final SubtypeQuery test_4388_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_4388() { testInvalid(test_4388_query); }

		private static final SubtypeQuery test_4389_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_4389() { testInvalid(test_4389_query); }

		private static final SubtypeQuery test_4390_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_4390() { testInvalid(test_4390_query); }

		private static final SubtypeQuery test_4391_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_4391() { testInvalid(test_4391_query); }

		private static final SubtypeQuery test_4392_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_4392() { testInvalid(test_4392_query); }

		private static final SubtypeQuery test_4393_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_4393() { testInvalid(test_4393_query); }

		private static final SubtypeQuery test_4394_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("(int | (any & any))"));
		@Test public void test_4394() { testInvalid(test_4394_query); }

		private static final SubtypeQuery test_4395_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_4395() { testInvalid(test_4395_query); }

		private static final SubtypeQuery test_4396_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_4396() { testInvalid(test_4396_query); }

		private static final SubtypeQuery test_4397_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_4397() { testInvalid(test_4397_query); }

		private static final SubtypeQuery test_4398_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_4398() { testInvalid(test_4398_query); }

		private static final SubtypeQuery test_4399_query = createSubtypeQuery(parseWhiley("{(int & int), (any & any)}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_4399() { testInvalid(test_4399_query); }

		private static final SubtypeQuery test_4400_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("!int"));
		@Test public void test_4400() { testInvalid(test_4400_query); }

		private static final SubtypeQuery test_4401_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("(any | any)"));
		@Test public void test_4401() { testInvalid(test_4401_query); }

		private static final SubtypeQuery test_4402_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("(any & any)"));
		@Test public void test_4402() { testInvalid(test_4402_query); }

		private static final SubtypeQuery test_4403_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{{int, int}}"));
		@Test public void test_4403() { testInvalid(test_4403_query); }

		private static final SubtypeQuery test_4404_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("!(int | int)"));
		@Test public void test_4404() { testInvalid(test_4404_query); }

		private static final SubtypeQuery test_4405_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_4405() { testInvalid(test_4405_query); }

		private static final SubtypeQuery test_4406_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_4406() { testInvalid(test_4406_query); }

		private static final SubtypeQuery test_4407_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{{any}, int}"));
		@Test public void test_4407() { testInvalid(test_4407_query); }

		private static final SubtypeQuery test_4408_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_4408() { testInvalid(test_4408_query); }

		private static final SubtypeQuery test_4409_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{(any | int), int}"));
		@Test public void test_4409() { testInvalid(test_4409_query); }

		private static final SubtypeQuery test_4410_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_4410() { testInvalid(test_4410_query); }

		private static final SubtypeQuery test_4411_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{!any, {int}}"));
		@Test public void test_4411() { testValid(test_4411_query); }

		private static final SubtypeQuery test_4412_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_4412() { testInvalid(test_4412_query); }

		private static final SubtypeQuery test_4413_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_4413() { testInvalid(test_4413_query); }

		private static final SubtypeQuery test_4414_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{any, !any}"));
		@Test public void test_4414() { testValid(test_4414_query); }

		private static final SubtypeQuery test_4415_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{{any}, !int}"));
		@Test public void test_4415() { testInvalid(test_4415_query); }

		private static final SubtypeQuery test_4416_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_4416() { testInvalid(test_4416_query); }

		private static final SubtypeQuery test_4417_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_4417() { testInvalid(test_4417_query); }

		private static final SubtypeQuery test_4418_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_4418() { testInvalid(test_4418_query); }

		private static final SubtypeQuery test_4419_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_4419() { testInvalid(test_4419_query); }

		private static final SubtypeQuery test_4420_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_4420() { testInvalid(test_4420_query); }

		private static final SubtypeQuery test_4421_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_4421() { testInvalid(test_4421_query); }

		private static final SubtypeQuery test_4422_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_4422() { testInvalid(test_4422_query); }

		private static final SubtypeQuery test_4423_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_4423() { testInvalid(test_4423_query); }

		private static final SubtypeQuery test_4424_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_4424() { testInvalid(test_4424_query); }

		private static final SubtypeQuery test_4425_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_4425() { testInvalid(test_4425_query); }

		private static final SubtypeQuery test_4426_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_4426() { testInvalid(test_4426_query); }

		private static final SubtypeQuery test_4427_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_4427() { testInvalid(test_4427_query); }

		private static final SubtypeQuery test_4428_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_4428() { testInvalid(test_4428_query); }

		private static final SubtypeQuery test_4429_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_4429() { testValid(test_4429_query); }

		private static final SubtypeQuery test_4430_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_4430() { testInvalid(test_4430_query); }

		private static final SubtypeQuery test_4431_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_4431() { testInvalid(test_4431_query); }

		private static final SubtypeQuery test_4432_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_4432() { testInvalid(test_4432_query); }

		private static final SubtypeQuery test_4433_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_4433() { testInvalid(test_4433_query); }

		private static final SubtypeQuery test_4434_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_4434() { testInvalid(test_4434_query); }

		private static final SubtypeQuery test_4435_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_4435() { testInvalid(test_4435_query); }

		private static final SubtypeQuery test_4436_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_4436() { testInvalid(test_4436_query); }

		private static final SubtypeQuery test_4437_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_4437() { testInvalid(test_4437_query); }

		private static final SubtypeQuery test_4438_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_4438() { testInvalid(test_4438_query); }

		private static final SubtypeQuery test_4439_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_4439() { testInvalid(test_4439_query); }

		private static final SubtypeQuery test_4440_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_4440() { testInvalid(test_4440_query); }

		private static final SubtypeQuery test_4441_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_4441() { testValid(test_4441_query); }

		private static final SubtypeQuery test_4442_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_4442() { testInvalid(test_4442_query); }

		private static final SubtypeQuery test_4443_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_4443() { testInvalid(test_4443_query); }

		private static final SubtypeQuery test_4444_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_4444() { testValid(test_4444_query); }

		private static final SubtypeQuery test_4445_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_4445() { testInvalid(test_4445_query); }

		private static final SubtypeQuery test_4446_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_4446() { testInvalid(test_4446_query); }

		private static final SubtypeQuery test_4447_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_4447() { testInvalid(test_4447_query); }

		private static final SubtypeQuery test_4448_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_4448() { testInvalid(test_4448_query); }

		private static final SubtypeQuery test_4449_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_4449() { testValid(test_4449_query); }

		private static final SubtypeQuery test_4450_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_4450() { testInvalid(test_4450_query); }

		private static final SubtypeQuery test_4451_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_4451() { testInvalid(test_4451_query); }

		private static final SubtypeQuery test_4452_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_4452() { testInvalid(test_4452_query); }

		private static final SubtypeQuery test_4453_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_4453() { testInvalid(test_4453_query); }

		private static final SubtypeQuery test_4454_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_4454() { testInvalid(test_4454_query); }

		private static final SubtypeQuery test_4455_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_4455() { testInvalid(test_4455_query); }

		private static final SubtypeQuery test_4456_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("(!any | any)"));
		@Test public void test_4456() { testInvalid(test_4456_query); }

		private static final SubtypeQuery test_4457_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("({int, any} | any)"));
		@Test public void test_4457() { testInvalid(test_4457_query); }

		private static final SubtypeQuery test_4458_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("({any, int} | any)"));
		@Test public void test_4458() { testInvalid(test_4458_query); }

		private static final SubtypeQuery test_4459_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("((int & int) | any)"));
		@Test public void test_4459() { testInvalid(test_4459_query); }

		private static final SubtypeQuery test_4460_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("({int, int} | int)"));
		@Test public void test_4460() { testInvalid(test_4460_query); }

		private static final SubtypeQuery test_4461_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("((any | any) | int)"));
		@Test public void test_4461() { testInvalid(test_4461_query); }

		private static final SubtypeQuery test_4462_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("((int | any) | int)"));
		@Test public void test_4462() { testInvalid(test_4462_query); }

		private static final SubtypeQuery test_4463_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("(any | {any})"));
		@Test public void test_4463() { testInvalid(test_4463_query); }

		private static final SubtypeQuery test_4464_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("(int | {any})"));
		@Test public void test_4464() { testInvalid(test_4464_query); }

		private static final SubtypeQuery test_4465_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_4465() { testInvalid(test_4465_query); }

		private static final SubtypeQuery test_4466_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("(any | {int})"));
		@Test public void test_4466() { testInvalid(test_4466_query); }

		private static final SubtypeQuery test_4467_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_4467() { testInvalid(test_4467_query); }

		private static final SubtypeQuery test_4468_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("(!int | !any)"));
		@Test public void test_4468() { testInvalid(test_4468_query); }

		private static final SubtypeQuery test_4469_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_4469() { testInvalid(test_4469_query); }

		private static final SubtypeQuery test_4470_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_4470() { testInvalid(test_4470_query); }

		private static final SubtypeQuery test_4471_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("({int} | !int)"));
		@Test public void test_4471() { testInvalid(test_4471_query); }

		private static final SubtypeQuery test_4472_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("(!any | !int)"));
		@Test public void test_4472() { testInvalid(test_4472_query); }

		private static final SubtypeQuery test_4473_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_4473() { testInvalid(test_4473_query); }

		private static final SubtypeQuery test_4474_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_4474() { testInvalid(test_4474_query); }

		private static final SubtypeQuery test_4475_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_4475() { testInvalid(test_4475_query); }

		private static final SubtypeQuery test_4476_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_4476() { testInvalid(test_4476_query); }

		private static final SubtypeQuery test_4477_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_4477() { testInvalid(test_4477_query); }

		private static final SubtypeQuery test_4478_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_4478() { testInvalid(test_4478_query); }

		private static final SubtypeQuery test_4479_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_4479() { testInvalid(test_4479_query); }

		private static final SubtypeQuery test_4480_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_4480() { testInvalid(test_4480_query); }

		private static final SubtypeQuery test_4481_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_4481() { testInvalid(test_4481_query); }

		private static final SubtypeQuery test_4482_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_4482() { testInvalid(test_4482_query); }

		private static final SubtypeQuery test_4483_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_4483() { testInvalid(test_4483_query); }

		private static final SubtypeQuery test_4484_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_4484() { testInvalid(test_4484_query); }

		private static final SubtypeQuery test_4485_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_4485() { testInvalid(test_4485_query); }

		private static final SubtypeQuery test_4486_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_4486() { testInvalid(test_4486_query); }

		private static final SubtypeQuery test_4487_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("(int | (any | int))"));
		@Test public void test_4487() { testInvalid(test_4487_query); }

		private static final SubtypeQuery test_4488_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_4488() { testInvalid(test_4488_query); }

		private static final SubtypeQuery test_4489_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_4489() { testInvalid(test_4489_query); }

		private static final SubtypeQuery test_4490_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_4490() { testInvalid(test_4490_query); }

		private static final SubtypeQuery test_4491_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_4491() { testInvalid(test_4491_query); }

		private static final SubtypeQuery test_4492_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_4492() { testInvalid(test_4492_query); }

		private static final SubtypeQuery test_4493_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_4493() { testInvalid(test_4493_query); }

		private static final SubtypeQuery test_4494_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("(int | (any & any))"));
		@Test public void test_4494() { testInvalid(test_4494_query); }

		private static final SubtypeQuery test_4495_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_4495() { testInvalid(test_4495_query); }

		private static final SubtypeQuery test_4496_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_4496() { testInvalid(test_4496_query); }

		private static final SubtypeQuery test_4497_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_4497() { testInvalid(test_4497_query); }

		private static final SubtypeQuery test_4498_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_4498() { testInvalid(test_4498_query); }

		private static final SubtypeQuery test_4499_query = createSubtypeQuery(parseWhiley("{{int}, (int & any)}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_4499() { testInvalid(test_4499_query); }

		private static final SubtypeQuery test_4500_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("!int"));
		@Test public void test_4500() { testInvalid(test_4500_query); }

		private static final SubtypeQuery test_4501_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("(any | any)"));
		@Test public void test_4501() { testInvalid(test_4501_query); }

		private static final SubtypeQuery test_4502_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("(any & any)"));
		@Test public void test_4502() { testInvalid(test_4502_query); }

		private static final SubtypeQuery test_4503_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{{int, int}}"));
		@Test public void test_4503() { testInvalid(test_4503_query); }

		private static final SubtypeQuery test_4504_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("!(int | int)"));
		@Test public void test_4504() { testInvalid(test_4504_query); }

		private static final SubtypeQuery test_4505_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_4505() { testInvalid(test_4505_query); }

		private static final SubtypeQuery test_4506_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_4506() { testInvalid(test_4506_query); }

		private static final SubtypeQuery test_4507_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{{any}, int}"));
		@Test public void test_4507() { testInvalid(test_4507_query); }

		private static final SubtypeQuery test_4508_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_4508() { testInvalid(test_4508_query); }

		private static final SubtypeQuery test_4509_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{(any | int), int}"));
		@Test public void test_4509() { testInvalid(test_4509_query); }

		private static final SubtypeQuery test_4510_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_4510() { testInvalid(test_4510_query); }

		private static final SubtypeQuery test_4511_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{!any, {int}}"));
		@Test public void test_4511() { testValid(test_4511_query); }

		private static final SubtypeQuery test_4512_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_4512() { testInvalid(test_4512_query); }

		private static final SubtypeQuery test_4513_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_4513() { testInvalid(test_4513_query); }

		private static final SubtypeQuery test_4514_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{any, !any}"));
		@Test public void test_4514() { testValid(test_4514_query); }

		private static final SubtypeQuery test_4515_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{{any}, !int}"));
		@Test public void test_4515() { testInvalid(test_4515_query); }

		private static final SubtypeQuery test_4516_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_4516() { testInvalid(test_4516_query); }

		private static final SubtypeQuery test_4517_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_4517() { testInvalid(test_4517_query); }

		private static final SubtypeQuery test_4518_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_4518() { testInvalid(test_4518_query); }

		private static final SubtypeQuery test_4519_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_4519() { testInvalid(test_4519_query); }

		private static final SubtypeQuery test_4520_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_4520() { testInvalid(test_4520_query); }

		private static final SubtypeQuery test_4521_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_4521() { testInvalid(test_4521_query); }

		private static final SubtypeQuery test_4522_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_4522() { testInvalid(test_4522_query); }

		private static final SubtypeQuery test_4523_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_4523() { testInvalid(test_4523_query); }

		private static final SubtypeQuery test_4524_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_4524() { testInvalid(test_4524_query); }

		private static final SubtypeQuery test_4525_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_4525() { testInvalid(test_4525_query); }

		private static final SubtypeQuery test_4526_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_4526() { testInvalid(test_4526_query); }

		private static final SubtypeQuery test_4527_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_4527() { testInvalid(test_4527_query); }

		private static final SubtypeQuery test_4528_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_4528() { testInvalid(test_4528_query); }

		private static final SubtypeQuery test_4529_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_4529() { testValid(test_4529_query); }

		private static final SubtypeQuery test_4530_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_4530() { testInvalid(test_4530_query); }

		private static final SubtypeQuery test_4531_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_4531() { testInvalid(test_4531_query); }

		private static final SubtypeQuery test_4532_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_4532() { testInvalid(test_4532_query); }

		private static final SubtypeQuery test_4533_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_4533() { testInvalid(test_4533_query); }

		private static final SubtypeQuery test_4534_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_4534() { testInvalid(test_4534_query); }

		private static final SubtypeQuery test_4535_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_4535() { testInvalid(test_4535_query); }

		private static final SubtypeQuery test_4536_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_4536() { testInvalid(test_4536_query); }

		private static final SubtypeQuery test_4537_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_4537() { testInvalid(test_4537_query); }

		private static final SubtypeQuery test_4538_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_4538() { testInvalid(test_4538_query); }

		private static final SubtypeQuery test_4539_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_4539() { testInvalid(test_4539_query); }

		private static final SubtypeQuery test_4540_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_4540() { testInvalid(test_4540_query); }

		private static final SubtypeQuery test_4541_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_4541() { testValid(test_4541_query); }

		private static final SubtypeQuery test_4542_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_4542() { testInvalid(test_4542_query); }

		private static final SubtypeQuery test_4543_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_4543() { testInvalid(test_4543_query); }

		private static final SubtypeQuery test_4544_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_4544() { testInvalid(test_4544_query); }

		private static final SubtypeQuery test_4545_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_4545() { testValid(test_4545_query); }

		private static final SubtypeQuery test_4546_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_4546() { testInvalid(test_4546_query); }

		private static final SubtypeQuery test_4547_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_4547() { testInvalid(test_4547_query); }

		private static final SubtypeQuery test_4548_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_4548() { testInvalid(test_4548_query); }

		private static final SubtypeQuery test_4549_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_4549() { testInvalid(test_4549_query); }

		private static final SubtypeQuery test_4550_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_4550() { testInvalid(test_4550_query); }

		private static final SubtypeQuery test_4551_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_4551() { testInvalid(test_4551_query); }

		private static final SubtypeQuery test_4552_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_4552() { testInvalid(test_4552_query); }

		private static final SubtypeQuery test_4553_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_4553() { testInvalid(test_4553_query); }

		private static final SubtypeQuery test_4554_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_4554() { testValid(test_4554_query); }

		private static final SubtypeQuery test_4555_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_4555() { testInvalid(test_4555_query); }

		private static final SubtypeQuery test_4556_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("(!any | any)"));
		@Test public void test_4556() { testInvalid(test_4556_query); }

		private static final SubtypeQuery test_4557_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("({int, any} | any)"));
		@Test public void test_4557() { testInvalid(test_4557_query); }

		private static final SubtypeQuery test_4558_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("({any, int} | any)"));
		@Test public void test_4558() { testInvalid(test_4558_query); }

		private static final SubtypeQuery test_4559_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("((int & int) | any)"));
		@Test public void test_4559() { testInvalid(test_4559_query); }

		private static final SubtypeQuery test_4560_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("({int, int} | int)"));
		@Test public void test_4560() { testInvalid(test_4560_query); }

		private static final SubtypeQuery test_4561_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("((any | any) | int)"));
		@Test public void test_4561() { testInvalid(test_4561_query); }

		private static final SubtypeQuery test_4562_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("((int | any) | int)"));
		@Test public void test_4562() { testInvalid(test_4562_query); }

		private static final SubtypeQuery test_4563_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("(any | {any})"));
		@Test public void test_4563() { testInvalid(test_4563_query); }

		private static final SubtypeQuery test_4564_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("(int | {any})"));
		@Test public void test_4564() { testInvalid(test_4564_query); }

		private static final SubtypeQuery test_4565_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_4565() { testInvalid(test_4565_query); }

		private static final SubtypeQuery test_4566_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("(any | {int})"));
		@Test public void test_4566() { testInvalid(test_4566_query); }

		private static final SubtypeQuery test_4567_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_4567() { testInvalid(test_4567_query); }

		private static final SubtypeQuery test_4568_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("(!int | !any)"));
		@Test public void test_4568() { testInvalid(test_4568_query); }

		private static final SubtypeQuery test_4569_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_4569() { testInvalid(test_4569_query); }

		private static final SubtypeQuery test_4570_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_4570() { testInvalid(test_4570_query); }

		private static final SubtypeQuery test_4571_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("({int} | !int)"));
		@Test public void test_4571() { testInvalid(test_4571_query); }

		private static final SubtypeQuery test_4572_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("(!any | !int)"));
		@Test public void test_4572() { testInvalid(test_4572_query); }

		private static final SubtypeQuery test_4573_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_4573() { testInvalid(test_4573_query); }

		private static final SubtypeQuery test_4574_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_4574() { testInvalid(test_4574_query); }

		private static final SubtypeQuery test_4575_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_4575() { testInvalid(test_4575_query); }

		private static final SubtypeQuery test_4576_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_4576() { testInvalid(test_4576_query); }

		private static final SubtypeQuery test_4577_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_4577() { testInvalid(test_4577_query); }

		private static final SubtypeQuery test_4578_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_4578() { testInvalid(test_4578_query); }

		private static final SubtypeQuery test_4579_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_4579() { testInvalid(test_4579_query); }

		private static final SubtypeQuery test_4580_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_4580() { testInvalid(test_4580_query); }

		private static final SubtypeQuery test_4581_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_4581() { testInvalid(test_4581_query); }

		private static final SubtypeQuery test_4582_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_4582() { testInvalid(test_4582_query); }

		private static final SubtypeQuery test_4583_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_4583() { testInvalid(test_4583_query); }

		private static final SubtypeQuery test_4584_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_4584() { testInvalid(test_4584_query); }

		private static final SubtypeQuery test_4585_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_4585() { testInvalid(test_4585_query); }

		private static final SubtypeQuery test_4586_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_4586() { testInvalid(test_4586_query); }

		private static final SubtypeQuery test_4587_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("(int | (any | int))"));
		@Test public void test_4587() { testInvalid(test_4587_query); }

		private static final SubtypeQuery test_4588_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_4588() { testInvalid(test_4588_query); }

		private static final SubtypeQuery test_4589_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_4589() { testInvalid(test_4589_query); }

		private static final SubtypeQuery test_4590_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_4590() { testInvalid(test_4590_query); }

		private static final SubtypeQuery test_4591_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_4591() { testInvalid(test_4591_query); }

		private static final SubtypeQuery test_4592_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_4592() { testInvalid(test_4592_query); }

		private static final SubtypeQuery test_4593_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_4593() { testInvalid(test_4593_query); }

		private static final SubtypeQuery test_4594_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("(int | (any & any))"));
		@Test public void test_4594() { testInvalid(test_4594_query); }

		private static final SubtypeQuery test_4595_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_4595() { testInvalid(test_4595_query); }

		private static final SubtypeQuery test_4596_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_4596() { testInvalid(test_4596_query); }

		private static final SubtypeQuery test_4597_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_4597() { testInvalid(test_4597_query); }

		private static final SubtypeQuery test_4598_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_4598() { testInvalid(test_4598_query); }

		private static final SubtypeQuery test_4599_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & any)}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_4599() { testInvalid(test_4599_query); }

		private static final SubtypeQuery test_4600_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("!int"));
		@Test public void test_4600() { testInvalid(test_4600_query); }

		private static final SubtypeQuery test_4601_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("(any | any)"));
		@Test public void test_4601() { testInvalid(test_4601_query); }

		private static final SubtypeQuery test_4602_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("(any & any)"));
		@Test public void test_4602() { testInvalid(test_4602_query); }

		private static final SubtypeQuery test_4603_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{{int, int}}"));
		@Test public void test_4603() { testInvalid(test_4603_query); }

		private static final SubtypeQuery test_4604_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("!(int | int)"));
		@Test public void test_4604() { testInvalid(test_4604_query); }

		private static final SubtypeQuery test_4605_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_4605() { testInvalid(test_4605_query); }

		private static final SubtypeQuery test_4606_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_4606() { testInvalid(test_4606_query); }

		private static final SubtypeQuery test_4607_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{{any}, int}"));
		@Test public void test_4607() { testValid(test_4607_query); }

		private static final SubtypeQuery test_4608_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_4608() { testValid(test_4608_query); }

		private static final SubtypeQuery test_4609_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{(any | int), int}"));
		@Test public void test_4609() { testValid(test_4609_query); }

		private static final SubtypeQuery test_4610_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_4610() { testInvalid(test_4610_query); }

		private static final SubtypeQuery test_4611_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{!any, {int}}"));
		@Test public void test_4611() { testValid(test_4611_query); }

		private static final SubtypeQuery test_4612_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_4612() { testInvalid(test_4612_query); }

		private static final SubtypeQuery test_4613_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_4613() { testInvalid(test_4613_query); }

		private static final SubtypeQuery test_4614_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{any, !any}"));
		@Test public void test_4614() { testValid(test_4614_query); }

		private static final SubtypeQuery test_4615_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{{any}, !int}"));
		@Test public void test_4615() { testInvalid(test_4615_query); }

		private static final SubtypeQuery test_4616_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_4616() { testInvalid(test_4616_query); }

		private static final SubtypeQuery test_4617_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_4617() { testInvalid(test_4617_query); }

		private static final SubtypeQuery test_4618_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_4618() { testInvalid(test_4618_query); }

		private static final SubtypeQuery test_4619_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_4619() { testInvalid(test_4619_query); }

		private static final SubtypeQuery test_4620_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_4620() { testInvalid(test_4620_query); }

		private static final SubtypeQuery test_4621_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_4621() { testInvalid(test_4621_query); }

		private static final SubtypeQuery test_4622_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_4622() { testInvalid(test_4622_query); }

		private static final SubtypeQuery test_4623_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_4623() { testInvalid(test_4623_query); }

		private static final SubtypeQuery test_4624_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_4624() { testInvalid(test_4624_query); }

		private static final SubtypeQuery test_4625_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_4625() { testInvalid(test_4625_query); }

		private static final SubtypeQuery test_4626_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_4626() { testInvalid(test_4626_query); }

		private static final SubtypeQuery test_4627_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_4627() { testInvalid(test_4627_query); }

		private static final SubtypeQuery test_4628_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_4628() { testInvalid(test_4628_query); }

		private static final SubtypeQuery test_4629_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_4629() { testValid(test_4629_query); }

		private static final SubtypeQuery test_4630_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_4630() { testInvalid(test_4630_query); }

		private static final SubtypeQuery test_4631_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_4631() { testInvalid(test_4631_query); }

		private static final SubtypeQuery test_4632_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_4632() { testInvalid(test_4632_query); }

		private static final SubtypeQuery test_4633_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_4633() { testInvalid(test_4633_query); }

		private static final SubtypeQuery test_4634_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_4634() { testInvalid(test_4634_query); }

		private static final SubtypeQuery test_4635_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_4635() { testInvalid(test_4635_query); }

		private static final SubtypeQuery test_4636_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_4636() { testInvalid(test_4636_query); }

		private static final SubtypeQuery test_4637_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_4637() { testValid(test_4637_query); }

		private static final SubtypeQuery test_4638_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_4638() { testValid(test_4638_query); }

		private static final SubtypeQuery test_4639_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_4639() { testInvalid(test_4639_query); }

		private static final SubtypeQuery test_4640_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_4640() { testInvalid(test_4640_query); }

		private static final SubtypeQuery test_4641_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_4641() { testValid(test_4641_query); }

		private static final SubtypeQuery test_4642_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_4642() { testInvalid(test_4642_query); }

		private static final SubtypeQuery test_4643_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_4643() { testInvalid(test_4643_query); }

		private static final SubtypeQuery test_4644_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_4644() { testValid(test_4644_query); }

		private static final SubtypeQuery test_4645_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_4645() { testValid(test_4645_query); }

		private static final SubtypeQuery test_4646_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_4646() { testValid(test_4646_query); }

		private static final SubtypeQuery test_4647_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_4647() { testValid(test_4647_query); }

		private static final SubtypeQuery test_4648_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_4648() { testValid(test_4648_query); }

		private static final SubtypeQuery test_4649_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_4649() { testValid(test_4649_query); }

		private static final SubtypeQuery test_4650_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_4650() { testValid(test_4650_query); }

		private static final SubtypeQuery test_4651_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_4651() { testValid(test_4651_query); }

		private static final SubtypeQuery test_4652_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_4652() { testValid(test_4652_query); }

		private static final SubtypeQuery test_4653_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_4653() { testValid(test_4653_query); }

		private static final SubtypeQuery test_4654_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_4654() { testValid(test_4654_query); }

		private static final SubtypeQuery test_4655_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_4655() { testValid(test_4655_query); }

		private static final SubtypeQuery test_4656_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("(!any | any)"));
		@Test public void test_4656() { testInvalid(test_4656_query); }

		private static final SubtypeQuery test_4657_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("({int, any} | any)"));
		@Test public void test_4657() { testInvalid(test_4657_query); }

		private static final SubtypeQuery test_4658_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("({any, int} | any)"));
		@Test public void test_4658() { testInvalid(test_4658_query); }

		private static final SubtypeQuery test_4659_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("((int & int) | any)"));
		@Test public void test_4659() { testInvalid(test_4659_query); }

		private static final SubtypeQuery test_4660_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("({int, int} | int)"));
		@Test public void test_4660() { testInvalid(test_4660_query); }

		private static final SubtypeQuery test_4661_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("((any | any) | int)"));
		@Test public void test_4661() { testInvalid(test_4661_query); }

		private static final SubtypeQuery test_4662_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("((int | any) | int)"));
		@Test public void test_4662() { testInvalid(test_4662_query); }

		private static final SubtypeQuery test_4663_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("(any | {any})"));
		@Test public void test_4663() { testInvalid(test_4663_query); }

		private static final SubtypeQuery test_4664_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("(int | {any})"));
		@Test public void test_4664() { testInvalid(test_4664_query); }

		private static final SubtypeQuery test_4665_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_4665() { testInvalid(test_4665_query); }

		private static final SubtypeQuery test_4666_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("(any | {int})"));
		@Test public void test_4666() { testInvalid(test_4666_query); }

		private static final SubtypeQuery test_4667_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_4667() { testInvalid(test_4667_query); }

		private static final SubtypeQuery test_4668_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("(!int | !any)"));
		@Test public void test_4668() { testInvalid(test_4668_query); }

		private static final SubtypeQuery test_4669_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_4669() { testInvalid(test_4669_query); }

		private static final SubtypeQuery test_4670_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_4670() { testInvalid(test_4670_query); }

		private static final SubtypeQuery test_4671_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("({int} | !int)"));
		@Test public void test_4671() { testInvalid(test_4671_query); }

		private static final SubtypeQuery test_4672_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("(!any | !int)"));
		@Test public void test_4672() { testInvalid(test_4672_query); }

		private static final SubtypeQuery test_4673_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_4673() { testInvalid(test_4673_query); }

		private static final SubtypeQuery test_4674_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_4674() { testInvalid(test_4674_query); }

		private static final SubtypeQuery test_4675_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_4675() { testInvalid(test_4675_query); }

		private static final SubtypeQuery test_4676_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_4676() { testValid(test_4676_query); }

		private static final SubtypeQuery test_4677_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_4677() { testInvalid(test_4677_query); }

		private static final SubtypeQuery test_4678_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_4678() { testInvalid(test_4678_query); }

		private static final SubtypeQuery test_4679_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_4679() { testInvalid(test_4679_query); }

		private static final SubtypeQuery test_4680_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_4680() { testInvalid(test_4680_query); }

		private static final SubtypeQuery test_4681_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_4681() { testInvalid(test_4681_query); }

		private static final SubtypeQuery test_4682_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_4682() { testInvalid(test_4682_query); }

		private static final SubtypeQuery test_4683_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_4683() { testInvalid(test_4683_query); }

		private static final SubtypeQuery test_4684_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_4684() { testInvalid(test_4684_query); }

		private static final SubtypeQuery test_4685_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_4685() { testInvalid(test_4685_query); }

		private static final SubtypeQuery test_4686_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_4686() { testInvalid(test_4686_query); }

		private static final SubtypeQuery test_4687_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("(int | (any | int))"));
		@Test public void test_4687() { testInvalid(test_4687_query); }

		private static final SubtypeQuery test_4688_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_4688() { testInvalid(test_4688_query); }

		private static final SubtypeQuery test_4689_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_4689() { testInvalid(test_4689_query); }

		private static final SubtypeQuery test_4690_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_4690() { testInvalid(test_4690_query); }

		private static final SubtypeQuery test_4691_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_4691() { testInvalid(test_4691_query); }

		private static final SubtypeQuery test_4692_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_4692() { testInvalid(test_4692_query); }

		private static final SubtypeQuery test_4693_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_4693() { testInvalid(test_4693_query); }

		private static final SubtypeQuery test_4694_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("(int | (any & any))"));
		@Test public void test_4694() { testInvalid(test_4694_query); }

		private static final SubtypeQuery test_4695_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_4695() { testInvalid(test_4695_query); }

		private static final SubtypeQuery test_4696_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_4696() { testInvalid(test_4696_query); }

		private static final SubtypeQuery test_4697_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_4697() { testInvalid(test_4697_query); }

		private static final SubtypeQuery test_4698_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_4698() { testInvalid(test_4698_query); }

		private static final SubtypeQuery test_4699_query = createSubtypeQuery(parseWhiley("{(int | any), (int & any)}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_4699() { testInvalid(test_4699_query); }

		private static final SubtypeQuery test_4700_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("!int"));
		@Test public void test_4700() { testInvalid(test_4700_query); }

		private static final SubtypeQuery test_4701_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("(any | any)"));
		@Test public void test_4701() { testInvalid(test_4701_query); }

		private static final SubtypeQuery test_4702_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("(any & any)"));
		@Test public void test_4702() { testInvalid(test_4702_query); }

		private static final SubtypeQuery test_4703_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{{int, int}}"));
		@Test public void test_4703() { testInvalid(test_4703_query); }

		private static final SubtypeQuery test_4704_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("!(int | int)"));
		@Test public void test_4704() { testInvalid(test_4704_query); }

		private static final SubtypeQuery test_4705_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_4705() { testInvalid(test_4705_query); }

		private static final SubtypeQuery test_4706_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_4706() { testInvalid(test_4706_query); }

		private static final SubtypeQuery test_4707_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{{any}, int}"));
		@Test public void test_4707() { testInvalid(test_4707_query); }

		private static final SubtypeQuery test_4708_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_4708() { testInvalid(test_4708_query); }

		private static final SubtypeQuery test_4709_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{(any | int), int}"));
		@Test public void test_4709() { testInvalid(test_4709_query); }

		private static final SubtypeQuery test_4710_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_4710() { testInvalid(test_4710_query); }

		private static final SubtypeQuery test_4711_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{!any, {int}}"));
		@Test public void test_4711() { testValid(test_4711_query); }

		private static final SubtypeQuery test_4712_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_4712() { testInvalid(test_4712_query); }

		private static final SubtypeQuery test_4713_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_4713() { testInvalid(test_4713_query); }

		private static final SubtypeQuery test_4714_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{any, !any}"));
		@Test public void test_4714() { testValid(test_4714_query); }

		private static final SubtypeQuery test_4715_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{{any}, !int}"));
		@Test public void test_4715() { testInvalid(test_4715_query); }

		private static final SubtypeQuery test_4716_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_4716() { testInvalid(test_4716_query); }

		private static final SubtypeQuery test_4717_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_4717() { testInvalid(test_4717_query); }

		private static final SubtypeQuery test_4718_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_4718() { testInvalid(test_4718_query); }

		private static final SubtypeQuery test_4719_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_4719() { testInvalid(test_4719_query); }

		private static final SubtypeQuery test_4720_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_4720() { testInvalid(test_4720_query); }

		private static final SubtypeQuery test_4721_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_4721() { testInvalid(test_4721_query); }

		private static final SubtypeQuery test_4722_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_4722() { testInvalid(test_4722_query); }

		private static final SubtypeQuery test_4723_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_4723() { testInvalid(test_4723_query); }

		private static final SubtypeQuery test_4724_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_4724() { testInvalid(test_4724_query); }

		private static final SubtypeQuery test_4725_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_4725() { testInvalid(test_4725_query); }

		private static final SubtypeQuery test_4726_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_4726() { testInvalid(test_4726_query); }

		private static final SubtypeQuery test_4727_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_4727() { testInvalid(test_4727_query); }

		private static final SubtypeQuery test_4728_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_4728() { testInvalid(test_4728_query); }

		private static final SubtypeQuery test_4729_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_4729() { testValid(test_4729_query); }

		private static final SubtypeQuery test_4730_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_4730() { testInvalid(test_4730_query); }

		private static final SubtypeQuery test_4731_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_4731() { testInvalid(test_4731_query); }

		private static final SubtypeQuery test_4732_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_4732() { testInvalid(test_4732_query); }

		private static final SubtypeQuery test_4733_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_4733() { testInvalid(test_4733_query); }

		private static final SubtypeQuery test_4734_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_4734() { testInvalid(test_4734_query); }

		private static final SubtypeQuery test_4735_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_4735() { testInvalid(test_4735_query); }

		private static final SubtypeQuery test_4736_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_4736() { testInvalid(test_4736_query); }

		private static final SubtypeQuery test_4737_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_4737() { testValid(test_4737_query); }

		private static final SubtypeQuery test_4738_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_4738() { testInvalid(test_4738_query); }

		private static final SubtypeQuery test_4739_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_4739() { testInvalid(test_4739_query); }

		private static final SubtypeQuery test_4740_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_4740() { testInvalid(test_4740_query); }

		private static final SubtypeQuery test_4741_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_4741() { testValid(test_4741_query); }

		private static final SubtypeQuery test_4742_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_4742() { testInvalid(test_4742_query); }

		private static final SubtypeQuery test_4743_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_4743() { testInvalid(test_4743_query); }

		private static final SubtypeQuery test_4744_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_4744() { testInvalid(test_4744_query); }

		private static final SubtypeQuery test_4745_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_4745() { testInvalid(test_4745_query); }

		private static final SubtypeQuery test_4746_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_4746() { testInvalid(test_4746_query); }

		private static final SubtypeQuery test_4747_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_4747() { testValid(test_4747_query); }

		private static final SubtypeQuery test_4748_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_4748() { testInvalid(test_4748_query); }

		private static final SubtypeQuery test_4749_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_4749() { testInvalid(test_4749_query); }

		private static final SubtypeQuery test_4750_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_4750() { testInvalid(test_4750_query); }

		private static final SubtypeQuery test_4751_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_4751() { testInvalid(test_4751_query); }

		private static final SubtypeQuery test_4752_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_4752() { testValid(test_4752_query); }

		private static final SubtypeQuery test_4753_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_4753() { testInvalid(test_4753_query); }

		private static final SubtypeQuery test_4754_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_4754() { testInvalid(test_4754_query); }

		private static final SubtypeQuery test_4755_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_4755() { testValid(test_4755_query); }

		private static final SubtypeQuery test_4756_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("(!any | any)"));
		@Test public void test_4756() { testInvalid(test_4756_query); }

		private static final SubtypeQuery test_4757_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("({int, any} | any)"));
		@Test public void test_4757() { testInvalid(test_4757_query); }

		private static final SubtypeQuery test_4758_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("({any, int} | any)"));
		@Test public void test_4758() { testInvalid(test_4758_query); }

		private static final SubtypeQuery test_4759_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("((int & int) | any)"));
		@Test public void test_4759() { testInvalid(test_4759_query); }

		private static final SubtypeQuery test_4760_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("({int, int} | int)"));
		@Test public void test_4760() { testInvalid(test_4760_query); }

		private static final SubtypeQuery test_4761_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("((any | any) | int)"));
		@Test public void test_4761() { testInvalid(test_4761_query); }

		private static final SubtypeQuery test_4762_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("((int | any) | int)"));
		@Test public void test_4762() { testInvalid(test_4762_query); }

		private static final SubtypeQuery test_4763_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("(any | {any})"));
		@Test public void test_4763() { testInvalid(test_4763_query); }

		private static final SubtypeQuery test_4764_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("(int | {any})"));
		@Test public void test_4764() { testInvalid(test_4764_query); }

		private static final SubtypeQuery test_4765_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_4765() { testInvalid(test_4765_query); }

		private static final SubtypeQuery test_4766_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("(any | {int})"));
		@Test public void test_4766() { testInvalid(test_4766_query); }

		private static final SubtypeQuery test_4767_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_4767() { testInvalid(test_4767_query); }

		private static final SubtypeQuery test_4768_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("(!int | !any)"));
		@Test public void test_4768() { testInvalid(test_4768_query); }

		private static final SubtypeQuery test_4769_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_4769() { testInvalid(test_4769_query); }

		private static final SubtypeQuery test_4770_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_4770() { testInvalid(test_4770_query); }

		private static final SubtypeQuery test_4771_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("({int} | !int)"));
		@Test public void test_4771() { testInvalid(test_4771_query); }

		private static final SubtypeQuery test_4772_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("(!any | !int)"));
		@Test public void test_4772() { testInvalid(test_4772_query); }

		private static final SubtypeQuery test_4773_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_4773() { testInvalid(test_4773_query); }

		private static final SubtypeQuery test_4774_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_4774() { testInvalid(test_4774_query); }

		private static final SubtypeQuery test_4775_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_4775() { testInvalid(test_4775_query); }

		private static final SubtypeQuery test_4776_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_4776() { testInvalid(test_4776_query); }

		private static final SubtypeQuery test_4777_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_4777() { testInvalid(test_4777_query); }

		private static final SubtypeQuery test_4778_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_4778() { testInvalid(test_4778_query); }

		private static final SubtypeQuery test_4779_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_4779() { testInvalid(test_4779_query); }

		private static final SubtypeQuery test_4780_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_4780() { testInvalid(test_4780_query); }

		private static final SubtypeQuery test_4781_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_4781() { testInvalid(test_4781_query); }

		private static final SubtypeQuery test_4782_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_4782() { testInvalid(test_4782_query); }

		private static final SubtypeQuery test_4783_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_4783() { testInvalid(test_4783_query); }

		private static final SubtypeQuery test_4784_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_4784() { testInvalid(test_4784_query); }

		private static final SubtypeQuery test_4785_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_4785() { testInvalid(test_4785_query); }

		private static final SubtypeQuery test_4786_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_4786() { testInvalid(test_4786_query); }

		private static final SubtypeQuery test_4787_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("(int | (any | int))"));
		@Test public void test_4787() { testInvalid(test_4787_query); }

		private static final SubtypeQuery test_4788_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_4788() { testInvalid(test_4788_query); }

		private static final SubtypeQuery test_4789_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_4789() { testInvalid(test_4789_query); }

		private static final SubtypeQuery test_4790_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_4790() { testInvalid(test_4790_query); }

		private static final SubtypeQuery test_4791_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_4791() { testInvalid(test_4791_query); }

		private static final SubtypeQuery test_4792_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_4792() { testInvalid(test_4792_query); }

		private static final SubtypeQuery test_4793_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_4793() { testInvalid(test_4793_query); }

		private static final SubtypeQuery test_4794_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("(int | (any & any))"));
		@Test public void test_4794() { testInvalid(test_4794_query); }

		private static final SubtypeQuery test_4795_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_4795() { testInvalid(test_4795_query); }

		private static final SubtypeQuery test_4796_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_4796() { testInvalid(test_4796_query); }

		private static final SubtypeQuery test_4797_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_4797() { testInvalid(test_4797_query); }

		private static final SubtypeQuery test_4798_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_4798() { testInvalid(test_4798_query); }

		private static final SubtypeQuery test_4799_query = createSubtypeQuery(parseWhiley("{(int | int), (int & any)}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_4799() { testInvalid(test_4799_query); }

		private static final SubtypeQuery test_4800_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("!int"));
		@Test public void test_4800() { testInvalid(test_4800_query); }

		private static final SubtypeQuery test_4801_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("(any | any)"));
		@Test public void test_4801() { testInvalid(test_4801_query); }

		private static final SubtypeQuery test_4802_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("(any & any)"));
		@Test public void test_4802() { testInvalid(test_4802_query); }

		private static final SubtypeQuery test_4803_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{{int, int}}"));
		@Test public void test_4803() { testInvalid(test_4803_query); }

		private static final SubtypeQuery test_4804_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("!(int | int)"));
		@Test public void test_4804() { testInvalid(test_4804_query); }

		private static final SubtypeQuery test_4805_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_4805() { testInvalid(test_4805_query); }

		private static final SubtypeQuery test_4806_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_4806() { testInvalid(test_4806_query); }

		private static final SubtypeQuery test_4807_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{{any}, int}"));
		@Test public void test_4807() { testValid(test_4807_query); }

		private static final SubtypeQuery test_4808_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_4808() { testValid(test_4808_query); }

		private static final SubtypeQuery test_4809_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{(any | int), int}"));
		@Test public void test_4809() { testValid(test_4809_query); }

		private static final SubtypeQuery test_4810_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_4810() { testInvalid(test_4810_query); }

		private static final SubtypeQuery test_4811_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{!any, {int}}"));
		@Test public void test_4811() { testValid(test_4811_query); }

		private static final SubtypeQuery test_4812_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_4812() { testInvalid(test_4812_query); }

		private static final SubtypeQuery test_4813_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_4813() { testInvalid(test_4813_query); }

		private static final SubtypeQuery test_4814_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{any, !any}"));
		@Test public void test_4814() { testValid(test_4814_query); }

		private static final SubtypeQuery test_4815_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{{any}, !int}"));
		@Test public void test_4815() { testInvalid(test_4815_query); }

		private static final SubtypeQuery test_4816_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_4816() { testInvalid(test_4816_query); }

		private static final SubtypeQuery test_4817_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_4817() { testInvalid(test_4817_query); }

		private static final SubtypeQuery test_4818_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_4818() { testInvalid(test_4818_query); }

		private static final SubtypeQuery test_4819_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_4819() { testInvalid(test_4819_query); }

		private static final SubtypeQuery test_4820_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_4820() { testInvalid(test_4820_query); }

		private static final SubtypeQuery test_4821_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_4821() { testInvalid(test_4821_query); }

		private static final SubtypeQuery test_4822_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_4822() { testInvalid(test_4822_query); }

		private static final SubtypeQuery test_4823_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_4823() { testInvalid(test_4823_query); }

		private static final SubtypeQuery test_4824_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_4824() { testInvalid(test_4824_query); }

		private static final SubtypeQuery test_4825_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_4825() { testInvalid(test_4825_query); }

		private static final SubtypeQuery test_4826_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_4826() { testInvalid(test_4826_query); }

		private static final SubtypeQuery test_4827_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_4827() { testInvalid(test_4827_query); }

		private static final SubtypeQuery test_4828_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_4828() { testInvalid(test_4828_query); }

		private static final SubtypeQuery test_4829_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_4829() { testValid(test_4829_query); }

		private static final SubtypeQuery test_4830_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_4830() { testInvalid(test_4830_query); }

		private static final SubtypeQuery test_4831_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_4831() { testInvalid(test_4831_query); }

		private static final SubtypeQuery test_4832_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_4832() { testInvalid(test_4832_query); }

		private static final SubtypeQuery test_4833_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_4833() { testInvalid(test_4833_query); }

		private static final SubtypeQuery test_4834_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_4834() { testInvalid(test_4834_query); }

		private static final SubtypeQuery test_4835_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_4835() { testInvalid(test_4835_query); }

		private static final SubtypeQuery test_4836_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_4836() { testInvalid(test_4836_query); }

		private static final SubtypeQuery test_4837_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_4837() { testValid(test_4837_query); }

		private static final SubtypeQuery test_4838_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_4838() { testValid(test_4838_query); }

		private static final SubtypeQuery test_4839_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_4839() { testInvalid(test_4839_query); }

		private static final SubtypeQuery test_4840_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_4840() { testInvalid(test_4840_query); }

		private static final SubtypeQuery test_4841_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_4841() { testValid(test_4841_query); }

		private static final SubtypeQuery test_4842_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_4842() { testInvalid(test_4842_query); }

		private static final SubtypeQuery test_4843_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_4843() { testInvalid(test_4843_query); }

		private static final SubtypeQuery test_4844_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_4844() { testValid(test_4844_query); }

		private static final SubtypeQuery test_4845_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_4845() { testValid(test_4845_query); }

		private static final SubtypeQuery test_4846_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_4846() { testValid(test_4846_query); }

		private static final SubtypeQuery test_4847_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_4847() { testValid(test_4847_query); }

		private static final SubtypeQuery test_4848_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_4848() { testValid(test_4848_query); }

		private static final SubtypeQuery test_4849_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_4849() { testValid(test_4849_query); }

		private static final SubtypeQuery test_4850_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_4850() { testValid(test_4850_query); }

		private static final SubtypeQuery test_4851_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_4851() { testValid(test_4851_query); }

		private static final SubtypeQuery test_4852_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_4852() { testValid(test_4852_query); }

		private static final SubtypeQuery test_4853_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_4853() { testValid(test_4853_query); }

		private static final SubtypeQuery test_4854_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_4854() { testValid(test_4854_query); }

		private static final SubtypeQuery test_4855_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_4855() { testValid(test_4855_query); }

		private static final SubtypeQuery test_4856_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("(!any | any)"));
		@Test public void test_4856() { testInvalid(test_4856_query); }

		private static final SubtypeQuery test_4857_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("({int, any} | any)"));
		@Test public void test_4857() { testInvalid(test_4857_query); }

		private static final SubtypeQuery test_4858_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("({any, int} | any)"));
		@Test public void test_4858() { testInvalid(test_4858_query); }

		private static final SubtypeQuery test_4859_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("((int & int) | any)"));
		@Test public void test_4859() { testInvalid(test_4859_query); }

		private static final SubtypeQuery test_4860_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("({int, int} | int)"));
		@Test public void test_4860() { testInvalid(test_4860_query); }

		private static final SubtypeQuery test_4861_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("((any | any) | int)"));
		@Test public void test_4861() { testInvalid(test_4861_query); }

		private static final SubtypeQuery test_4862_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("((int | any) | int)"));
		@Test public void test_4862() { testInvalid(test_4862_query); }

		private static final SubtypeQuery test_4863_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("(any | {any})"));
		@Test public void test_4863() { testInvalid(test_4863_query); }

		private static final SubtypeQuery test_4864_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("(int | {any})"));
		@Test public void test_4864() { testInvalid(test_4864_query); }

		private static final SubtypeQuery test_4865_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_4865() { testInvalid(test_4865_query); }

		private static final SubtypeQuery test_4866_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("(any | {int})"));
		@Test public void test_4866() { testInvalid(test_4866_query); }

		private static final SubtypeQuery test_4867_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_4867() { testInvalid(test_4867_query); }

		private static final SubtypeQuery test_4868_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("(!int | !any)"));
		@Test public void test_4868() { testInvalid(test_4868_query); }

		private static final SubtypeQuery test_4869_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_4869() { testInvalid(test_4869_query); }

		private static final SubtypeQuery test_4870_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_4870() { testInvalid(test_4870_query); }

		private static final SubtypeQuery test_4871_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("({int} | !int)"));
		@Test public void test_4871() { testInvalid(test_4871_query); }

		private static final SubtypeQuery test_4872_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("(!any | !int)"));
		@Test public void test_4872() { testInvalid(test_4872_query); }

		private static final SubtypeQuery test_4873_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_4873() { testInvalid(test_4873_query); }

		private static final SubtypeQuery test_4874_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_4874() { testInvalid(test_4874_query); }

		private static final SubtypeQuery test_4875_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_4875() { testInvalid(test_4875_query); }

		private static final SubtypeQuery test_4876_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_4876() { testValid(test_4876_query); }

		private static final SubtypeQuery test_4877_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_4877() { testInvalid(test_4877_query); }

		private static final SubtypeQuery test_4878_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_4878() { testInvalid(test_4878_query); }

		private static final SubtypeQuery test_4879_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_4879() { testInvalid(test_4879_query); }

		private static final SubtypeQuery test_4880_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_4880() { testInvalid(test_4880_query); }

		private static final SubtypeQuery test_4881_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_4881() { testInvalid(test_4881_query); }

		private static final SubtypeQuery test_4882_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_4882() { testInvalid(test_4882_query); }

		private static final SubtypeQuery test_4883_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_4883() { testInvalid(test_4883_query); }

		private static final SubtypeQuery test_4884_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_4884() { testInvalid(test_4884_query); }

		private static final SubtypeQuery test_4885_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_4885() { testInvalid(test_4885_query); }

		private static final SubtypeQuery test_4886_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_4886() { testInvalid(test_4886_query); }

		private static final SubtypeQuery test_4887_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("(int | (any | int))"));
		@Test public void test_4887() { testInvalid(test_4887_query); }

		private static final SubtypeQuery test_4888_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_4888() { testInvalid(test_4888_query); }

		private static final SubtypeQuery test_4889_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_4889() { testInvalid(test_4889_query); }

		private static final SubtypeQuery test_4890_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_4890() { testInvalid(test_4890_query); }

		private static final SubtypeQuery test_4891_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_4891() { testInvalid(test_4891_query); }

		private static final SubtypeQuery test_4892_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_4892() { testInvalid(test_4892_query); }

		private static final SubtypeQuery test_4893_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_4893() { testInvalid(test_4893_query); }

		private static final SubtypeQuery test_4894_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("(int | (any & any))"));
		@Test public void test_4894() { testInvalid(test_4894_query); }

		private static final SubtypeQuery test_4895_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_4895() { testInvalid(test_4895_query); }

		private static final SubtypeQuery test_4896_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_4896() { testInvalid(test_4896_query); }

		private static final SubtypeQuery test_4897_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_4897() { testInvalid(test_4897_query); }

		private static final SubtypeQuery test_4898_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_4898() { testInvalid(test_4898_query); }

		private static final SubtypeQuery test_4899_query = createSubtypeQuery(parseWhiley("{any, (any & int)}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_4899() { testInvalid(test_4899_query); }

		private static final SubtypeQuery test_4900_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("!int"));
		@Test public void test_4900() { testInvalid(test_4900_query); }

		private static final SubtypeQuery test_4901_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("(any | any)"));
		@Test public void test_4901() { testInvalid(test_4901_query); }

		private static final SubtypeQuery test_4902_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("(any & any)"));
		@Test public void test_4902() { testInvalid(test_4902_query); }

		private static final SubtypeQuery test_4903_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{{int, int}}"));
		@Test public void test_4903() { testInvalid(test_4903_query); }

		private static final SubtypeQuery test_4904_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("!(int | int)"));
		@Test public void test_4904() { testInvalid(test_4904_query); }

		private static final SubtypeQuery test_4905_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_4905() { testInvalid(test_4905_query); }

		private static final SubtypeQuery test_4906_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_4906() { testInvalid(test_4906_query); }

		private static final SubtypeQuery test_4907_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{{any}, int}"));
		@Test public void test_4907() { testInvalid(test_4907_query); }

		private static final SubtypeQuery test_4908_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_4908() { testInvalid(test_4908_query); }

		private static final SubtypeQuery test_4909_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{(any | int), int}"));
		@Test public void test_4909() { testInvalid(test_4909_query); }

		private static final SubtypeQuery test_4910_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_4910() { testInvalid(test_4910_query); }

		private static final SubtypeQuery test_4911_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{!any, {int}}"));
		@Test public void test_4911() { testValid(test_4911_query); }

		private static final SubtypeQuery test_4912_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_4912() { testInvalid(test_4912_query); }

		private static final SubtypeQuery test_4913_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_4913() { testInvalid(test_4913_query); }

		private static final SubtypeQuery test_4914_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{any, !any}"));
		@Test public void test_4914() { testValid(test_4914_query); }

		private static final SubtypeQuery test_4915_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{{any}, !int}"));
		@Test public void test_4915() { testInvalid(test_4915_query); }

		private static final SubtypeQuery test_4916_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_4916() { testInvalid(test_4916_query); }

		private static final SubtypeQuery test_4917_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_4917() { testInvalid(test_4917_query); }

		private static final SubtypeQuery test_4918_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_4918() { testInvalid(test_4918_query); }

		private static final SubtypeQuery test_4919_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_4919() { testInvalid(test_4919_query); }

		private static final SubtypeQuery test_4920_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_4920() { testInvalid(test_4920_query); }

		private static final SubtypeQuery test_4921_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_4921() { testInvalid(test_4921_query); }

		private static final SubtypeQuery test_4922_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_4922() { testInvalid(test_4922_query); }

		private static final SubtypeQuery test_4923_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_4923() { testInvalid(test_4923_query); }

		private static final SubtypeQuery test_4924_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_4924() { testInvalid(test_4924_query); }

		private static final SubtypeQuery test_4925_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_4925() { testInvalid(test_4925_query); }

		private static final SubtypeQuery test_4926_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_4926() { testInvalid(test_4926_query); }

		private static final SubtypeQuery test_4927_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_4927() { testInvalid(test_4927_query); }

		private static final SubtypeQuery test_4928_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_4928() { testInvalid(test_4928_query); }

		private static final SubtypeQuery test_4929_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_4929() { testValid(test_4929_query); }

		private static final SubtypeQuery test_4930_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_4930() { testInvalid(test_4930_query); }

		private static final SubtypeQuery test_4931_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_4931() { testInvalid(test_4931_query); }

		private static final SubtypeQuery test_4932_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_4932() { testInvalid(test_4932_query); }

		private static final SubtypeQuery test_4933_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_4933() { testInvalid(test_4933_query); }

		private static final SubtypeQuery test_4934_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_4934() { testInvalid(test_4934_query); }

		private static final SubtypeQuery test_4935_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_4935() { testInvalid(test_4935_query); }

		private static final SubtypeQuery test_4936_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_4936() { testInvalid(test_4936_query); }

		private static final SubtypeQuery test_4937_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_4937() { testInvalid(test_4937_query); }

		private static final SubtypeQuery test_4938_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_4938() { testInvalid(test_4938_query); }

		private static final SubtypeQuery test_4939_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_4939() { testInvalid(test_4939_query); }

		private static final SubtypeQuery test_4940_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_4940() { testInvalid(test_4940_query); }

		private static final SubtypeQuery test_4941_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_4941() { testValid(test_4941_query); }

		private static final SubtypeQuery test_4942_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_4942() { testInvalid(test_4942_query); }

		private static final SubtypeQuery test_4943_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_4943() { testInvalid(test_4943_query); }

		private static final SubtypeQuery test_4944_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_4944() { testValid(test_4944_query); }

		private static final SubtypeQuery test_4945_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_4945() { testInvalid(test_4945_query); }

		private static final SubtypeQuery test_4946_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_4946() { testInvalid(test_4946_query); }

		private static final SubtypeQuery test_4947_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_4947() { testInvalid(test_4947_query); }

		private static final SubtypeQuery test_4948_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_4948() { testInvalid(test_4948_query); }

		private static final SubtypeQuery test_4949_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_4949() { testValid(test_4949_query); }

		private static final SubtypeQuery test_4950_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_4950() { testInvalid(test_4950_query); }

		private static final SubtypeQuery test_4951_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_4951() { testInvalid(test_4951_query); }

		private static final SubtypeQuery test_4952_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_4952() { testInvalid(test_4952_query); }

		private static final SubtypeQuery test_4953_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_4953() { testInvalid(test_4953_query); }

		private static final SubtypeQuery test_4954_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_4954() { testInvalid(test_4954_query); }

		private static final SubtypeQuery test_4955_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_4955() { testInvalid(test_4955_query); }

		private static final SubtypeQuery test_4956_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("(!any | any)"));
		@Test public void test_4956() { testInvalid(test_4956_query); }

		private static final SubtypeQuery test_4957_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("({int, any} | any)"));
		@Test public void test_4957() { testInvalid(test_4957_query); }

		private static final SubtypeQuery test_4958_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("({any, int} | any)"));
		@Test public void test_4958() { testInvalid(test_4958_query); }

		private static final SubtypeQuery test_4959_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("((int & int) | any)"));
		@Test public void test_4959() { testInvalid(test_4959_query); }

		private static final SubtypeQuery test_4960_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("({int, int} | int)"));
		@Test public void test_4960() { testInvalid(test_4960_query); }

		private static final SubtypeQuery test_4961_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("((any | any) | int)"));
		@Test public void test_4961() { testInvalid(test_4961_query); }

		private static final SubtypeQuery test_4962_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("((int | any) | int)"));
		@Test public void test_4962() { testInvalid(test_4962_query); }

		private static final SubtypeQuery test_4963_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("(any | {any})"));
		@Test public void test_4963() { testInvalid(test_4963_query); }

		private static final SubtypeQuery test_4964_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("(int | {any})"));
		@Test public void test_4964() { testInvalid(test_4964_query); }

		private static final SubtypeQuery test_4965_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_4965() { testInvalid(test_4965_query); }

		private static final SubtypeQuery test_4966_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("(any | {int})"));
		@Test public void test_4966() { testInvalid(test_4966_query); }

		private static final SubtypeQuery test_4967_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_4967() { testInvalid(test_4967_query); }

		private static final SubtypeQuery test_4968_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("(!int | !any)"));
		@Test public void test_4968() { testInvalid(test_4968_query); }

		private static final SubtypeQuery test_4969_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_4969() { testInvalid(test_4969_query); }

		private static final SubtypeQuery test_4970_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_4970() { testInvalid(test_4970_query); }

		private static final SubtypeQuery test_4971_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("({int} | !int)"));
		@Test public void test_4971() { testInvalid(test_4971_query); }

		private static final SubtypeQuery test_4972_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("(!any | !int)"));
		@Test public void test_4972() { testInvalid(test_4972_query); }

		private static final SubtypeQuery test_4973_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_4973() { testInvalid(test_4973_query); }

		private static final SubtypeQuery test_4974_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_4974() { testInvalid(test_4974_query); }

		private static final SubtypeQuery test_4975_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_4975() { testInvalid(test_4975_query); }

		private static final SubtypeQuery test_4976_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_4976() { testInvalid(test_4976_query); }

		private static final SubtypeQuery test_4977_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_4977() { testInvalid(test_4977_query); }

		private static final SubtypeQuery test_4978_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_4978() { testInvalid(test_4978_query); }

		private static final SubtypeQuery test_4979_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_4979() { testInvalid(test_4979_query); }

		private static final SubtypeQuery test_4980_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_4980() { testInvalid(test_4980_query); }

		private static final SubtypeQuery test_4981_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_4981() { testInvalid(test_4981_query); }

		private static final SubtypeQuery test_4982_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_4982() { testInvalid(test_4982_query); }

		private static final SubtypeQuery test_4983_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_4983() { testInvalid(test_4983_query); }

		private static final SubtypeQuery test_4984_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_4984() { testInvalid(test_4984_query); }

		private static final SubtypeQuery test_4985_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_4985() { testInvalid(test_4985_query); }

		private static final SubtypeQuery test_4986_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_4986() { testInvalid(test_4986_query); }

		private static final SubtypeQuery test_4987_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("(int | (any | int))"));
		@Test public void test_4987() { testInvalid(test_4987_query); }

		private static final SubtypeQuery test_4988_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_4988() { testInvalid(test_4988_query); }

		private static final SubtypeQuery test_4989_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_4989() { testInvalid(test_4989_query); }

		private static final SubtypeQuery test_4990_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_4990() { testInvalid(test_4990_query); }

		private static final SubtypeQuery test_4991_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_4991() { testInvalid(test_4991_query); }

		private static final SubtypeQuery test_4992_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_4992() { testInvalid(test_4992_query); }

		private static final SubtypeQuery test_4993_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_4993() { testInvalid(test_4993_query); }

		private static final SubtypeQuery test_4994_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("(int | (any & any))"));
		@Test public void test_4994() { testInvalid(test_4994_query); }

		private static final SubtypeQuery test_4995_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_4995() { testInvalid(test_4995_query); }

		private static final SubtypeQuery test_4996_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_4996() { testInvalid(test_4996_query); }

		private static final SubtypeQuery test_4997_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_4997() { testInvalid(test_4997_query); }

		private static final SubtypeQuery test_4998_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_4998() { testInvalid(test_4998_query); }

		private static final SubtypeQuery test_4999_query = createSubtypeQuery(parseWhiley("{{int}, (any & int)}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_4999() { testInvalid(test_4999_query); }

	}
	public static class Part_5 {
		private static final SubtypeQuery test_5000_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("!int"));
		@Test public void test_5000() { testInvalid(test_5000_query); }

		private static final SubtypeQuery test_5001_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("(any | any)"));
		@Test public void test_5001() { testInvalid(test_5001_query); }

		private static final SubtypeQuery test_5002_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("(any & any)"));
		@Test public void test_5002() { testInvalid(test_5002_query); }

		private static final SubtypeQuery test_5003_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{{int, int}}"));
		@Test public void test_5003() { testInvalid(test_5003_query); }

		private static final SubtypeQuery test_5004_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("!(int | int)"));
		@Test public void test_5004() { testInvalid(test_5004_query); }

		private static final SubtypeQuery test_5005_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_5005() { testInvalid(test_5005_query); }

		private static final SubtypeQuery test_5006_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_5006() { testInvalid(test_5006_query); }

		private static final SubtypeQuery test_5007_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{{any}, int}"));
		@Test public void test_5007() { testInvalid(test_5007_query); }

		private static final SubtypeQuery test_5008_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_5008() { testValid(test_5008_query); }

		private static final SubtypeQuery test_5009_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{(any | int), int}"));
		@Test public void test_5009() { testInvalid(test_5009_query); }

		private static final SubtypeQuery test_5010_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_5010() { testInvalid(test_5010_query); }

		private static final SubtypeQuery test_5011_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{!any, {int}}"));
		@Test public void test_5011() { testValid(test_5011_query); }

		private static final SubtypeQuery test_5012_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_5012() { testInvalid(test_5012_query); }

		private static final SubtypeQuery test_5013_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_5013() { testInvalid(test_5013_query); }

		private static final SubtypeQuery test_5014_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{any, !any}"));
		@Test public void test_5014() { testValid(test_5014_query); }

		private static final SubtypeQuery test_5015_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{{any}, !int}"));
		@Test public void test_5015() { testInvalid(test_5015_query); }

		private static final SubtypeQuery test_5016_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_5016() { testInvalid(test_5016_query); }

		private static final SubtypeQuery test_5017_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_5017() { testInvalid(test_5017_query); }

		private static final SubtypeQuery test_5018_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_5018() { testInvalid(test_5018_query); }

		private static final SubtypeQuery test_5019_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_5019() { testInvalid(test_5019_query); }

		private static final SubtypeQuery test_5020_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_5020() { testInvalid(test_5020_query); }

		private static final SubtypeQuery test_5021_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_5021() { testInvalid(test_5021_query); }

		private static final SubtypeQuery test_5022_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_5022() { testInvalid(test_5022_query); }

		private static final SubtypeQuery test_5023_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_5023() { testInvalid(test_5023_query); }

		private static final SubtypeQuery test_5024_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_5024() { testInvalid(test_5024_query); }

		private static final SubtypeQuery test_5025_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_5025() { testInvalid(test_5025_query); }

		private static final SubtypeQuery test_5026_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_5026() { testInvalid(test_5026_query); }

		private static final SubtypeQuery test_5027_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_5027() { testInvalid(test_5027_query); }

		private static final SubtypeQuery test_5028_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_5028() { testInvalid(test_5028_query); }

		private static final SubtypeQuery test_5029_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_5029() { testValid(test_5029_query); }

		private static final SubtypeQuery test_5030_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_5030() { testInvalid(test_5030_query); }

		private static final SubtypeQuery test_5031_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_5031() { testInvalid(test_5031_query); }

		private static final SubtypeQuery test_5032_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_5032() { testInvalid(test_5032_query); }

		private static final SubtypeQuery test_5033_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_5033() { testInvalid(test_5033_query); }

		private static final SubtypeQuery test_5034_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_5034() { testInvalid(test_5034_query); }

		private static final SubtypeQuery test_5035_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_5035() { testInvalid(test_5035_query); }

		private static final SubtypeQuery test_5036_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_5036() { testInvalid(test_5036_query); }

		private static final SubtypeQuery test_5037_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_5037() { testInvalid(test_5037_query); }

		private static final SubtypeQuery test_5038_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_5038() { testValid(test_5038_query); }

		private static final SubtypeQuery test_5039_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_5039() { testInvalid(test_5039_query); }

		private static final SubtypeQuery test_5040_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_5040() { testInvalid(test_5040_query); }

		private static final SubtypeQuery test_5041_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_5041() { testValid(test_5041_query); }

		private static final SubtypeQuery test_5042_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_5042() { testInvalid(test_5042_query); }

		private static final SubtypeQuery test_5043_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_5043() { testInvalid(test_5043_query); }

		private static final SubtypeQuery test_5044_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_5044() { testInvalid(test_5044_query); }

		private static final SubtypeQuery test_5045_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_5045() { testValid(test_5045_query); }

		private static final SubtypeQuery test_5046_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_5046() { testInvalid(test_5046_query); }

		private static final SubtypeQuery test_5047_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_5047() { testInvalid(test_5047_query); }

		private static final SubtypeQuery test_5048_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_5048() { testInvalid(test_5048_query); }

		private static final SubtypeQuery test_5049_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_5049() { testInvalid(test_5049_query); }

		private static final SubtypeQuery test_5050_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_5050() { testValid(test_5050_query); }

		private static final SubtypeQuery test_5051_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_5051() { testValid(test_5051_query); }

		private static final SubtypeQuery test_5052_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_5052() { testInvalid(test_5052_query); }

		private static final SubtypeQuery test_5053_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_5053() { testInvalid(test_5053_query); }

		private static final SubtypeQuery test_5054_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_5054() { testValid(test_5054_query); }

		private static final SubtypeQuery test_5055_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_5055() { testInvalid(test_5055_query); }

		private static final SubtypeQuery test_5056_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("(!any | any)"));
		@Test public void test_5056() { testInvalid(test_5056_query); }

		private static final SubtypeQuery test_5057_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("({int, any} | any)"));
		@Test public void test_5057() { testInvalid(test_5057_query); }

		private static final SubtypeQuery test_5058_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("({any, int} | any)"));
		@Test public void test_5058() { testInvalid(test_5058_query); }

		private static final SubtypeQuery test_5059_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("((int & int) | any)"));
		@Test public void test_5059() { testInvalid(test_5059_query); }

		private static final SubtypeQuery test_5060_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("({int, int} | int)"));
		@Test public void test_5060() { testInvalid(test_5060_query); }

		private static final SubtypeQuery test_5061_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("((any | any) | int)"));
		@Test public void test_5061() { testInvalid(test_5061_query); }

		private static final SubtypeQuery test_5062_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("((int | any) | int)"));
		@Test public void test_5062() { testInvalid(test_5062_query); }

		private static final SubtypeQuery test_5063_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("(any | {any})"));
		@Test public void test_5063() { testInvalid(test_5063_query); }

		private static final SubtypeQuery test_5064_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("(int | {any})"));
		@Test public void test_5064() { testInvalid(test_5064_query); }

		private static final SubtypeQuery test_5065_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_5065() { testInvalid(test_5065_query); }

		private static final SubtypeQuery test_5066_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("(any | {int})"));
		@Test public void test_5066() { testInvalid(test_5066_query); }

		private static final SubtypeQuery test_5067_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_5067() { testInvalid(test_5067_query); }

		private static final SubtypeQuery test_5068_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("(!int | !any)"));
		@Test public void test_5068() { testInvalid(test_5068_query); }

		private static final SubtypeQuery test_5069_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_5069() { testInvalid(test_5069_query); }

		private static final SubtypeQuery test_5070_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_5070() { testInvalid(test_5070_query); }

		private static final SubtypeQuery test_5071_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("({int} | !int)"));
		@Test public void test_5071() { testInvalid(test_5071_query); }

		private static final SubtypeQuery test_5072_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("(!any | !int)"));
		@Test public void test_5072() { testInvalid(test_5072_query); }

		private static final SubtypeQuery test_5073_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_5073() { testInvalid(test_5073_query); }

		private static final SubtypeQuery test_5074_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_5074() { testInvalid(test_5074_query); }

		private static final SubtypeQuery test_5075_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_5075() { testInvalid(test_5075_query); }

		private static final SubtypeQuery test_5076_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_5076() { testInvalid(test_5076_query); }

		private static final SubtypeQuery test_5077_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_5077() { testInvalid(test_5077_query); }

		private static final SubtypeQuery test_5078_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_5078() { testInvalid(test_5078_query); }

		private static final SubtypeQuery test_5079_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_5079() { testInvalid(test_5079_query); }

		private static final SubtypeQuery test_5080_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_5080() { testInvalid(test_5080_query); }

		private static final SubtypeQuery test_5081_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_5081() { testInvalid(test_5081_query); }

		private static final SubtypeQuery test_5082_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_5082() { testInvalid(test_5082_query); }

		private static final SubtypeQuery test_5083_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_5083() { testInvalid(test_5083_query); }

		private static final SubtypeQuery test_5084_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_5084() { testInvalid(test_5084_query); }

		private static final SubtypeQuery test_5085_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_5085() { testInvalid(test_5085_query); }

		private static final SubtypeQuery test_5086_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_5086() { testInvalid(test_5086_query); }

		private static final SubtypeQuery test_5087_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("(int | (any | int))"));
		@Test public void test_5087() { testInvalid(test_5087_query); }

		private static final SubtypeQuery test_5088_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_5088() { testInvalid(test_5088_query); }

		private static final SubtypeQuery test_5089_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_5089() { testInvalid(test_5089_query); }

		private static final SubtypeQuery test_5090_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_5090() { testInvalid(test_5090_query); }

		private static final SubtypeQuery test_5091_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_5091() { testInvalid(test_5091_query); }

		private static final SubtypeQuery test_5092_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_5092() { testInvalid(test_5092_query); }

		private static final SubtypeQuery test_5093_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_5093() { testInvalid(test_5093_query); }

		private static final SubtypeQuery test_5094_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("(int | (any & any))"));
		@Test public void test_5094() { testInvalid(test_5094_query); }

		private static final SubtypeQuery test_5095_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_5095() { testInvalid(test_5095_query); }

		private static final SubtypeQuery test_5096_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_5096() { testInvalid(test_5096_query); }

		private static final SubtypeQuery test_5097_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_5097() { testInvalid(test_5097_query); }

		private static final SubtypeQuery test_5098_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_5098() { testInvalid(test_5098_query); }

		private static final SubtypeQuery test_5099_query = createSubtypeQuery(parseWhiley("{{any, any}, (any & int)}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_5099() { testInvalid(test_5099_query); }

		private static final SubtypeQuery test_5100_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("!int"));
		@Test public void test_5100() { testInvalid(test_5100_query); }

		private static final SubtypeQuery test_5101_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("(any | any)"));
		@Test public void test_5101() { testInvalid(test_5101_query); }

		private static final SubtypeQuery test_5102_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("(any & any)"));
		@Test public void test_5102() { testInvalid(test_5102_query); }

		private static final SubtypeQuery test_5103_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{{int, int}}"));
		@Test public void test_5103() { testInvalid(test_5103_query); }

		private static final SubtypeQuery test_5104_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("!(int | int)"));
		@Test public void test_5104() { testInvalid(test_5104_query); }

		private static final SubtypeQuery test_5105_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_5105() { testInvalid(test_5105_query); }

		private static final SubtypeQuery test_5106_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_5106() { testInvalid(test_5106_query); }

		private static final SubtypeQuery test_5107_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{{any}, int}"));
		@Test public void test_5107() { testInvalid(test_5107_query); }

		private static final SubtypeQuery test_5108_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_5108() { testInvalid(test_5108_query); }

		private static final SubtypeQuery test_5109_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{(any | int), int}"));
		@Test public void test_5109() { testInvalid(test_5109_query); }

		private static final SubtypeQuery test_5110_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_5110() { testInvalid(test_5110_query); }

		private static final SubtypeQuery test_5111_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{!any, {int}}"));
		@Test public void test_5111() { testValid(test_5111_query); }

		private static final SubtypeQuery test_5112_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_5112() { testInvalid(test_5112_query); }

		private static final SubtypeQuery test_5113_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_5113() { testInvalid(test_5113_query); }

		private static final SubtypeQuery test_5114_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{any, !any}"));
		@Test public void test_5114() { testValid(test_5114_query); }

		private static final SubtypeQuery test_5115_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{{any}, !int}"));
		@Test public void test_5115() { testInvalid(test_5115_query); }

		private static final SubtypeQuery test_5116_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_5116() { testInvalid(test_5116_query); }

		private static final SubtypeQuery test_5117_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_5117() { testInvalid(test_5117_query); }

		private static final SubtypeQuery test_5118_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_5118() { testInvalid(test_5118_query); }

		private static final SubtypeQuery test_5119_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_5119() { testInvalid(test_5119_query); }

		private static final SubtypeQuery test_5120_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_5120() { testInvalid(test_5120_query); }

		private static final SubtypeQuery test_5121_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_5121() { testInvalid(test_5121_query); }

		private static final SubtypeQuery test_5122_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_5122() { testInvalid(test_5122_query); }

		private static final SubtypeQuery test_5123_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_5123() { testInvalid(test_5123_query); }

		private static final SubtypeQuery test_5124_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_5124() { testInvalid(test_5124_query); }

		private static final SubtypeQuery test_5125_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_5125() { testInvalid(test_5125_query); }

		private static final SubtypeQuery test_5126_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_5126() { testInvalid(test_5126_query); }

		private static final SubtypeQuery test_5127_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_5127() { testInvalid(test_5127_query); }

		private static final SubtypeQuery test_5128_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_5128() { testInvalid(test_5128_query); }

		private static final SubtypeQuery test_5129_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_5129() { testValid(test_5129_query); }

		private static final SubtypeQuery test_5130_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_5130() { testInvalid(test_5130_query); }

		private static final SubtypeQuery test_5131_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_5131() { testInvalid(test_5131_query); }

		private static final SubtypeQuery test_5132_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_5132() { testInvalid(test_5132_query); }

		private static final SubtypeQuery test_5133_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_5133() { testInvalid(test_5133_query); }

		private static final SubtypeQuery test_5134_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_5134() { testInvalid(test_5134_query); }

		private static final SubtypeQuery test_5135_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_5135() { testInvalid(test_5135_query); }

		private static final SubtypeQuery test_5136_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_5136() { testInvalid(test_5136_query); }

		private static final SubtypeQuery test_5137_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_5137() { testInvalid(test_5137_query); }

		private static final SubtypeQuery test_5138_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_5138() { testValid(test_5138_query); }

		private static final SubtypeQuery test_5139_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_5139() { testInvalid(test_5139_query); }

		private static final SubtypeQuery test_5140_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_5140() { testInvalid(test_5140_query); }

		private static final SubtypeQuery test_5141_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_5141() { testValid(test_5141_query); }

		private static final SubtypeQuery test_5142_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_5142() { testInvalid(test_5142_query); }

		private static final SubtypeQuery test_5143_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_5143() { testInvalid(test_5143_query); }

		private static final SubtypeQuery test_5144_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_5144() { testInvalid(test_5144_query); }

		private static final SubtypeQuery test_5145_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_5145() { testInvalid(test_5145_query); }

		private static final SubtypeQuery test_5146_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_5146() { testInvalid(test_5146_query); }

		private static final SubtypeQuery test_5147_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_5147() { testInvalid(test_5147_query); }

		private static final SubtypeQuery test_5148_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_5148() { testInvalid(test_5148_query); }

		private static final SubtypeQuery test_5149_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_5149() { testInvalid(test_5149_query); }

		private static final SubtypeQuery test_5150_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_5150() { testInvalid(test_5150_query); }

		private static final SubtypeQuery test_5151_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_5151() { testValid(test_5151_query); }

		private static final SubtypeQuery test_5152_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_5152() { testInvalid(test_5152_query); }

		private static final SubtypeQuery test_5153_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_5153() { testInvalid(test_5153_query); }

		private static final SubtypeQuery test_5154_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_5154() { testInvalid(test_5154_query); }

		private static final SubtypeQuery test_5155_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_5155() { testInvalid(test_5155_query); }

		private static final SubtypeQuery test_5156_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("(!any | any)"));
		@Test public void test_5156() { testInvalid(test_5156_query); }

		private static final SubtypeQuery test_5157_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("({int, any} | any)"));
		@Test public void test_5157() { testInvalid(test_5157_query); }

		private static final SubtypeQuery test_5158_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("({any, int} | any)"));
		@Test public void test_5158() { testInvalid(test_5158_query); }

		private static final SubtypeQuery test_5159_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("((int & int) | any)"));
		@Test public void test_5159() { testInvalid(test_5159_query); }

		private static final SubtypeQuery test_5160_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("({int, int} | int)"));
		@Test public void test_5160() { testInvalid(test_5160_query); }

		private static final SubtypeQuery test_5161_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("((any | any) | int)"));
		@Test public void test_5161() { testInvalid(test_5161_query); }

		private static final SubtypeQuery test_5162_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("((int | any) | int)"));
		@Test public void test_5162() { testInvalid(test_5162_query); }

		private static final SubtypeQuery test_5163_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("(any | {any})"));
		@Test public void test_5163() { testInvalid(test_5163_query); }

		private static final SubtypeQuery test_5164_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("(int | {any})"));
		@Test public void test_5164() { testInvalid(test_5164_query); }

		private static final SubtypeQuery test_5165_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_5165() { testInvalid(test_5165_query); }

		private static final SubtypeQuery test_5166_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("(any | {int})"));
		@Test public void test_5166() { testInvalid(test_5166_query); }

		private static final SubtypeQuery test_5167_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_5167() { testInvalid(test_5167_query); }

		private static final SubtypeQuery test_5168_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("(!int | !any)"));
		@Test public void test_5168() { testInvalid(test_5168_query); }

		private static final SubtypeQuery test_5169_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_5169() { testInvalid(test_5169_query); }

		private static final SubtypeQuery test_5170_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_5170() { testInvalid(test_5170_query); }

		private static final SubtypeQuery test_5171_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("({int} | !int)"));
		@Test public void test_5171() { testInvalid(test_5171_query); }

		private static final SubtypeQuery test_5172_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("(!any | !int)"));
		@Test public void test_5172() { testInvalid(test_5172_query); }

		private static final SubtypeQuery test_5173_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_5173() { testInvalid(test_5173_query); }

		private static final SubtypeQuery test_5174_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_5174() { testInvalid(test_5174_query); }

		private static final SubtypeQuery test_5175_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_5175() { testInvalid(test_5175_query); }

		private static final SubtypeQuery test_5176_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_5176() { testInvalid(test_5176_query); }

		private static final SubtypeQuery test_5177_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_5177() { testInvalid(test_5177_query); }

		private static final SubtypeQuery test_5178_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_5178() { testInvalid(test_5178_query); }

		private static final SubtypeQuery test_5179_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_5179() { testInvalid(test_5179_query); }

		private static final SubtypeQuery test_5180_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_5180() { testInvalid(test_5180_query); }

		private static final SubtypeQuery test_5181_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_5181() { testInvalid(test_5181_query); }

		private static final SubtypeQuery test_5182_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_5182() { testInvalid(test_5182_query); }

		private static final SubtypeQuery test_5183_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_5183() { testInvalid(test_5183_query); }

		private static final SubtypeQuery test_5184_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_5184() { testInvalid(test_5184_query); }

		private static final SubtypeQuery test_5185_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_5185() { testInvalid(test_5185_query); }

		private static final SubtypeQuery test_5186_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_5186() { testInvalid(test_5186_query); }

		private static final SubtypeQuery test_5187_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("(int | (any | int))"));
		@Test public void test_5187() { testInvalid(test_5187_query); }

		private static final SubtypeQuery test_5188_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_5188() { testInvalid(test_5188_query); }

		private static final SubtypeQuery test_5189_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_5189() { testInvalid(test_5189_query); }

		private static final SubtypeQuery test_5190_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_5190() { testInvalid(test_5190_query); }

		private static final SubtypeQuery test_5191_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_5191() { testInvalid(test_5191_query); }

		private static final SubtypeQuery test_5192_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_5192() { testInvalid(test_5192_query); }

		private static final SubtypeQuery test_5193_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_5193() { testInvalid(test_5193_query); }

		private static final SubtypeQuery test_5194_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("(int | (any & any))"));
		@Test public void test_5194() { testInvalid(test_5194_query); }

		private static final SubtypeQuery test_5195_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_5195() { testInvalid(test_5195_query); }

		private static final SubtypeQuery test_5196_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_5196() { testInvalid(test_5196_query); }

		private static final SubtypeQuery test_5197_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_5197() { testInvalid(test_5197_query); }

		private static final SubtypeQuery test_5198_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_5198() { testInvalid(test_5198_query); }

		private static final SubtypeQuery test_5199_query = createSubtypeQuery(parseWhiley("{{int, any}, (any & int)}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_5199() { testInvalid(test_5199_query); }

		private static final SubtypeQuery test_5200_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("!int"));
		@Test public void test_5200() { testInvalid(test_5200_query); }

		private static final SubtypeQuery test_5201_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("(any | any)"));
		@Test public void test_5201() { testInvalid(test_5201_query); }

		private static final SubtypeQuery test_5202_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("(any & any)"));
		@Test public void test_5202() { testInvalid(test_5202_query); }

		private static final SubtypeQuery test_5203_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{{int, int}}"));
		@Test public void test_5203() { testInvalid(test_5203_query); }

		private static final SubtypeQuery test_5204_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("!(int | int)"));
		@Test public void test_5204() { testInvalid(test_5204_query); }

		private static final SubtypeQuery test_5205_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_5205() { testInvalid(test_5205_query); }

		private static final SubtypeQuery test_5206_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_5206() { testInvalid(test_5206_query); }

		private static final SubtypeQuery test_5207_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{{any}, int}"));
		@Test public void test_5207() { testInvalid(test_5207_query); }

		private static final SubtypeQuery test_5208_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_5208() { testInvalid(test_5208_query); }

		private static final SubtypeQuery test_5209_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{(any | int), int}"));
		@Test public void test_5209() { testInvalid(test_5209_query); }

		private static final SubtypeQuery test_5210_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_5210() { testInvalid(test_5210_query); }

		private static final SubtypeQuery test_5211_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{!any, {int}}"));
		@Test public void test_5211() { testValid(test_5211_query); }

		private static final SubtypeQuery test_5212_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_5212() { testInvalid(test_5212_query); }

		private static final SubtypeQuery test_5213_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_5213() { testInvalid(test_5213_query); }

		private static final SubtypeQuery test_5214_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{any, !any}"));
		@Test public void test_5214() { testValid(test_5214_query); }

		private static final SubtypeQuery test_5215_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{{any}, !int}"));
		@Test public void test_5215() { testInvalid(test_5215_query); }

		private static final SubtypeQuery test_5216_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_5216() { testInvalid(test_5216_query); }

		private static final SubtypeQuery test_5217_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_5217() { testInvalid(test_5217_query); }

		private static final SubtypeQuery test_5218_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_5218() { testInvalid(test_5218_query); }

		private static final SubtypeQuery test_5219_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_5219() { testInvalid(test_5219_query); }

		private static final SubtypeQuery test_5220_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_5220() { testInvalid(test_5220_query); }

		private static final SubtypeQuery test_5221_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_5221() { testInvalid(test_5221_query); }

		private static final SubtypeQuery test_5222_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_5222() { testInvalid(test_5222_query); }

		private static final SubtypeQuery test_5223_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_5223() { testInvalid(test_5223_query); }

		private static final SubtypeQuery test_5224_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_5224() { testInvalid(test_5224_query); }

		private static final SubtypeQuery test_5225_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_5225() { testInvalid(test_5225_query); }

		private static final SubtypeQuery test_5226_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_5226() { testInvalid(test_5226_query); }

		private static final SubtypeQuery test_5227_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_5227() { testInvalid(test_5227_query); }

		private static final SubtypeQuery test_5228_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_5228() { testInvalid(test_5228_query); }

		private static final SubtypeQuery test_5229_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_5229() { testValid(test_5229_query); }

		private static final SubtypeQuery test_5230_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_5230() { testInvalid(test_5230_query); }

		private static final SubtypeQuery test_5231_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_5231() { testInvalid(test_5231_query); }

		private static final SubtypeQuery test_5232_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_5232() { testInvalid(test_5232_query); }

		private static final SubtypeQuery test_5233_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_5233() { testInvalid(test_5233_query); }

		private static final SubtypeQuery test_5234_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_5234() { testInvalid(test_5234_query); }

		private static final SubtypeQuery test_5235_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_5235() { testInvalid(test_5235_query); }

		private static final SubtypeQuery test_5236_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_5236() { testInvalid(test_5236_query); }

		private static final SubtypeQuery test_5237_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_5237() { testValid(test_5237_query); }

		private static final SubtypeQuery test_5238_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_5238() { testInvalid(test_5238_query); }

		private static final SubtypeQuery test_5239_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_5239() { testInvalid(test_5239_query); }

		private static final SubtypeQuery test_5240_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_5240() { testInvalid(test_5240_query); }

		private static final SubtypeQuery test_5241_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_5241() { testValid(test_5241_query); }

		private static final SubtypeQuery test_5242_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_5242() { testInvalid(test_5242_query); }

		private static final SubtypeQuery test_5243_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_5243() { testInvalid(test_5243_query); }

		private static final SubtypeQuery test_5244_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_5244() { testInvalid(test_5244_query); }

		private static final SubtypeQuery test_5245_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_5245() { testInvalid(test_5245_query); }

		private static final SubtypeQuery test_5246_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_5246() { testInvalid(test_5246_query); }

		private static final SubtypeQuery test_5247_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_5247() { testValid(test_5247_query); }

		private static final SubtypeQuery test_5248_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_5248() { testInvalid(test_5248_query); }

		private static final SubtypeQuery test_5249_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_5249() { testInvalid(test_5249_query); }

		private static final SubtypeQuery test_5250_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_5250() { testInvalid(test_5250_query); }

		private static final SubtypeQuery test_5251_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_5251() { testInvalid(test_5251_query); }

		private static final SubtypeQuery test_5252_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_5252() { testValid(test_5252_query); }

		private static final SubtypeQuery test_5253_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_5253() { testInvalid(test_5253_query); }

		private static final SubtypeQuery test_5254_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_5254() { testInvalid(test_5254_query); }

		private static final SubtypeQuery test_5255_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_5255() { testValid(test_5255_query); }

		private static final SubtypeQuery test_5256_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("(!any | any)"));
		@Test public void test_5256() { testInvalid(test_5256_query); }

		private static final SubtypeQuery test_5257_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("({int, any} | any)"));
		@Test public void test_5257() { testInvalid(test_5257_query); }

		private static final SubtypeQuery test_5258_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("({any, int} | any)"));
		@Test public void test_5258() { testInvalid(test_5258_query); }

		private static final SubtypeQuery test_5259_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("((int & int) | any)"));
		@Test public void test_5259() { testInvalid(test_5259_query); }

		private static final SubtypeQuery test_5260_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("({int, int} | int)"));
		@Test public void test_5260() { testInvalid(test_5260_query); }

		private static final SubtypeQuery test_5261_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("((any | any) | int)"));
		@Test public void test_5261() { testInvalid(test_5261_query); }

		private static final SubtypeQuery test_5262_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("((int | any) | int)"));
		@Test public void test_5262() { testInvalid(test_5262_query); }

		private static final SubtypeQuery test_5263_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("(any | {any})"));
		@Test public void test_5263() { testInvalid(test_5263_query); }

		private static final SubtypeQuery test_5264_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("(int | {any})"));
		@Test public void test_5264() { testInvalid(test_5264_query); }

		private static final SubtypeQuery test_5265_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_5265() { testInvalid(test_5265_query); }

		private static final SubtypeQuery test_5266_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("(any | {int})"));
		@Test public void test_5266() { testInvalid(test_5266_query); }

		private static final SubtypeQuery test_5267_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_5267() { testInvalid(test_5267_query); }

		private static final SubtypeQuery test_5268_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("(!int | !any)"));
		@Test public void test_5268() { testInvalid(test_5268_query); }

		private static final SubtypeQuery test_5269_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_5269() { testInvalid(test_5269_query); }

		private static final SubtypeQuery test_5270_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_5270() { testInvalid(test_5270_query); }

		private static final SubtypeQuery test_5271_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("({int} | !int)"));
		@Test public void test_5271() { testInvalid(test_5271_query); }

		private static final SubtypeQuery test_5272_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("(!any | !int)"));
		@Test public void test_5272() { testInvalid(test_5272_query); }

		private static final SubtypeQuery test_5273_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_5273() { testInvalid(test_5273_query); }

		private static final SubtypeQuery test_5274_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_5274() { testInvalid(test_5274_query); }

		private static final SubtypeQuery test_5275_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_5275() { testInvalid(test_5275_query); }

		private static final SubtypeQuery test_5276_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_5276() { testInvalid(test_5276_query); }

		private static final SubtypeQuery test_5277_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_5277() { testInvalid(test_5277_query); }

		private static final SubtypeQuery test_5278_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_5278() { testInvalid(test_5278_query); }

		private static final SubtypeQuery test_5279_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_5279() { testInvalid(test_5279_query); }

		private static final SubtypeQuery test_5280_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_5280() { testInvalid(test_5280_query); }

		private static final SubtypeQuery test_5281_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_5281() { testInvalid(test_5281_query); }

		private static final SubtypeQuery test_5282_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_5282() { testInvalid(test_5282_query); }

		private static final SubtypeQuery test_5283_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_5283() { testInvalid(test_5283_query); }

		private static final SubtypeQuery test_5284_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_5284() { testInvalid(test_5284_query); }

		private static final SubtypeQuery test_5285_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_5285() { testInvalid(test_5285_query); }

		private static final SubtypeQuery test_5286_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_5286() { testInvalid(test_5286_query); }

		private static final SubtypeQuery test_5287_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("(int | (any | int))"));
		@Test public void test_5287() { testInvalid(test_5287_query); }

		private static final SubtypeQuery test_5288_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_5288() { testInvalid(test_5288_query); }

		private static final SubtypeQuery test_5289_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_5289() { testInvalid(test_5289_query); }

		private static final SubtypeQuery test_5290_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_5290() { testInvalid(test_5290_query); }

		private static final SubtypeQuery test_5291_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_5291() { testInvalid(test_5291_query); }

		private static final SubtypeQuery test_5292_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_5292() { testInvalid(test_5292_query); }

		private static final SubtypeQuery test_5293_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_5293() { testInvalid(test_5293_query); }

		private static final SubtypeQuery test_5294_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("(int | (any & any))"));
		@Test public void test_5294() { testInvalid(test_5294_query); }

		private static final SubtypeQuery test_5295_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_5295() { testInvalid(test_5295_query); }

		private static final SubtypeQuery test_5296_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_5296() { testInvalid(test_5296_query); }

		private static final SubtypeQuery test_5297_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_5297() { testInvalid(test_5297_query); }

		private static final SubtypeQuery test_5298_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_5298() { testInvalid(test_5298_query); }

		private static final SubtypeQuery test_5299_query = createSubtypeQuery(parseWhiley("{int, (int & int)}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_5299() { testInvalid(test_5299_query); }

		private static final SubtypeQuery test_5300_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("!int"));
		@Test public void test_5300() { testInvalid(test_5300_query); }

		private static final SubtypeQuery test_5301_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("(any | any)"));
		@Test public void test_5301() { testInvalid(test_5301_query); }

		private static final SubtypeQuery test_5302_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("(any & any)"));
		@Test public void test_5302() { testInvalid(test_5302_query); }

		private static final SubtypeQuery test_5303_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{{int, int}}"));
		@Test public void test_5303() { testInvalid(test_5303_query); }

		private static final SubtypeQuery test_5304_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("!(int | int)"));
		@Test public void test_5304() { testInvalid(test_5304_query); }

		private static final SubtypeQuery test_5305_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_5305() { testInvalid(test_5305_query); }

		private static final SubtypeQuery test_5306_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_5306() { testInvalid(test_5306_query); }

		private static final SubtypeQuery test_5307_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{{any}, int}"));
		@Test public void test_5307() { testValid(test_5307_query); }

		private static final SubtypeQuery test_5308_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_5308() { testInvalid(test_5308_query); }

		private static final SubtypeQuery test_5309_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{(any | int), int}"));
		@Test public void test_5309() { testInvalid(test_5309_query); }

		private static final SubtypeQuery test_5310_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_5310() { testInvalid(test_5310_query); }

		private static final SubtypeQuery test_5311_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{!any, {int}}"));
		@Test public void test_5311() { testValid(test_5311_query); }

		private static final SubtypeQuery test_5312_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_5312() { testInvalid(test_5312_query); }

		private static final SubtypeQuery test_5313_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_5313() { testInvalid(test_5313_query); }

		private static final SubtypeQuery test_5314_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{any, !any}"));
		@Test public void test_5314() { testValid(test_5314_query); }

		private static final SubtypeQuery test_5315_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{{any}, !int}"));
		@Test public void test_5315() { testInvalid(test_5315_query); }

		private static final SubtypeQuery test_5316_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_5316() { testInvalid(test_5316_query); }

		private static final SubtypeQuery test_5317_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_5317() { testInvalid(test_5317_query); }

		private static final SubtypeQuery test_5318_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_5318() { testInvalid(test_5318_query); }

		private static final SubtypeQuery test_5319_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_5319() { testInvalid(test_5319_query); }

		private static final SubtypeQuery test_5320_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_5320() { testInvalid(test_5320_query); }

		private static final SubtypeQuery test_5321_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_5321() { testInvalid(test_5321_query); }

		private static final SubtypeQuery test_5322_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_5322() { testInvalid(test_5322_query); }

		private static final SubtypeQuery test_5323_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_5323() { testInvalid(test_5323_query); }

		private static final SubtypeQuery test_5324_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_5324() { testInvalid(test_5324_query); }

		private static final SubtypeQuery test_5325_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_5325() { testInvalid(test_5325_query); }

		private static final SubtypeQuery test_5326_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_5326() { testInvalid(test_5326_query); }

		private static final SubtypeQuery test_5327_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_5327() { testInvalid(test_5327_query); }

		private static final SubtypeQuery test_5328_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_5328() { testInvalid(test_5328_query); }

		private static final SubtypeQuery test_5329_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_5329() { testValid(test_5329_query); }

		private static final SubtypeQuery test_5330_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_5330() { testInvalid(test_5330_query); }

		private static final SubtypeQuery test_5331_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_5331() { testInvalid(test_5331_query); }

		private static final SubtypeQuery test_5332_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_5332() { testInvalid(test_5332_query); }

		private static final SubtypeQuery test_5333_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_5333() { testInvalid(test_5333_query); }

		private static final SubtypeQuery test_5334_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_5334() { testInvalid(test_5334_query); }

		private static final SubtypeQuery test_5335_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_5335() { testInvalid(test_5335_query); }

		private static final SubtypeQuery test_5336_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_5336() { testInvalid(test_5336_query); }

		private static final SubtypeQuery test_5337_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_5337() { testInvalid(test_5337_query); }

		private static final SubtypeQuery test_5338_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_5338() { testInvalid(test_5338_query); }

		private static final SubtypeQuery test_5339_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_5339() { testInvalid(test_5339_query); }

		private static final SubtypeQuery test_5340_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_5340() { testInvalid(test_5340_query); }

		private static final SubtypeQuery test_5341_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_5341() { testValid(test_5341_query); }

		private static final SubtypeQuery test_5342_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_5342() { testInvalid(test_5342_query); }

		private static final SubtypeQuery test_5343_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_5343() { testInvalid(test_5343_query); }

		private static final SubtypeQuery test_5344_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_5344() { testValid(test_5344_query); }

		private static final SubtypeQuery test_5345_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_5345() { testInvalid(test_5345_query); }

		private static final SubtypeQuery test_5346_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_5346() { testInvalid(test_5346_query); }

		private static final SubtypeQuery test_5347_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_5347() { testInvalid(test_5347_query); }

		private static final SubtypeQuery test_5348_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_5348() { testInvalid(test_5348_query); }

		private static final SubtypeQuery test_5349_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_5349() { testValid(test_5349_query); }

		private static final SubtypeQuery test_5350_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_5350() { testInvalid(test_5350_query); }

		private static final SubtypeQuery test_5351_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_5351() { testInvalid(test_5351_query); }

		private static final SubtypeQuery test_5352_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_5352() { testInvalid(test_5352_query); }

		private static final SubtypeQuery test_5353_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_5353() { testValid(test_5353_query); }

		private static final SubtypeQuery test_5354_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_5354() { testInvalid(test_5354_query); }

		private static final SubtypeQuery test_5355_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_5355() { testInvalid(test_5355_query); }

		private static final SubtypeQuery test_5356_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("(!any | any)"));
		@Test public void test_5356() { testInvalid(test_5356_query); }

		private static final SubtypeQuery test_5357_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("({int, any} | any)"));
		@Test public void test_5357() { testInvalid(test_5357_query); }

		private static final SubtypeQuery test_5358_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("({any, int} | any)"));
		@Test public void test_5358() { testInvalid(test_5358_query); }

		private static final SubtypeQuery test_5359_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("((int & int) | any)"));
		@Test public void test_5359() { testInvalid(test_5359_query); }

		private static final SubtypeQuery test_5360_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("({int, int} | int)"));
		@Test public void test_5360() { testInvalid(test_5360_query); }

		private static final SubtypeQuery test_5361_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("((any | any) | int)"));
		@Test public void test_5361() { testInvalid(test_5361_query); }

		private static final SubtypeQuery test_5362_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("((int | any) | int)"));
		@Test public void test_5362() { testInvalid(test_5362_query); }

		private static final SubtypeQuery test_5363_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("(any | {any})"));
		@Test public void test_5363() { testInvalid(test_5363_query); }

		private static final SubtypeQuery test_5364_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("(int | {any})"));
		@Test public void test_5364() { testInvalid(test_5364_query); }

		private static final SubtypeQuery test_5365_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_5365() { testInvalid(test_5365_query); }

		private static final SubtypeQuery test_5366_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("(any | {int})"));
		@Test public void test_5366() { testInvalid(test_5366_query); }

		private static final SubtypeQuery test_5367_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_5367() { testInvalid(test_5367_query); }

		private static final SubtypeQuery test_5368_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("(!int | !any)"));
		@Test public void test_5368() { testInvalid(test_5368_query); }

		private static final SubtypeQuery test_5369_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_5369() { testInvalid(test_5369_query); }

		private static final SubtypeQuery test_5370_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_5370() { testInvalid(test_5370_query); }

		private static final SubtypeQuery test_5371_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("({int} | !int)"));
		@Test public void test_5371() { testInvalid(test_5371_query); }

		private static final SubtypeQuery test_5372_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("(!any | !int)"));
		@Test public void test_5372() { testInvalid(test_5372_query); }

		private static final SubtypeQuery test_5373_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_5373() { testInvalid(test_5373_query); }

		private static final SubtypeQuery test_5374_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_5374() { testInvalid(test_5374_query); }

		private static final SubtypeQuery test_5375_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_5375() { testInvalid(test_5375_query); }

		private static final SubtypeQuery test_5376_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_5376() { testInvalid(test_5376_query); }

		private static final SubtypeQuery test_5377_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_5377() { testInvalid(test_5377_query); }

		private static final SubtypeQuery test_5378_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_5378() { testInvalid(test_5378_query); }

		private static final SubtypeQuery test_5379_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_5379() { testInvalid(test_5379_query); }

		private static final SubtypeQuery test_5380_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_5380() { testInvalid(test_5380_query); }

		private static final SubtypeQuery test_5381_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_5381() { testInvalid(test_5381_query); }

		private static final SubtypeQuery test_5382_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_5382() { testInvalid(test_5382_query); }

		private static final SubtypeQuery test_5383_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_5383() { testInvalid(test_5383_query); }

		private static final SubtypeQuery test_5384_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_5384() { testInvalid(test_5384_query); }

		private static final SubtypeQuery test_5385_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_5385() { testInvalid(test_5385_query); }

		private static final SubtypeQuery test_5386_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_5386() { testInvalid(test_5386_query); }

		private static final SubtypeQuery test_5387_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("(int | (any | int))"));
		@Test public void test_5387() { testInvalid(test_5387_query); }

		private static final SubtypeQuery test_5388_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_5388() { testInvalid(test_5388_query); }

		private static final SubtypeQuery test_5389_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_5389() { testInvalid(test_5389_query); }

		private static final SubtypeQuery test_5390_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_5390() { testInvalid(test_5390_query); }

		private static final SubtypeQuery test_5391_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_5391() { testInvalid(test_5391_query); }

		private static final SubtypeQuery test_5392_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_5392() { testInvalid(test_5392_query); }

		private static final SubtypeQuery test_5393_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_5393() { testInvalid(test_5393_query); }

		private static final SubtypeQuery test_5394_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("(int | (any & any))"));
		@Test public void test_5394() { testInvalid(test_5394_query); }

		private static final SubtypeQuery test_5395_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_5395() { testInvalid(test_5395_query); }

		private static final SubtypeQuery test_5396_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_5396() { testInvalid(test_5396_query); }

		private static final SubtypeQuery test_5397_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_5397() { testInvalid(test_5397_query); }

		private static final SubtypeQuery test_5398_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_5398() { testInvalid(test_5398_query); }

		private static final SubtypeQuery test_5399_query = createSubtypeQuery(parseWhiley("{{any}, (int & int)}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_5399() { testInvalid(test_5399_query); }

		private static final SubtypeQuery test_5400_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("!int"));
		@Test public void test_5400() { testInvalid(test_5400_query); }

		private static final SubtypeQuery test_5401_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("(any | any)"));
		@Test public void test_5401() { testInvalid(test_5401_query); }

		private static final SubtypeQuery test_5402_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("(any & any)"));
		@Test public void test_5402() { testInvalid(test_5402_query); }

		private static final SubtypeQuery test_5403_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{{int, int}}"));
		@Test public void test_5403() { testInvalid(test_5403_query); }

		private static final SubtypeQuery test_5404_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("!(int | int)"));
		@Test public void test_5404() { testInvalid(test_5404_query); }

		private static final SubtypeQuery test_5405_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_5405() { testInvalid(test_5405_query); }

		private static final SubtypeQuery test_5406_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_5406() { testInvalid(test_5406_query); }

		private static final SubtypeQuery test_5407_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{{any}, int}"));
		@Test public void test_5407() { testInvalid(test_5407_query); }

		private static final SubtypeQuery test_5408_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_5408() { testInvalid(test_5408_query); }

		private static final SubtypeQuery test_5409_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{(any | int), int}"));
		@Test public void test_5409() { testInvalid(test_5409_query); }

		private static final SubtypeQuery test_5410_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_5410() { testInvalid(test_5410_query); }

		private static final SubtypeQuery test_5411_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{!any, {int}}"));
		@Test public void test_5411() { testValid(test_5411_query); }

		private static final SubtypeQuery test_5412_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_5412() { testInvalid(test_5412_query); }

		private static final SubtypeQuery test_5413_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_5413() { testInvalid(test_5413_query); }

		private static final SubtypeQuery test_5414_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{any, !any}"));
		@Test public void test_5414() { testValid(test_5414_query); }

		private static final SubtypeQuery test_5415_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{{any}, !int}"));
		@Test public void test_5415() { testInvalid(test_5415_query); }

		private static final SubtypeQuery test_5416_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_5416() { testInvalid(test_5416_query); }

		private static final SubtypeQuery test_5417_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_5417() { testInvalid(test_5417_query); }

		private static final SubtypeQuery test_5418_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_5418() { testInvalid(test_5418_query); }

		private static final SubtypeQuery test_5419_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_5419() { testInvalid(test_5419_query); }

		private static final SubtypeQuery test_5420_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_5420() { testInvalid(test_5420_query); }

		private static final SubtypeQuery test_5421_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_5421() { testInvalid(test_5421_query); }

		private static final SubtypeQuery test_5422_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_5422() { testInvalid(test_5422_query); }

		private static final SubtypeQuery test_5423_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_5423() { testInvalid(test_5423_query); }

		private static final SubtypeQuery test_5424_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_5424() { testInvalid(test_5424_query); }

		private static final SubtypeQuery test_5425_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_5425() { testInvalid(test_5425_query); }

		private static final SubtypeQuery test_5426_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_5426() { testInvalid(test_5426_query); }

		private static final SubtypeQuery test_5427_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_5427() { testInvalid(test_5427_query); }

		private static final SubtypeQuery test_5428_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_5428() { testInvalid(test_5428_query); }

		private static final SubtypeQuery test_5429_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_5429() { testValid(test_5429_query); }

		private static final SubtypeQuery test_5430_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_5430() { testInvalid(test_5430_query); }

		private static final SubtypeQuery test_5431_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_5431() { testInvalid(test_5431_query); }

		private static final SubtypeQuery test_5432_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_5432() { testInvalid(test_5432_query); }

		private static final SubtypeQuery test_5433_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_5433() { testInvalid(test_5433_query); }

		private static final SubtypeQuery test_5434_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_5434() { testInvalid(test_5434_query); }

		private static final SubtypeQuery test_5435_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_5435() { testInvalid(test_5435_query); }

		private static final SubtypeQuery test_5436_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_5436() { testInvalid(test_5436_query); }

		private static final SubtypeQuery test_5437_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_5437() { testInvalid(test_5437_query); }

		private static final SubtypeQuery test_5438_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_5438() { testInvalid(test_5438_query); }

		private static final SubtypeQuery test_5439_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_5439() { testInvalid(test_5439_query); }

		private static final SubtypeQuery test_5440_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_5440() { testInvalid(test_5440_query); }

		private static final SubtypeQuery test_5441_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_5441() { testValid(test_5441_query); }

		private static final SubtypeQuery test_5442_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_5442() { testInvalid(test_5442_query); }

		private static final SubtypeQuery test_5443_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_5443() { testInvalid(test_5443_query); }

		private static final SubtypeQuery test_5444_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_5444() { testInvalid(test_5444_query); }

		private static final SubtypeQuery test_5445_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_5445() { testValid(test_5445_query); }

		private static final SubtypeQuery test_5446_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_5446() { testInvalid(test_5446_query); }

		private static final SubtypeQuery test_5447_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_5447() { testInvalid(test_5447_query); }

		private static final SubtypeQuery test_5448_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_5448() { testInvalid(test_5448_query); }

		private static final SubtypeQuery test_5449_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_5449() { testInvalid(test_5449_query); }

		private static final SubtypeQuery test_5450_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_5450() { testInvalid(test_5450_query); }

		private static final SubtypeQuery test_5451_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_5451() { testInvalid(test_5451_query); }

		private static final SubtypeQuery test_5452_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_5452() { testInvalid(test_5452_query); }

		private static final SubtypeQuery test_5453_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_5453() { testInvalid(test_5453_query); }

		private static final SubtypeQuery test_5454_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_5454() { testValid(test_5454_query); }

		private static final SubtypeQuery test_5455_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_5455() { testInvalid(test_5455_query); }

		private static final SubtypeQuery test_5456_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("(!any | any)"));
		@Test public void test_5456() { testInvalid(test_5456_query); }

		private static final SubtypeQuery test_5457_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("({int, any} | any)"));
		@Test public void test_5457() { testInvalid(test_5457_query); }

		private static final SubtypeQuery test_5458_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("({any, int} | any)"));
		@Test public void test_5458() { testInvalid(test_5458_query); }

		private static final SubtypeQuery test_5459_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("((int & int) | any)"));
		@Test public void test_5459() { testInvalid(test_5459_query); }

		private static final SubtypeQuery test_5460_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("({int, int} | int)"));
		@Test public void test_5460() { testInvalid(test_5460_query); }

		private static final SubtypeQuery test_5461_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("((any | any) | int)"));
		@Test public void test_5461() { testInvalid(test_5461_query); }

		private static final SubtypeQuery test_5462_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("((int | any) | int)"));
		@Test public void test_5462() { testInvalid(test_5462_query); }

		private static final SubtypeQuery test_5463_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("(any | {any})"));
		@Test public void test_5463() { testInvalid(test_5463_query); }

		private static final SubtypeQuery test_5464_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("(int | {any})"));
		@Test public void test_5464() { testInvalid(test_5464_query); }

		private static final SubtypeQuery test_5465_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_5465() { testInvalid(test_5465_query); }

		private static final SubtypeQuery test_5466_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("(any | {int})"));
		@Test public void test_5466() { testInvalid(test_5466_query); }

		private static final SubtypeQuery test_5467_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_5467() { testInvalid(test_5467_query); }

		private static final SubtypeQuery test_5468_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("(!int | !any)"));
		@Test public void test_5468() { testInvalid(test_5468_query); }

		private static final SubtypeQuery test_5469_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_5469() { testInvalid(test_5469_query); }

		private static final SubtypeQuery test_5470_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_5470() { testInvalid(test_5470_query); }

		private static final SubtypeQuery test_5471_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("({int} | !int)"));
		@Test public void test_5471() { testInvalid(test_5471_query); }

		private static final SubtypeQuery test_5472_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("(!any | !int)"));
		@Test public void test_5472() { testInvalid(test_5472_query); }

		private static final SubtypeQuery test_5473_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_5473() { testInvalid(test_5473_query); }

		private static final SubtypeQuery test_5474_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_5474() { testInvalid(test_5474_query); }

		private static final SubtypeQuery test_5475_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_5475() { testInvalid(test_5475_query); }

		private static final SubtypeQuery test_5476_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_5476() { testInvalid(test_5476_query); }

		private static final SubtypeQuery test_5477_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_5477() { testInvalid(test_5477_query); }

		private static final SubtypeQuery test_5478_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_5478() { testInvalid(test_5478_query); }

		private static final SubtypeQuery test_5479_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_5479() { testInvalid(test_5479_query); }

		private static final SubtypeQuery test_5480_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_5480() { testInvalid(test_5480_query); }

		private static final SubtypeQuery test_5481_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_5481() { testInvalid(test_5481_query); }

		private static final SubtypeQuery test_5482_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_5482() { testInvalid(test_5482_query); }

		private static final SubtypeQuery test_5483_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_5483() { testInvalid(test_5483_query); }

		private static final SubtypeQuery test_5484_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_5484() { testInvalid(test_5484_query); }

		private static final SubtypeQuery test_5485_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_5485() { testInvalid(test_5485_query); }

		private static final SubtypeQuery test_5486_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_5486() { testInvalid(test_5486_query); }

		private static final SubtypeQuery test_5487_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("(int | (any | int))"));
		@Test public void test_5487() { testInvalid(test_5487_query); }

		private static final SubtypeQuery test_5488_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_5488() { testInvalid(test_5488_query); }

		private static final SubtypeQuery test_5489_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_5489() { testInvalid(test_5489_query); }

		private static final SubtypeQuery test_5490_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_5490() { testInvalid(test_5490_query); }

		private static final SubtypeQuery test_5491_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_5491() { testInvalid(test_5491_query); }

		private static final SubtypeQuery test_5492_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_5492() { testInvalid(test_5492_query); }

		private static final SubtypeQuery test_5493_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_5493() { testInvalid(test_5493_query); }

		private static final SubtypeQuery test_5494_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("(int | (any & any))"));
		@Test public void test_5494() { testInvalid(test_5494_query); }

		private static final SubtypeQuery test_5495_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_5495() { testInvalid(test_5495_query); }

		private static final SubtypeQuery test_5496_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_5496() { testInvalid(test_5496_query); }

		private static final SubtypeQuery test_5497_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_5497() { testInvalid(test_5497_query); }

		private static final SubtypeQuery test_5498_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_5498() { testInvalid(test_5498_query); }

		private static final SubtypeQuery test_5499_query = createSubtypeQuery(parseWhiley("{{any, int}, (int & int)}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_5499() { testInvalid(test_5499_query); }

		private static final SubtypeQuery test_5500_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("!int"));
		@Test public void test_5500() { testInvalid(test_5500_query); }

		private static final SubtypeQuery test_5501_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("(any | any)"));
		@Test public void test_5501() { testInvalid(test_5501_query); }

		private static final SubtypeQuery test_5502_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("(any & any)"));
		@Test public void test_5502() { testInvalid(test_5502_query); }

		private static final SubtypeQuery test_5503_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{{int, int}}"));
		@Test public void test_5503() { testInvalid(test_5503_query); }

		private static final SubtypeQuery test_5504_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("!(int | int)"));
		@Test public void test_5504() { testInvalid(test_5504_query); }

		private static final SubtypeQuery test_5505_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{{any, any}, any}"));
		@Test public void test_5505() { testInvalid(test_5505_query); }

		private static final SubtypeQuery test_5506_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{{any, int}, any}"));
		@Test public void test_5506() { testInvalid(test_5506_query); }

		private static final SubtypeQuery test_5507_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{{any}, int}"));
		@Test public void test_5507() { testInvalid(test_5507_query); }

		private static final SubtypeQuery test_5508_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{{any, any}, int}"));
		@Test public void test_5508() { testInvalid(test_5508_query); }

		private static final SubtypeQuery test_5509_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{(any | int), int}"));
		@Test public void test_5509() { testInvalid(test_5509_query); }

		private static final SubtypeQuery test_5510_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_5510() { testInvalid(test_5510_query); }

		private static final SubtypeQuery test_5511_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{!any, {int}}"));
		@Test public void test_5511() { testValid(test_5511_query); }

		private static final SubtypeQuery test_5512_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_5512() { testInvalid(test_5512_query); }

		private static final SubtypeQuery test_5513_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_5513() { testInvalid(test_5513_query); }

		private static final SubtypeQuery test_5514_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{any, !any}"));
		@Test public void test_5514() { testValid(test_5514_query); }

		private static final SubtypeQuery test_5515_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{{any}, !int}"));
		@Test public void test_5515() { testInvalid(test_5515_query); }

		private static final SubtypeQuery test_5516_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_5516() { testInvalid(test_5516_query); }

		private static final SubtypeQuery test_5517_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_5517() { testInvalid(test_5517_query); }

		private static final SubtypeQuery test_5518_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{(int & int), !int}"));
		@Test public void test_5518() { testInvalid(test_5518_query); }

		private static final SubtypeQuery test_5519_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_5519() { testInvalid(test_5519_query); }

		private static final SubtypeQuery test_5520_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_5520() { testInvalid(test_5520_query); }

		private static final SubtypeQuery test_5521_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_5521() { testInvalid(test_5521_query); }

		private static final SubtypeQuery test_5522_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_5522() { testInvalid(test_5522_query); }

		private static final SubtypeQuery test_5523_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_5523() { testInvalid(test_5523_query); }

		private static final SubtypeQuery test_5524_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_5524() { testInvalid(test_5524_query); }

		private static final SubtypeQuery test_5525_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_5525() { testInvalid(test_5525_query); }

		private static final SubtypeQuery test_5526_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{any, {any, int}}"));
		@Test public void test_5526() { testInvalid(test_5526_query); }

		private static final SubtypeQuery test_5527_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_5527() { testInvalid(test_5527_query); }

		private static final SubtypeQuery test_5528_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_5528() { testInvalid(test_5528_query); }

		private static final SubtypeQuery test_5529_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_5529() { testValid(test_5529_query); }

		private static final SubtypeQuery test_5530_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_5530() { testInvalid(test_5530_query); }

		private static final SubtypeQuery test_5531_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_5531() { testInvalid(test_5531_query); }

		private static final SubtypeQuery test_5532_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_5532() { testInvalid(test_5532_query); }

		private static final SubtypeQuery test_5533_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_5533() { testInvalid(test_5533_query); }

		private static final SubtypeQuery test_5534_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_5534() { testInvalid(test_5534_query); }

		private static final SubtypeQuery test_5535_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_5535() { testInvalid(test_5535_query); }

		private static final SubtypeQuery test_5536_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_5536() { testInvalid(test_5536_query); }

		private static final SubtypeQuery test_5537_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{int, (int | int)}"));
		@Test public void test_5537() { testValid(test_5537_query); }

		private static final SubtypeQuery test_5538_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_5538() { testInvalid(test_5538_query); }

		private static final SubtypeQuery test_5539_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{any, (any & any)}"));
		@Test public void test_5539() { testInvalid(test_5539_query); }

		private static final SubtypeQuery test_5540_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_5540() { testInvalid(test_5540_query); }

		private static final SubtypeQuery test_5541_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_5541() { testValid(test_5541_query); }

		private static final SubtypeQuery test_5542_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_5542() { testInvalid(test_5542_query); }

		private static final SubtypeQuery test_5543_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_5543() { testInvalid(test_5543_query); }

		private static final SubtypeQuery test_5544_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_5544() { testInvalid(test_5544_query); }

		private static final SubtypeQuery test_5545_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_5545() { testInvalid(test_5545_query); }

		private static final SubtypeQuery test_5546_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_5546() { testInvalid(test_5546_query); }

		private static final SubtypeQuery test_5547_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_5547() { testValid(test_5547_query); }

		private static final SubtypeQuery test_5548_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{any, (any & int)}"));
		@Test public void test_5548() { testInvalid(test_5548_query); }

		private static final SubtypeQuery test_5549_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_5549() { testInvalid(test_5549_query); }

		private static final SubtypeQuery test_5550_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_5550() { testInvalid(test_5550_query); }

		private static final SubtypeQuery test_5551_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_5551() { testInvalid(test_5551_query); }

		private static final SubtypeQuery test_5552_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{int, (int & int)}"));
		@Test public void test_5552() { testValid(test_5552_query); }

		private static final SubtypeQuery test_5553_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_5553() { testInvalid(test_5553_query); }

		private static final SubtypeQuery test_5554_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_5554() { testInvalid(test_5554_query); }

		private static final SubtypeQuery test_5555_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_5555() { testValid(test_5555_query); }

		private static final SubtypeQuery test_5556_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("(!any | any)"));
		@Test public void test_5556() { testInvalid(test_5556_query); }

		private static final SubtypeQuery test_5557_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("({int, any} | any)"));
		@Test public void test_5557() { testInvalid(test_5557_query); }

		private static final SubtypeQuery test_5558_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("({any, int} | any)"));
		@Test public void test_5558() { testInvalid(test_5558_query); }

		private static final SubtypeQuery test_5559_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("((int & int) | any)"));
		@Test public void test_5559() { testInvalid(test_5559_query); }

		private static final SubtypeQuery test_5560_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("({int, int} | int)"));
		@Test public void test_5560() { testInvalid(test_5560_query); }

		private static final SubtypeQuery test_5561_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("((any | any) | int)"));
		@Test public void test_5561() { testInvalid(test_5561_query); }

		private static final SubtypeQuery test_5562_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("((int | any) | int)"));
		@Test public void test_5562() { testInvalid(test_5562_query); }

		private static final SubtypeQuery test_5563_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("(any | {any})"));
		@Test public void test_5563() { testInvalid(test_5563_query); }

		private static final SubtypeQuery test_5564_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("(int | {any})"));
		@Test public void test_5564() { testInvalid(test_5564_query); }

		private static final SubtypeQuery test_5565_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("({any, any} | {any})"));
		@Test public void test_5565() { testInvalid(test_5565_query); }

		private static final SubtypeQuery test_5566_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("(any | {int})"));
		@Test public void test_5566() { testInvalid(test_5566_query); }

		private static final SubtypeQuery test_5567_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("((any | any) | {int})"));
		@Test public void test_5567() { testInvalid(test_5567_query); }

		private static final SubtypeQuery test_5568_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("(!int | !any)"));
		@Test public void test_5568() { testInvalid(test_5568_query); }

		private static final SubtypeQuery test_5569_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("({int, any} | !any)"));
		@Test public void test_5569() { testInvalid(test_5569_query); }

		private static final SubtypeQuery test_5570_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("((any | any) | !any)"));
		@Test public void test_5570() { testInvalid(test_5570_query); }

		private static final SubtypeQuery test_5571_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("({int} | !int)"));
		@Test public void test_5571() { testInvalid(test_5571_query); }

		private static final SubtypeQuery test_5572_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("(!any | !int)"));
		@Test public void test_5572() { testInvalid(test_5572_query); }

		private static final SubtypeQuery test_5573_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("(!int | {any, any})"));
		@Test public void test_5573() { testInvalid(test_5573_query); }

		private static final SubtypeQuery test_5574_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_5574() { testInvalid(test_5574_query); }

		private static final SubtypeQuery test_5575_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_5575() { testInvalid(test_5575_query); }

		private static final SubtypeQuery test_5576_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_5576() { testInvalid(test_5576_query); }

		private static final SubtypeQuery test_5577_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_5577() { testInvalid(test_5577_query); }

		private static final SubtypeQuery test_5578_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_5578() { testInvalid(test_5578_query); }

		private static final SubtypeQuery test_5579_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_5579() { testInvalid(test_5579_query); }

		private static final SubtypeQuery test_5580_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("({int} | (any | any))"));
		@Test public void test_5580() { testInvalid(test_5580_query); }

		private static final SubtypeQuery test_5581_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_5581() { testInvalid(test_5581_query); }

		private static final SubtypeQuery test_5582_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_5582() { testInvalid(test_5582_query); }

		private static final SubtypeQuery test_5583_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_5583() { testInvalid(test_5583_query); }

		private static final SubtypeQuery test_5584_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_5584() { testInvalid(test_5584_query); }

		private static final SubtypeQuery test_5585_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_5585() { testInvalid(test_5585_query); }

		private static final SubtypeQuery test_5586_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_5586() { testInvalid(test_5586_query); }

		private static final SubtypeQuery test_5587_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("(int | (any | int))"));
		@Test public void test_5587() { testInvalid(test_5587_query); }

		private static final SubtypeQuery test_5588_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_5588() { testInvalid(test_5588_query); }

		private static final SubtypeQuery test_5589_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_5589() { testInvalid(test_5589_query); }

		private static final SubtypeQuery test_5590_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_5590() { testInvalid(test_5590_query); }

		private static final SubtypeQuery test_5591_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_5591() { testInvalid(test_5591_query); }

		private static final SubtypeQuery test_5592_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("(!any | (int | int))"));
		@Test public void test_5592() { testInvalid(test_5592_query); }

		private static final SubtypeQuery test_5593_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_5593() { testInvalid(test_5593_query); }

		private static final SubtypeQuery test_5594_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("(int | (any & any))"));
		@Test public void test_5594() { testInvalid(test_5594_query); }

		private static final SubtypeQuery test_5595_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("(!any | (any & any))"));
		@Test public void test_5595() { testInvalid(test_5595_query); }

		private static final SubtypeQuery test_5596_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_5596() { testInvalid(test_5596_query); }

		private static final SubtypeQuery test_5597_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_5597() { testInvalid(test_5597_query); }

		private static final SubtypeQuery test_5598_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_5598() { testInvalid(test_5598_query); }

		private static final SubtypeQuery test_5599_query = createSubtypeQuery(parseWhiley("{(any & int), (int & int)}"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_5599() { testInvalid(test_5599_query); }

		private static final SubtypeQuery test_5600_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("!int"));
		@Test public void test_5600() { testValid(test_5600_query); }

		private static final SubtypeQuery test_5601_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("(any | any)"));
		@Test public void test_5601() { testValid(test_5601_query); }

		private static final SubtypeQuery test_5602_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("(any & any)"));
		@Test public void test_5602() { testValid(test_5602_query); }

		private static final SubtypeQuery test_5603_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{{int, int}}"));
		@Test public void test_5603() { testValid(test_5603_query); }

		private static final SubtypeQuery test_5604_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("!(int | int)"));
		@Test public void test_5604() { testValid(test_5604_query); }

		private static final SubtypeQuery test_5605_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{{any, any}, any}"));
		@Test public void test_5605() { testValid(test_5605_query); }

		private static final SubtypeQuery test_5606_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{{any, int}, any}"));
		@Test public void test_5606() { testValid(test_5606_query); }

		private static final SubtypeQuery test_5607_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{{any}, int}"));
		@Test public void test_5607() { testValid(test_5607_query); }

		private static final SubtypeQuery test_5608_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{{any, any}, int}"));
		@Test public void test_5608() { testValid(test_5608_query); }

		private static final SubtypeQuery test_5609_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{(any | int), int}"));
		@Test public void test_5609() { testValid(test_5609_query); }

		private static final SubtypeQuery test_5610_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_5610() { testValid(test_5610_query); }

		private static final SubtypeQuery test_5611_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{!any, {int}}"));
		@Test public void test_5611() { testValid(test_5611_query); }

		private static final SubtypeQuery test_5612_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_5612() { testValid(test_5612_query); }

		private static final SubtypeQuery test_5613_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_5613() { testValid(test_5613_query); }

		private static final SubtypeQuery test_5614_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{any, !any}"));
		@Test public void test_5614() { testValid(test_5614_query); }

		private static final SubtypeQuery test_5615_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{{any}, !int}"));
		@Test public void test_5615() { testValid(test_5615_query); }

		private static final SubtypeQuery test_5616_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_5616() { testValid(test_5616_query); }

		private static final SubtypeQuery test_5617_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_5617() { testValid(test_5617_query); }

		private static final SubtypeQuery test_5618_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{(int & int), !int}"));
		@Test public void test_5618() { testValid(test_5618_query); }

		private static final SubtypeQuery test_5619_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_5619() { testValid(test_5619_query); }

		private static final SubtypeQuery test_5620_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_5620() { testValid(test_5620_query); }

		private static final SubtypeQuery test_5621_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_5621() { testValid(test_5621_query); }

		private static final SubtypeQuery test_5622_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_5622() { testValid(test_5622_query); }

		private static final SubtypeQuery test_5623_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_5623() { testValid(test_5623_query); }

		private static final SubtypeQuery test_5624_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_5624() { testValid(test_5624_query); }

		private static final SubtypeQuery test_5625_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_5625() { testValid(test_5625_query); }

		private static final SubtypeQuery test_5626_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{any, {any, int}}"));
		@Test public void test_5626() { testValid(test_5626_query); }

		private static final SubtypeQuery test_5627_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_5627() { testValid(test_5627_query); }

		private static final SubtypeQuery test_5628_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_5628() { testValid(test_5628_query); }

		private static final SubtypeQuery test_5629_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_5629() { testValid(test_5629_query); }

		private static final SubtypeQuery test_5630_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_5630() { testValid(test_5630_query); }

		private static final SubtypeQuery test_5631_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_5631() { testValid(test_5631_query); }

		private static final SubtypeQuery test_5632_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_5632() { testValid(test_5632_query); }

		private static final SubtypeQuery test_5633_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_5633() { testValid(test_5633_query); }

		private static final SubtypeQuery test_5634_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_5634() { testValid(test_5634_query); }

		private static final SubtypeQuery test_5635_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_5635() { testValid(test_5635_query); }

		private static final SubtypeQuery test_5636_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_5636() { testValid(test_5636_query); }

		private static final SubtypeQuery test_5637_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{int, (int | int)}"));
		@Test public void test_5637() { testValid(test_5637_query); }

		private static final SubtypeQuery test_5638_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_5638() { testValid(test_5638_query); }

		private static final SubtypeQuery test_5639_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{any, (any & any)}"));
		@Test public void test_5639() { testValid(test_5639_query); }

		private static final SubtypeQuery test_5640_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_5640() { testValid(test_5640_query); }

		private static final SubtypeQuery test_5641_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_5641() { testValid(test_5641_query); }

		private static final SubtypeQuery test_5642_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_5642() { testValid(test_5642_query); }

		private static final SubtypeQuery test_5643_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_5643() { testValid(test_5643_query); }

		private static final SubtypeQuery test_5644_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_5644() { testValid(test_5644_query); }

		private static final SubtypeQuery test_5645_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_5645() { testValid(test_5645_query); }

		private static final SubtypeQuery test_5646_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_5646() { testValid(test_5646_query); }

		private static final SubtypeQuery test_5647_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_5647() { testValid(test_5647_query); }

		private static final SubtypeQuery test_5648_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{any, (any & int)}"));
		@Test public void test_5648() { testValid(test_5648_query); }

		private static final SubtypeQuery test_5649_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_5649() { testValid(test_5649_query); }

		private static final SubtypeQuery test_5650_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_5650() { testValid(test_5650_query); }

		private static final SubtypeQuery test_5651_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_5651() { testValid(test_5651_query); }

		private static final SubtypeQuery test_5652_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{int, (int & int)}"));
		@Test public void test_5652() { testValid(test_5652_query); }

		private static final SubtypeQuery test_5653_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_5653() { testValid(test_5653_query); }

		private static final SubtypeQuery test_5654_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_5654() { testValid(test_5654_query); }

		private static final SubtypeQuery test_5655_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_5655() { testValid(test_5655_query); }

		private static final SubtypeQuery test_5656_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("(!any | any)"));
		@Test public void test_5656() { testValid(test_5656_query); }

		private static final SubtypeQuery test_5657_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("({int, any} | any)"));
		@Test public void test_5657() { testValid(test_5657_query); }

		private static final SubtypeQuery test_5658_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("({any, int} | any)"));
		@Test public void test_5658() { testValid(test_5658_query); }

		private static final SubtypeQuery test_5659_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("((int & int) | any)"));
		@Test public void test_5659() { testValid(test_5659_query); }

		private static final SubtypeQuery test_5660_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("({int, int} | int)"));
		@Test public void test_5660() { testValid(test_5660_query); }

		private static final SubtypeQuery test_5661_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("((any | any) | int)"));
		@Test public void test_5661() { testValid(test_5661_query); }

		private static final SubtypeQuery test_5662_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("((int | any) | int)"));
		@Test public void test_5662() { testValid(test_5662_query); }

		private static final SubtypeQuery test_5663_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("(any | {any})"));
		@Test public void test_5663() { testValid(test_5663_query); }

		private static final SubtypeQuery test_5664_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("(int | {any})"));
		@Test public void test_5664() { testValid(test_5664_query); }

		private static final SubtypeQuery test_5665_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("({any, any} | {any})"));
		@Test public void test_5665() { testValid(test_5665_query); }

		private static final SubtypeQuery test_5666_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("(any | {int})"));
		@Test public void test_5666() { testValid(test_5666_query); }

		private static final SubtypeQuery test_5667_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("((any | any) | {int})"));
		@Test public void test_5667() { testValid(test_5667_query); }

		private static final SubtypeQuery test_5668_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("(!int | !any)"));
		@Test public void test_5668() { testValid(test_5668_query); }

		private static final SubtypeQuery test_5669_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("({int, any} | !any)"));
		@Test public void test_5669() { testValid(test_5669_query); }

		private static final SubtypeQuery test_5670_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("((any | any) | !any)"));
		@Test public void test_5670() { testValid(test_5670_query); }

		private static final SubtypeQuery test_5671_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("({int} | !int)"));
		@Test public void test_5671() { testValid(test_5671_query); }

		private static final SubtypeQuery test_5672_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("(!any | !int)"));
		@Test public void test_5672() { testValid(test_5672_query); }

		private static final SubtypeQuery test_5673_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("(!int | {any, any})"));
		@Test public void test_5673() { testValid(test_5673_query); }

		private static final SubtypeQuery test_5674_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_5674() { testValid(test_5674_query); }

		private static final SubtypeQuery test_5675_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_5675() { testValid(test_5675_query); }

		private static final SubtypeQuery test_5676_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_5676() { testValid(test_5676_query); }

		private static final SubtypeQuery test_5677_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_5677() { testValid(test_5677_query); }

		private static final SubtypeQuery test_5678_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_5678() { testValid(test_5678_query); }

		private static final SubtypeQuery test_5679_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_5679() { testValid(test_5679_query); }

		private static final SubtypeQuery test_5680_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("({int} | (any | any))"));
		@Test public void test_5680() { testValid(test_5680_query); }

		private static final SubtypeQuery test_5681_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_5681() { testValid(test_5681_query); }

		private static final SubtypeQuery test_5682_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_5682() { testValid(test_5682_query); }

		private static final SubtypeQuery test_5683_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_5683() { testValid(test_5683_query); }

		private static final SubtypeQuery test_5684_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_5684() { testValid(test_5684_query); }

		private static final SubtypeQuery test_5685_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_5685() { testValid(test_5685_query); }

		private static final SubtypeQuery test_5686_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_5686() { testValid(test_5686_query); }

		private static final SubtypeQuery test_5687_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("(int | (any | int))"));
		@Test public void test_5687() { testValid(test_5687_query); }

		private static final SubtypeQuery test_5688_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_5688() { testValid(test_5688_query); }

		private static final SubtypeQuery test_5689_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_5689() { testValid(test_5689_query); }

		private static final SubtypeQuery test_5690_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_5690() { testValid(test_5690_query); }

		private static final SubtypeQuery test_5691_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_5691() { testValid(test_5691_query); }

		private static final SubtypeQuery test_5692_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("(!any | (int | int))"));
		@Test public void test_5692() { testValid(test_5692_query); }

		private static final SubtypeQuery test_5693_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_5693() { testValid(test_5693_query); }

		private static final SubtypeQuery test_5694_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("(int | (any & any))"));
		@Test public void test_5694() { testValid(test_5694_query); }

		private static final SubtypeQuery test_5695_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("(!any | (any & any))"));
		@Test public void test_5695() { testValid(test_5695_query); }

		private static final SubtypeQuery test_5696_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_5696() { testValid(test_5696_query); }

		private static final SubtypeQuery test_5697_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_5697() { testValid(test_5697_query); }

		private static final SubtypeQuery test_5698_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_5698() { testValid(test_5698_query); }

		private static final SubtypeQuery test_5699_query = createSubtypeQuery(parseWhiley("(!any | any)"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_5699() { testValid(test_5699_query); }

		private static final SubtypeQuery test_5700_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("!int"));
		@Test public void test_5700() { testValid(test_5700_query); }

		private static final SubtypeQuery test_5701_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("(any | any)"));
		@Test public void test_5701() { testValid(test_5701_query); }

		private static final SubtypeQuery test_5702_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("(any & any)"));
		@Test public void test_5702() { testValid(test_5702_query); }

		private static final SubtypeQuery test_5703_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{{int, int}}"));
		@Test public void test_5703() { testValid(test_5703_query); }

		private static final SubtypeQuery test_5704_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("!(int | int)"));
		@Test public void test_5704() { testValid(test_5704_query); }

		private static final SubtypeQuery test_5705_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{{any, any}, any}"));
		@Test public void test_5705() { testValid(test_5705_query); }

		private static final SubtypeQuery test_5706_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{{any, int}, any}"));
		@Test public void test_5706() { testValid(test_5706_query); }

		private static final SubtypeQuery test_5707_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{{any}, int}"));
		@Test public void test_5707() { testValid(test_5707_query); }

		private static final SubtypeQuery test_5708_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{{any, any}, int}"));
		@Test public void test_5708() { testValid(test_5708_query); }

		private static final SubtypeQuery test_5709_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{(any | int), int}"));
		@Test public void test_5709() { testValid(test_5709_query); }

		private static final SubtypeQuery test_5710_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_5710() { testValid(test_5710_query); }

		private static final SubtypeQuery test_5711_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{!any, {int}}"));
		@Test public void test_5711() { testValid(test_5711_query); }

		private static final SubtypeQuery test_5712_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_5712() { testValid(test_5712_query); }

		private static final SubtypeQuery test_5713_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_5713() { testValid(test_5713_query); }

		private static final SubtypeQuery test_5714_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{any, !any}"));
		@Test public void test_5714() { testValid(test_5714_query); }

		private static final SubtypeQuery test_5715_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{{any}, !int}"));
		@Test public void test_5715() { testValid(test_5715_query); }

		private static final SubtypeQuery test_5716_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_5716() { testValid(test_5716_query); }

		private static final SubtypeQuery test_5717_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_5717() { testValid(test_5717_query); }

		private static final SubtypeQuery test_5718_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{(int & int), !int}"));
		@Test public void test_5718() { testValid(test_5718_query); }

		private static final SubtypeQuery test_5719_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_5719() { testValid(test_5719_query); }

		private static final SubtypeQuery test_5720_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_5720() { testValid(test_5720_query); }

		private static final SubtypeQuery test_5721_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_5721() { testValid(test_5721_query); }

		private static final SubtypeQuery test_5722_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_5722() { testValid(test_5722_query); }

		private static final SubtypeQuery test_5723_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_5723() { testValid(test_5723_query); }

		private static final SubtypeQuery test_5724_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_5724() { testValid(test_5724_query); }

		private static final SubtypeQuery test_5725_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_5725() { testValid(test_5725_query); }

		private static final SubtypeQuery test_5726_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{any, {any, int}}"));
		@Test public void test_5726() { testValid(test_5726_query); }

		private static final SubtypeQuery test_5727_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_5727() { testValid(test_5727_query); }

		private static final SubtypeQuery test_5728_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_5728() { testValid(test_5728_query); }

		private static final SubtypeQuery test_5729_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_5729() { testValid(test_5729_query); }

		private static final SubtypeQuery test_5730_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_5730() { testValid(test_5730_query); }

		private static final SubtypeQuery test_5731_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_5731() { testValid(test_5731_query); }

		private static final SubtypeQuery test_5732_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_5732() { testValid(test_5732_query); }

		private static final SubtypeQuery test_5733_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_5733() { testValid(test_5733_query); }

		private static final SubtypeQuery test_5734_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_5734() { testValid(test_5734_query); }

		private static final SubtypeQuery test_5735_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_5735() { testValid(test_5735_query); }

		private static final SubtypeQuery test_5736_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_5736() { testValid(test_5736_query); }

		private static final SubtypeQuery test_5737_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{int, (int | int)}"));
		@Test public void test_5737() { testValid(test_5737_query); }

		private static final SubtypeQuery test_5738_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_5738() { testValid(test_5738_query); }

		private static final SubtypeQuery test_5739_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{any, (any & any)}"));
		@Test public void test_5739() { testValid(test_5739_query); }

		private static final SubtypeQuery test_5740_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_5740() { testValid(test_5740_query); }

		private static final SubtypeQuery test_5741_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_5741() { testValid(test_5741_query); }

		private static final SubtypeQuery test_5742_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_5742() { testValid(test_5742_query); }

		private static final SubtypeQuery test_5743_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_5743() { testValid(test_5743_query); }

		private static final SubtypeQuery test_5744_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_5744() { testValid(test_5744_query); }

		private static final SubtypeQuery test_5745_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_5745() { testValid(test_5745_query); }

		private static final SubtypeQuery test_5746_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_5746() { testValid(test_5746_query); }

		private static final SubtypeQuery test_5747_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_5747() { testValid(test_5747_query); }

		private static final SubtypeQuery test_5748_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{any, (any & int)}"));
		@Test public void test_5748() { testValid(test_5748_query); }

		private static final SubtypeQuery test_5749_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_5749() { testValid(test_5749_query); }

		private static final SubtypeQuery test_5750_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_5750() { testValid(test_5750_query); }

		private static final SubtypeQuery test_5751_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_5751() { testValid(test_5751_query); }

		private static final SubtypeQuery test_5752_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{int, (int & int)}"));
		@Test public void test_5752() { testValid(test_5752_query); }

		private static final SubtypeQuery test_5753_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_5753() { testValid(test_5753_query); }

		private static final SubtypeQuery test_5754_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_5754() { testValid(test_5754_query); }

		private static final SubtypeQuery test_5755_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_5755() { testValid(test_5755_query); }

		private static final SubtypeQuery test_5756_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("(!any | any)"));
		@Test public void test_5756() { testValid(test_5756_query); }

		private static final SubtypeQuery test_5757_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("({int, any} | any)"));
		@Test public void test_5757() { testValid(test_5757_query); }

		private static final SubtypeQuery test_5758_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("({any, int} | any)"));
		@Test public void test_5758() { testValid(test_5758_query); }

		private static final SubtypeQuery test_5759_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("((int & int) | any)"));
		@Test public void test_5759() { testValid(test_5759_query); }

		private static final SubtypeQuery test_5760_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("({int, int} | int)"));
		@Test public void test_5760() { testValid(test_5760_query); }

		private static final SubtypeQuery test_5761_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("((any | any) | int)"));
		@Test public void test_5761() { testValid(test_5761_query); }

		private static final SubtypeQuery test_5762_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("((int | any) | int)"));
		@Test public void test_5762() { testValid(test_5762_query); }

		private static final SubtypeQuery test_5763_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("(any | {any})"));
		@Test public void test_5763() { testValid(test_5763_query); }

		private static final SubtypeQuery test_5764_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("(int | {any})"));
		@Test public void test_5764() { testValid(test_5764_query); }

		private static final SubtypeQuery test_5765_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("({any, any} | {any})"));
		@Test public void test_5765() { testValid(test_5765_query); }

		private static final SubtypeQuery test_5766_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("(any | {int})"));
		@Test public void test_5766() { testValid(test_5766_query); }

		private static final SubtypeQuery test_5767_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("((any | any) | {int})"));
		@Test public void test_5767() { testValid(test_5767_query); }

		private static final SubtypeQuery test_5768_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("(!int | !any)"));
		@Test public void test_5768() { testValid(test_5768_query); }

		private static final SubtypeQuery test_5769_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("({int, any} | !any)"));
		@Test public void test_5769() { testValid(test_5769_query); }

		private static final SubtypeQuery test_5770_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("((any | any) | !any)"));
		@Test public void test_5770() { testValid(test_5770_query); }

		private static final SubtypeQuery test_5771_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("({int} | !int)"));
		@Test public void test_5771() { testValid(test_5771_query); }

		private static final SubtypeQuery test_5772_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("(!any | !int)"));
		@Test public void test_5772() { testValid(test_5772_query); }

		private static final SubtypeQuery test_5773_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("(!int | {any, any})"));
		@Test public void test_5773() { testValid(test_5773_query); }

		private static final SubtypeQuery test_5774_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_5774() { testValid(test_5774_query); }

		private static final SubtypeQuery test_5775_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_5775() { testValid(test_5775_query); }

		private static final SubtypeQuery test_5776_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_5776() { testValid(test_5776_query); }

		private static final SubtypeQuery test_5777_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_5777() { testValid(test_5777_query); }

		private static final SubtypeQuery test_5778_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_5778() { testValid(test_5778_query); }

		private static final SubtypeQuery test_5779_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_5779() { testValid(test_5779_query); }

		private static final SubtypeQuery test_5780_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("({int} | (any | any))"));
		@Test public void test_5780() { testValid(test_5780_query); }

		private static final SubtypeQuery test_5781_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_5781() { testValid(test_5781_query); }

		private static final SubtypeQuery test_5782_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_5782() { testValid(test_5782_query); }

		private static final SubtypeQuery test_5783_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_5783() { testValid(test_5783_query); }

		private static final SubtypeQuery test_5784_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_5784() { testValid(test_5784_query); }

		private static final SubtypeQuery test_5785_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_5785() { testValid(test_5785_query); }

		private static final SubtypeQuery test_5786_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_5786() { testValid(test_5786_query); }

		private static final SubtypeQuery test_5787_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("(int | (any | int))"));
		@Test public void test_5787() { testValid(test_5787_query); }

		private static final SubtypeQuery test_5788_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_5788() { testValid(test_5788_query); }

		private static final SubtypeQuery test_5789_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_5789() { testValid(test_5789_query); }

		private static final SubtypeQuery test_5790_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_5790() { testValid(test_5790_query); }

		private static final SubtypeQuery test_5791_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_5791() { testValid(test_5791_query); }

		private static final SubtypeQuery test_5792_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("(!any | (int | int))"));
		@Test public void test_5792() { testValid(test_5792_query); }

		private static final SubtypeQuery test_5793_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_5793() { testValid(test_5793_query); }

		private static final SubtypeQuery test_5794_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("(int | (any & any))"));
		@Test public void test_5794() { testValid(test_5794_query); }

		private static final SubtypeQuery test_5795_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("(!any | (any & any))"));
		@Test public void test_5795() { testValid(test_5795_query); }

		private static final SubtypeQuery test_5796_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_5796() { testValid(test_5796_query); }

		private static final SubtypeQuery test_5797_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_5797() { testValid(test_5797_query); }

		private static final SubtypeQuery test_5798_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_5798() { testValid(test_5798_query); }

		private static final SubtypeQuery test_5799_query = createSubtypeQuery(parseWhiley("({int, any} | any)"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_5799() { testValid(test_5799_query); }

		private static final SubtypeQuery test_5800_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("!int"));
		@Test public void test_5800() { testValid(test_5800_query); }

		private static final SubtypeQuery test_5801_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("(any | any)"));
		@Test public void test_5801() { testValid(test_5801_query); }

		private static final SubtypeQuery test_5802_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("(any & any)"));
		@Test public void test_5802() { testValid(test_5802_query); }

		private static final SubtypeQuery test_5803_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{{int, int}}"));
		@Test public void test_5803() { testValid(test_5803_query); }

		private static final SubtypeQuery test_5804_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("!(int | int)"));
		@Test public void test_5804() { testValid(test_5804_query); }

		private static final SubtypeQuery test_5805_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{{any, any}, any}"));
		@Test public void test_5805() { testValid(test_5805_query); }

		private static final SubtypeQuery test_5806_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{{any, int}, any}"));
		@Test public void test_5806() { testValid(test_5806_query); }

		private static final SubtypeQuery test_5807_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{{any}, int}"));
		@Test public void test_5807() { testValid(test_5807_query); }

		private static final SubtypeQuery test_5808_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{{any, any}, int}"));
		@Test public void test_5808() { testValid(test_5808_query); }

		private static final SubtypeQuery test_5809_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{(any | int), int}"));
		@Test public void test_5809() { testValid(test_5809_query); }

		private static final SubtypeQuery test_5810_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_5810() { testValid(test_5810_query); }

		private static final SubtypeQuery test_5811_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{!any, {int}}"));
		@Test public void test_5811() { testValid(test_5811_query); }

		private static final SubtypeQuery test_5812_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_5812() { testValid(test_5812_query); }

		private static final SubtypeQuery test_5813_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_5813() { testValid(test_5813_query); }

		private static final SubtypeQuery test_5814_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{any, !any}"));
		@Test public void test_5814() { testValid(test_5814_query); }

		private static final SubtypeQuery test_5815_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{{any}, !int}"));
		@Test public void test_5815() { testValid(test_5815_query); }

		private static final SubtypeQuery test_5816_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_5816() { testValid(test_5816_query); }

		private static final SubtypeQuery test_5817_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_5817() { testValid(test_5817_query); }

		private static final SubtypeQuery test_5818_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{(int & int), !int}"));
		@Test public void test_5818() { testValid(test_5818_query); }

		private static final SubtypeQuery test_5819_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_5819() { testValid(test_5819_query); }

		private static final SubtypeQuery test_5820_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_5820() { testValid(test_5820_query); }

		private static final SubtypeQuery test_5821_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_5821() { testValid(test_5821_query); }

		private static final SubtypeQuery test_5822_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_5822() { testValid(test_5822_query); }

		private static final SubtypeQuery test_5823_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_5823() { testValid(test_5823_query); }

		private static final SubtypeQuery test_5824_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_5824() { testValid(test_5824_query); }

		private static final SubtypeQuery test_5825_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_5825() { testValid(test_5825_query); }

		private static final SubtypeQuery test_5826_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{any, {any, int}}"));
		@Test public void test_5826() { testValid(test_5826_query); }

		private static final SubtypeQuery test_5827_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_5827() { testValid(test_5827_query); }

		private static final SubtypeQuery test_5828_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_5828() { testValid(test_5828_query); }

		private static final SubtypeQuery test_5829_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_5829() { testValid(test_5829_query); }

		private static final SubtypeQuery test_5830_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_5830() { testValid(test_5830_query); }

		private static final SubtypeQuery test_5831_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_5831() { testValid(test_5831_query); }

		private static final SubtypeQuery test_5832_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_5832() { testValid(test_5832_query); }

		private static final SubtypeQuery test_5833_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_5833() { testValid(test_5833_query); }

		private static final SubtypeQuery test_5834_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_5834() { testValid(test_5834_query); }

		private static final SubtypeQuery test_5835_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_5835() { testValid(test_5835_query); }

		private static final SubtypeQuery test_5836_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_5836() { testValid(test_5836_query); }

		private static final SubtypeQuery test_5837_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{int, (int | int)}"));
		@Test public void test_5837() { testValid(test_5837_query); }

		private static final SubtypeQuery test_5838_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_5838() { testValid(test_5838_query); }

		private static final SubtypeQuery test_5839_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{any, (any & any)}"));
		@Test public void test_5839() { testValid(test_5839_query); }

		private static final SubtypeQuery test_5840_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_5840() { testValid(test_5840_query); }

		private static final SubtypeQuery test_5841_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_5841() { testValid(test_5841_query); }

		private static final SubtypeQuery test_5842_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_5842() { testValid(test_5842_query); }

		private static final SubtypeQuery test_5843_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_5843() { testValid(test_5843_query); }

		private static final SubtypeQuery test_5844_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_5844() { testValid(test_5844_query); }

		private static final SubtypeQuery test_5845_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_5845() { testValid(test_5845_query); }

		private static final SubtypeQuery test_5846_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_5846() { testValid(test_5846_query); }

		private static final SubtypeQuery test_5847_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_5847() { testValid(test_5847_query); }

		private static final SubtypeQuery test_5848_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{any, (any & int)}"));
		@Test public void test_5848() { testValid(test_5848_query); }

		private static final SubtypeQuery test_5849_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_5849() { testValid(test_5849_query); }

		private static final SubtypeQuery test_5850_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_5850() { testValid(test_5850_query); }

		private static final SubtypeQuery test_5851_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_5851() { testValid(test_5851_query); }

		private static final SubtypeQuery test_5852_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{int, (int & int)}"));
		@Test public void test_5852() { testValid(test_5852_query); }

		private static final SubtypeQuery test_5853_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_5853() { testValid(test_5853_query); }

		private static final SubtypeQuery test_5854_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_5854() { testValid(test_5854_query); }

		private static final SubtypeQuery test_5855_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_5855() { testValid(test_5855_query); }

		private static final SubtypeQuery test_5856_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("(!any | any)"));
		@Test public void test_5856() { testValid(test_5856_query); }

		private static final SubtypeQuery test_5857_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("({int, any} | any)"));
		@Test public void test_5857() { testValid(test_5857_query); }

		private static final SubtypeQuery test_5858_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("({any, int} | any)"));
		@Test public void test_5858() { testValid(test_5858_query); }

		private static final SubtypeQuery test_5859_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("((int & int) | any)"));
		@Test public void test_5859() { testValid(test_5859_query); }

		private static final SubtypeQuery test_5860_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("({int, int} | int)"));
		@Test public void test_5860() { testValid(test_5860_query); }

		private static final SubtypeQuery test_5861_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("((any | any) | int)"));
		@Test public void test_5861() { testValid(test_5861_query); }

		private static final SubtypeQuery test_5862_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("((int | any) | int)"));
		@Test public void test_5862() { testValid(test_5862_query); }

		private static final SubtypeQuery test_5863_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("(any | {any})"));
		@Test public void test_5863() { testValid(test_5863_query); }

		private static final SubtypeQuery test_5864_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("(int | {any})"));
		@Test public void test_5864() { testValid(test_5864_query); }

		private static final SubtypeQuery test_5865_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("({any, any} | {any})"));
		@Test public void test_5865() { testValid(test_5865_query); }

		private static final SubtypeQuery test_5866_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("(any | {int})"));
		@Test public void test_5866() { testValid(test_5866_query); }

		private static final SubtypeQuery test_5867_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("((any | any) | {int})"));
		@Test public void test_5867() { testValid(test_5867_query); }

		private static final SubtypeQuery test_5868_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("(!int | !any)"));
		@Test public void test_5868() { testValid(test_5868_query); }

		private static final SubtypeQuery test_5869_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("({int, any} | !any)"));
		@Test public void test_5869() { testValid(test_5869_query); }

		private static final SubtypeQuery test_5870_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("((any | any) | !any)"));
		@Test public void test_5870() { testValid(test_5870_query); }

		private static final SubtypeQuery test_5871_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("({int} | !int)"));
		@Test public void test_5871() { testValid(test_5871_query); }

		private static final SubtypeQuery test_5872_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("(!any | !int)"));
		@Test public void test_5872() { testValid(test_5872_query); }

		private static final SubtypeQuery test_5873_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("(!int | {any, any})"));
		@Test public void test_5873() { testValid(test_5873_query); }

		private static final SubtypeQuery test_5874_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_5874() { testValid(test_5874_query); }

		private static final SubtypeQuery test_5875_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_5875() { testValid(test_5875_query); }

		private static final SubtypeQuery test_5876_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_5876() { testValid(test_5876_query); }

		private static final SubtypeQuery test_5877_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_5877() { testValid(test_5877_query); }

		private static final SubtypeQuery test_5878_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_5878() { testValid(test_5878_query); }

		private static final SubtypeQuery test_5879_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_5879() { testValid(test_5879_query); }

		private static final SubtypeQuery test_5880_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("({int} | (any | any))"));
		@Test public void test_5880() { testValid(test_5880_query); }

		private static final SubtypeQuery test_5881_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_5881() { testValid(test_5881_query); }

		private static final SubtypeQuery test_5882_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_5882() { testValid(test_5882_query); }

		private static final SubtypeQuery test_5883_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_5883() { testValid(test_5883_query); }

		private static final SubtypeQuery test_5884_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_5884() { testValid(test_5884_query); }

		private static final SubtypeQuery test_5885_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_5885() { testValid(test_5885_query); }

		private static final SubtypeQuery test_5886_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_5886() { testValid(test_5886_query); }

		private static final SubtypeQuery test_5887_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("(int | (any | int))"));
		@Test public void test_5887() { testValid(test_5887_query); }

		private static final SubtypeQuery test_5888_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_5888() { testValid(test_5888_query); }

		private static final SubtypeQuery test_5889_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_5889() { testValid(test_5889_query); }

		private static final SubtypeQuery test_5890_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_5890() { testValid(test_5890_query); }

		private static final SubtypeQuery test_5891_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_5891() { testValid(test_5891_query); }

		private static final SubtypeQuery test_5892_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("(!any | (int | int))"));
		@Test public void test_5892() { testValid(test_5892_query); }

		private static final SubtypeQuery test_5893_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_5893() { testValid(test_5893_query); }

		private static final SubtypeQuery test_5894_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("(int | (any & any))"));
		@Test public void test_5894() { testValid(test_5894_query); }

		private static final SubtypeQuery test_5895_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("(!any | (any & any))"));
		@Test public void test_5895() { testValid(test_5895_query); }

		private static final SubtypeQuery test_5896_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_5896() { testValid(test_5896_query); }

		private static final SubtypeQuery test_5897_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_5897() { testValid(test_5897_query); }

		private static final SubtypeQuery test_5898_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_5898() { testValid(test_5898_query); }

		private static final SubtypeQuery test_5899_query = createSubtypeQuery(parseWhiley("({any, int} | any)"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_5899() { testValid(test_5899_query); }

		private static final SubtypeQuery test_5900_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("!int"));
		@Test public void test_5900() { testValid(test_5900_query); }

		private static final SubtypeQuery test_5901_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("(any | any)"));
		@Test public void test_5901() { testValid(test_5901_query); }

		private static final SubtypeQuery test_5902_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("(any & any)"));
		@Test public void test_5902() { testValid(test_5902_query); }

		private static final SubtypeQuery test_5903_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{{int, int}}"));
		@Test public void test_5903() { testValid(test_5903_query); }

		private static final SubtypeQuery test_5904_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("!(int | int)"));
		@Test public void test_5904() { testValid(test_5904_query); }

		private static final SubtypeQuery test_5905_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{{any, any}, any}"));
		@Test public void test_5905() { testValid(test_5905_query); }

		private static final SubtypeQuery test_5906_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{{any, int}, any}"));
		@Test public void test_5906() { testValid(test_5906_query); }

		private static final SubtypeQuery test_5907_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{{any}, int}"));
		@Test public void test_5907() { testValid(test_5907_query); }

		private static final SubtypeQuery test_5908_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{{any, any}, int}"));
		@Test public void test_5908() { testValid(test_5908_query); }

		private static final SubtypeQuery test_5909_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{(any | int), int}"));
		@Test public void test_5909() { testValid(test_5909_query); }

		private static final SubtypeQuery test_5910_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_5910() { testValid(test_5910_query); }

		private static final SubtypeQuery test_5911_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{!any, {int}}"));
		@Test public void test_5911() { testValid(test_5911_query); }

		private static final SubtypeQuery test_5912_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_5912() { testValid(test_5912_query); }

		private static final SubtypeQuery test_5913_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_5913() { testValid(test_5913_query); }

		private static final SubtypeQuery test_5914_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{any, !any}"));
		@Test public void test_5914() { testValid(test_5914_query); }

		private static final SubtypeQuery test_5915_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{{any}, !int}"));
		@Test public void test_5915() { testValid(test_5915_query); }

		private static final SubtypeQuery test_5916_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_5916() { testValid(test_5916_query); }

		private static final SubtypeQuery test_5917_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_5917() { testValid(test_5917_query); }

		private static final SubtypeQuery test_5918_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{(int & int), !int}"));
		@Test public void test_5918() { testValid(test_5918_query); }

		private static final SubtypeQuery test_5919_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_5919() { testValid(test_5919_query); }

		private static final SubtypeQuery test_5920_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_5920() { testValid(test_5920_query); }

		private static final SubtypeQuery test_5921_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_5921() { testValid(test_5921_query); }

		private static final SubtypeQuery test_5922_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_5922() { testValid(test_5922_query); }

		private static final SubtypeQuery test_5923_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_5923() { testValid(test_5923_query); }

		private static final SubtypeQuery test_5924_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_5924() { testValid(test_5924_query); }

		private static final SubtypeQuery test_5925_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_5925() { testValid(test_5925_query); }

		private static final SubtypeQuery test_5926_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{any, {any, int}}"));
		@Test public void test_5926() { testValid(test_5926_query); }

		private static final SubtypeQuery test_5927_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_5927() { testValid(test_5927_query); }

		private static final SubtypeQuery test_5928_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_5928() { testValid(test_5928_query); }

		private static final SubtypeQuery test_5929_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_5929() { testValid(test_5929_query); }

		private static final SubtypeQuery test_5930_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_5930() { testValid(test_5930_query); }

		private static final SubtypeQuery test_5931_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_5931() { testValid(test_5931_query); }

		private static final SubtypeQuery test_5932_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_5932() { testValid(test_5932_query); }

		private static final SubtypeQuery test_5933_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_5933() { testValid(test_5933_query); }

		private static final SubtypeQuery test_5934_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_5934() { testValid(test_5934_query); }

		private static final SubtypeQuery test_5935_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_5935() { testValid(test_5935_query); }

		private static final SubtypeQuery test_5936_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_5936() { testValid(test_5936_query); }

		private static final SubtypeQuery test_5937_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{int, (int | int)}"));
		@Test public void test_5937() { testValid(test_5937_query); }

		private static final SubtypeQuery test_5938_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_5938() { testValid(test_5938_query); }

		private static final SubtypeQuery test_5939_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{any, (any & any)}"));
		@Test public void test_5939() { testValid(test_5939_query); }

		private static final SubtypeQuery test_5940_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_5940() { testValid(test_5940_query); }

		private static final SubtypeQuery test_5941_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_5941() { testValid(test_5941_query); }

		private static final SubtypeQuery test_5942_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_5942() { testValid(test_5942_query); }

		private static final SubtypeQuery test_5943_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_5943() { testValid(test_5943_query); }

		private static final SubtypeQuery test_5944_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_5944() { testValid(test_5944_query); }

		private static final SubtypeQuery test_5945_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_5945() { testValid(test_5945_query); }

		private static final SubtypeQuery test_5946_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_5946() { testValid(test_5946_query); }

		private static final SubtypeQuery test_5947_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_5947() { testValid(test_5947_query); }

		private static final SubtypeQuery test_5948_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{any, (any & int)}"));
		@Test public void test_5948() { testValid(test_5948_query); }

		private static final SubtypeQuery test_5949_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_5949() { testValid(test_5949_query); }

		private static final SubtypeQuery test_5950_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_5950() { testValid(test_5950_query); }

		private static final SubtypeQuery test_5951_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_5951() { testValid(test_5951_query); }

		private static final SubtypeQuery test_5952_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{int, (int & int)}"));
		@Test public void test_5952() { testValid(test_5952_query); }

		private static final SubtypeQuery test_5953_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_5953() { testValid(test_5953_query); }

		private static final SubtypeQuery test_5954_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_5954() { testValid(test_5954_query); }

		private static final SubtypeQuery test_5955_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_5955() { testValid(test_5955_query); }

		private static final SubtypeQuery test_5956_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("(!any | any)"));
		@Test public void test_5956() { testValid(test_5956_query); }

		private static final SubtypeQuery test_5957_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("({int, any} | any)"));
		@Test public void test_5957() { testValid(test_5957_query); }

		private static final SubtypeQuery test_5958_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("({any, int} | any)"));
		@Test public void test_5958() { testValid(test_5958_query); }

		private static final SubtypeQuery test_5959_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("((int & int) | any)"));
		@Test public void test_5959() { testValid(test_5959_query); }

		private static final SubtypeQuery test_5960_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("({int, int} | int)"));
		@Test public void test_5960() { testValid(test_5960_query); }

		private static final SubtypeQuery test_5961_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("((any | any) | int)"));
		@Test public void test_5961() { testValid(test_5961_query); }

		private static final SubtypeQuery test_5962_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("((int | any) | int)"));
		@Test public void test_5962() { testValid(test_5962_query); }

		private static final SubtypeQuery test_5963_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("(any | {any})"));
		@Test public void test_5963() { testValid(test_5963_query); }

		private static final SubtypeQuery test_5964_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("(int | {any})"));
		@Test public void test_5964() { testValid(test_5964_query); }

		private static final SubtypeQuery test_5965_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("({any, any} | {any})"));
		@Test public void test_5965() { testValid(test_5965_query); }

		private static final SubtypeQuery test_5966_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("(any | {int})"));
		@Test public void test_5966() { testValid(test_5966_query); }

		private static final SubtypeQuery test_5967_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("((any | any) | {int})"));
		@Test public void test_5967() { testValid(test_5967_query); }

		private static final SubtypeQuery test_5968_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("(!int | !any)"));
		@Test public void test_5968() { testValid(test_5968_query); }

		private static final SubtypeQuery test_5969_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("({int, any} | !any)"));
		@Test public void test_5969() { testValid(test_5969_query); }

		private static final SubtypeQuery test_5970_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("((any | any) | !any)"));
		@Test public void test_5970() { testValid(test_5970_query); }

		private static final SubtypeQuery test_5971_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("({int} | !int)"));
		@Test public void test_5971() { testValid(test_5971_query); }

		private static final SubtypeQuery test_5972_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("(!any | !int)"));
		@Test public void test_5972() { testValid(test_5972_query); }

		private static final SubtypeQuery test_5973_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("(!int | {any, any})"));
		@Test public void test_5973() { testValid(test_5973_query); }

		private static final SubtypeQuery test_5974_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_5974() { testValid(test_5974_query); }

		private static final SubtypeQuery test_5975_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_5975() { testValid(test_5975_query); }

		private static final SubtypeQuery test_5976_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_5976() { testValid(test_5976_query); }

		private static final SubtypeQuery test_5977_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_5977() { testValid(test_5977_query); }

		private static final SubtypeQuery test_5978_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_5978() { testValid(test_5978_query); }

		private static final SubtypeQuery test_5979_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_5979() { testValid(test_5979_query); }

		private static final SubtypeQuery test_5980_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("({int} | (any | any))"));
		@Test public void test_5980() { testValid(test_5980_query); }

		private static final SubtypeQuery test_5981_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_5981() { testValid(test_5981_query); }

		private static final SubtypeQuery test_5982_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_5982() { testValid(test_5982_query); }

		private static final SubtypeQuery test_5983_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_5983() { testValid(test_5983_query); }

		private static final SubtypeQuery test_5984_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_5984() { testValid(test_5984_query); }

		private static final SubtypeQuery test_5985_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_5985() { testValid(test_5985_query); }

		private static final SubtypeQuery test_5986_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_5986() { testValid(test_5986_query); }

		private static final SubtypeQuery test_5987_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("(int | (any | int))"));
		@Test public void test_5987() { testValid(test_5987_query); }

		private static final SubtypeQuery test_5988_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_5988() { testValid(test_5988_query); }

		private static final SubtypeQuery test_5989_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_5989() { testValid(test_5989_query); }

		private static final SubtypeQuery test_5990_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_5990() { testValid(test_5990_query); }

		private static final SubtypeQuery test_5991_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_5991() { testValid(test_5991_query); }

		private static final SubtypeQuery test_5992_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("(!any | (int | int))"));
		@Test public void test_5992() { testValid(test_5992_query); }

		private static final SubtypeQuery test_5993_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_5993() { testValid(test_5993_query); }

		private static final SubtypeQuery test_5994_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("(int | (any & any))"));
		@Test public void test_5994() { testValid(test_5994_query); }

		private static final SubtypeQuery test_5995_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("(!any | (any & any))"));
		@Test public void test_5995() { testValid(test_5995_query); }

		private static final SubtypeQuery test_5996_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_5996() { testValid(test_5996_query); }

		private static final SubtypeQuery test_5997_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_5997() { testValid(test_5997_query); }

		private static final SubtypeQuery test_5998_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_5998() { testValid(test_5998_query); }

		private static final SubtypeQuery test_5999_query = createSubtypeQuery(parseWhiley("((int & int) | any)"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_5999() { testValid(test_5999_query); }

	}
	public static class Part_6 {
		private static final SubtypeQuery test_6000_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("!int"));
		@Test public void test_6000() { testInvalid(test_6000_query); }

		private static final SubtypeQuery test_6001_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("(any | any)"));
		@Test public void test_6001() { testInvalid(test_6001_query); }

		private static final SubtypeQuery test_6002_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("(any & any)"));
		@Test public void test_6002() { testInvalid(test_6002_query); }

		private static final SubtypeQuery test_6003_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{{int, int}}"));
		@Test public void test_6003() { testInvalid(test_6003_query); }

		private static final SubtypeQuery test_6004_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("!(int | int)"));
		@Test public void test_6004() { testInvalid(test_6004_query); }

		private static final SubtypeQuery test_6005_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{{any, any}, any}"));
		@Test public void test_6005() { testInvalid(test_6005_query); }

		private static final SubtypeQuery test_6006_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{{any, int}, any}"));
		@Test public void test_6006() { testInvalid(test_6006_query); }

		private static final SubtypeQuery test_6007_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{{any}, int}"));
		@Test public void test_6007() { testInvalid(test_6007_query); }

		private static final SubtypeQuery test_6008_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{{any, any}, int}"));
		@Test public void test_6008() { testInvalid(test_6008_query); }

		private static final SubtypeQuery test_6009_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{(any | int), int}"));
		@Test public void test_6009() { testInvalid(test_6009_query); }

		private static final SubtypeQuery test_6010_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_6010() { testInvalid(test_6010_query); }

		private static final SubtypeQuery test_6011_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{!any, {int}}"));
		@Test public void test_6011() { testValid(test_6011_query); }

		private static final SubtypeQuery test_6012_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_6012() { testInvalid(test_6012_query); }

		private static final SubtypeQuery test_6013_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_6013() { testInvalid(test_6013_query); }

		private static final SubtypeQuery test_6014_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{any, !any}"));
		@Test public void test_6014() { testValid(test_6014_query); }

		private static final SubtypeQuery test_6015_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{{any}, !int}"));
		@Test public void test_6015() { testInvalid(test_6015_query); }

		private static final SubtypeQuery test_6016_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_6016() { testInvalid(test_6016_query); }

		private static final SubtypeQuery test_6017_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_6017() { testInvalid(test_6017_query); }

		private static final SubtypeQuery test_6018_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{(int & int), !int}"));
		@Test public void test_6018() { testInvalid(test_6018_query); }

		private static final SubtypeQuery test_6019_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_6019() { testInvalid(test_6019_query); }

		private static final SubtypeQuery test_6020_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_6020() { testInvalid(test_6020_query); }

		private static final SubtypeQuery test_6021_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_6021() { testInvalid(test_6021_query); }

		private static final SubtypeQuery test_6022_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_6022() { testInvalid(test_6022_query); }

		private static final SubtypeQuery test_6023_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_6023() { testInvalid(test_6023_query); }

		private static final SubtypeQuery test_6024_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_6024() { testInvalid(test_6024_query); }

		private static final SubtypeQuery test_6025_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_6025() { testInvalid(test_6025_query); }

		private static final SubtypeQuery test_6026_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{any, {any, int}}"));
		@Test public void test_6026() { testInvalid(test_6026_query); }

		private static final SubtypeQuery test_6027_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_6027() { testInvalid(test_6027_query); }

		private static final SubtypeQuery test_6028_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_6028() { testInvalid(test_6028_query); }

		private static final SubtypeQuery test_6029_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_6029() { testValid(test_6029_query); }

		private static final SubtypeQuery test_6030_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_6030() { testInvalid(test_6030_query); }

		private static final SubtypeQuery test_6031_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_6031() { testInvalid(test_6031_query); }

		private static final SubtypeQuery test_6032_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_6032() { testInvalid(test_6032_query); }

		private static final SubtypeQuery test_6033_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_6033() { testInvalid(test_6033_query); }

		private static final SubtypeQuery test_6034_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_6034() { testInvalid(test_6034_query); }

		private static final SubtypeQuery test_6035_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_6035() { testInvalid(test_6035_query); }

		private static final SubtypeQuery test_6036_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_6036() { testInvalid(test_6036_query); }

		private static final SubtypeQuery test_6037_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{int, (int | int)}"));
		@Test public void test_6037() { testValid(test_6037_query); }

		private static final SubtypeQuery test_6038_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_6038() { testInvalid(test_6038_query); }

		private static final SubtypeQuery test_6039_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{any, (any & any)}"));
		@Test public void test_6039() { testInvalid(test_6039_query); }

		private static final SubtypeQuery test_6040_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_6040() { testInvalid(test_6040_query); }

		private static final SubtypeQuery test_6041_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_6041() { testValid(test_6041_query); }

		private static final SubtypeQuery test_6042_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_6042() { testInvalid(test_6042_query); }

		private static final SubtypeQuery test_6043_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_6043() { testInvalid(test_6043_query); }

		private static final SubtypeQuery test_6044_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_6044() { testInvalid(test_6044_query); }

		private static final SubtypeQuery test_6045_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_6045() { testInvalid(test_6045_query); }

		private static final SubtypeQuery test_6046_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_6046() { testInvalid(test_6046_query); }

		private static final SubtypeQuery test_6047_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_6047() { testValid(test_6047_query); }

		private static final SubtypeQuery test_6048_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{any, (any & int)}"));
		@Test public void test_6048() { testInvalid(test_6048_query); }

		private static final SubtypeQuery test_6049_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_6049() { testInvalid(test_6049_query); }

		private static final SubtypeQuery test_6050_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_6050() { testInvalid(test_6050_query); }

		private static final SubtypeQuery test_6051_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_6051() { testInvalid(test_6051_query); }

		private static final SubtypeQuery test_6052_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{int, (int & int)}"));
		@Test public void test_6052() { testValid(test_6052_query); }

		private static final SubtypeQuery test_6053_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_6053() { testInvalid(test_6053_query); }

		private static final SubtypeQuery test_6054_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_6054() { testInvalid(test_6054_query); }

		private static final SubtypeQuery test_6055_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_6055() { testValid(test_6055_query); }

		private static final SubtypeQuery test_6056_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("(!any | any)"));
		@Test public void test_6056() { testInvalid(test_6056_query); }

		private static final SubtypeQuery test_6057_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("({int, any} | any)"));
		@Test public void test_6057() { testInvalid(test_6057_query); }

		private static final SubtypeQuery test_6058_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("({any, int} | any)"));
		@Test public void test_6058() { testInvalid(test_6058_query); }

		private static final SubtypeQuery test_6059_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("((int & int) | any)"));
		@Test public void test_6059() { testInvalid(test_6059_query); }

		private static final SubtypeQuery test_6060_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("({int, int} | int)"));
		@Test public void test_6060() { testValid(test_6060_query); }

		private static final SubtypeQuery test_6061_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("((any | any) | int)"));
		@Test public void test_6061() { testInvalid(test_6061_query); }

		private static final SubtypeQuery test_6062_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("((int | any) | int)"));
		@Test public void test_6062() { testInvalid(test_6062_query); }

		private static final SubtypeQuery test_6063_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("(any | {any})"));
		@Test public void test_6063() { testInvalid(test_6063_query); }

		private static final SubtypeQuery test_6064_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("(int | {any})"));
		@Test public void test_6064() { testInvalid(test_6064_query); }

		private static final SubtypeQuery test_6065_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("({any, any} | {any})"));
		@Test public void test_6065() { testInvalid(test_6065_query); }

		private static final SubtypeQuery test_6066_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("(any | {int})"));
		@Test public void test_6066() { testInvalid(test_6066_query); }

		private static final SubtypeQuery test_6067_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("((any | any) | {int})"));
		@Test public void test_6067() { testInvalid(test_6067_query); }

		private static final SubtypeQuery test_6068_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("(!int | !any)"));
		@Test public void test_6068() { testInvalid(test_6068_query); }

		private static final SubtypeQuery test_6069_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("({int, any} | !any)"));
		@Test public void test_6069() { testInvalid(test_6069_query); }

		private static final SubtypeQuery test_6070_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("((any | any) | !any)"));
		@Test public void test_6070() { testInvalid(test_6070_query); }

		private static final SubtypeQuery test_6071_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("({int} | !int)"));
		@Test public void test_6071() { testInvalid(test_6071_query); }

		private static final SubtypeQuery test_6072_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("(!any | !int)"));
		@Test public void test_6072() { testInvalid(test_6072_query); }

		private static final SubtypeQuery test_6073_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("(!int | {any, any})"));
		@Test public void test_6073() { testInvalid(test_6073_query); }

		private static final SubtypeQuery test_6074_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_6074() { testInvalid(test_6074_query); }

		private static final SubtypeQuery test_6075_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_6075() { testInvalid(test_6075_query); }

		private static final SubtypeQuery test_6076_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_6076() { testInvalid(test_6076_query); }

		private static final SubtypeQuery test_6077_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_6077() { testInvalid(test_6077_query); }

		private static final SubtypeQuery test_6078_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_6078() { testValid(test_6078_query); }

		private static final SubtypeQuery test_6079_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_6079() { testValid(test_6079_query); }

		private static final SubtypeQuery test_6080_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("({int} | (any | any))"));
		@Test public void test_6080() { testInvalid(test_6080_query); }

		private static final SubtypeQuery test_6081_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_6081() { testInvalid(test_6081_query); }

		private static final SubtypeQuery test_6082_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_6082() { testInvalid(test_6082_query); }

		private static final SubtypeQuery test_6083_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_6083() { testInvalid(test_6083_query); }

		private static final SubtypeQuery test_6084_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_6084() { testInvalid(test_6084_query); }

		private static final SubtypeQuery test_6085_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_6085() { testInvalid(test_6085_query); }

		private static final SubtypeQuery test_6086_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_6086() { testInvalid(test_6086_query); }

		private static final SubtypeQuery test_6087_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("(int | (any | int))"));
		@Test public void test_6087() { testInvalid(test_6087_query); }

		private static final SubtypeQuery test_6088_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_6088() { testInvalid(test_6088_query); }

		private static final SubtypeQuery test_6089_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_6089() { testInvalid(test_6089_query); }

		private static final SubtypeQuery test_6090_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_6090() { testInvalid(test_6090_query); }

		private static final SubtypeQuery test_6091_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_6091() { testInvalid(test_6091_query); }

		private static final SubtypeQuery test_6092_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("(!any | (int | int))"));
		@Test public void test_6092() { testValid(test_6092_query); }

		private static final SubtypeQuery test_6093_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_6093() { testInvalid(test_6093_query); }

		private static final SubtypeQuery test_6094_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("(int | (any & any))"));
		@Test public void test_6094() { testInvalid(test_6094_query); }

		private static final SubtypeQuery test_6095_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("(!any | (any & any))"));
		@Test public void test_6095() { testInvalid(test_6095_query); }

		private static final SubtypeQuery test_6096_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_6096() { testInvalid(test_6096_query); }

		private static final SubtypeQuery test_6097_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_6097() { testInvalid(test_6097_query); }

		private static final SubtypeQuery test_6098_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_6098() { testInvalid(test_6098_query); }

		private static final SubtypeQuery test_6099_query = createSubtypeQuery(parseWhiley("({int, int} | int)"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_6099() { testInvalid(test_6099_query); }

		private static final SubtypeQuery test_6100_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("!int"));
		@Test public void test_6100() { testValid(test_6100_query); }

		private static final SubtypeQuery test_6101_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("(any | any)"));
		@Test public void test_6101() { testValid(test_6101_query); }

		private static final SubtypeQuery test_6102_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("(any & any)"));
		@Test public void test_6102() { testValid(test_6102_query); }

		private static final SubtypeQuery test_6103_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{{int, int}}"));
		@Test public void test_6103() { testValid(test_6103_query); }

		private static final SubtypeQuery test_6104_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("!(int | int)"));
		@Test public void test_6104() { testValid(test_6104_query); }

		private static final SubtypeQuery test_6105_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{{any, any}, any}"));
		@Test public void test_6105() { testValid(test_6105_query); }

		private static final SubtypeQuery test_6106_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{{any, int}, any}"));
		@Test public void test_6106() { testValid(test_6106_query); }

		private static final SubtypeQuery test_6107_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{{any}, int}"));
		@Test public void test_6107() { testValid(test_6107_query); }

		private static final SubtypeQuery test_6108_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{{any, any}, int}"));
		@Test public void test_6108() { testValid(test_6108_query); }

		private static final SubtypeQuery test_6109_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{(any | int), int}"));
		@Test public void test_6109() { testValid(test_6109_query); }

		private static final SubtypeQuery test_6110_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_6110() { testValid(test_6110_query); }

		private static final SubtypeQuery test_6111_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{!any, {int}}"));
		@Test public void test_6111() { testValid(test_6111_query); }

		private static final SubtypeQuery test_6112_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_6112() { testValid(test_6112_query); }

		private static final SubtypeQuery test_6113_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_6113() { testValid(test_6113_query); }

		private static final SubtypeQuery test_6114_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{any, !any}"));
		@Test public void test_6114() { testValid(test_6114_query); }

		private static final SubtypeQuery test_6115_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{{any}, !int}"));
		@Test public void test_6115() { testValid(test_6115_query); }

		private static final SubtypeQuery test_6116_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_6116() { testValid(test_6116_query); }

		private static final SubtypeQuery test_6117_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_6117() { testValid(test_6117_query); }

		private static final SubtypeQuery test_6118_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{(int & int), !int}"));
		@Test public void test_6118() { testValid(test_6118_query); }

		private static final SubtypeQuery test_6119_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_6119() { testValid(test_6119_query); }

		private static final SubtypeQuery test_6120_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_6120() { testValid(test_6120_query); }

		private static final SubtypeQuery test_6121_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_6121() { testValid(test_6121_query); }

		private static final SubtypeQuery test_6122_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_6122() { testValid(test_6122_query); }

		private static final SubtypeQuery test_6123_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_6123() { testValid(test_6123_query); }

		private static final SubtypeQuery test_6124_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_6124() { testValid(test_6124_query); }

		private static final SubtypeQuery test_6125_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_6125() { testValid(test_6125_query); }

		private static final SubtypeQuery test_6126_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{any, {any, int}}"));
		@Test public void test_6126() { testValid(test_6126_query); }

		private static final SubtypeQuery test_6127_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_6127() { testValid(test_6127_query); }

		private static final SubtypeQuery test_6128_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_6128() { testValid(test_6128_query); }

		private static final SubtypeQuery test_6129_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_6129() { testValid(test_6129_query); }

		private static final SubtypeQuery test_6130_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_6130() { testValid(test_6130_query); }

		private static final SubtypeQuery test_6131_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_6131() { testValid(test_6131_query); }

		private static final SubtypeQuery test_6132_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_6132() { testValid(test_6132_query); }

		private static final SubtypeQuery test_6133_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_6133() { testValid(test_6133_query); }

		private static final SubtypeQuery test_6134_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_6134() { testValid(test_6134_query); }

		private static final SubtypeQuery test_6135_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_6135() { testValid(test_6135_query); }

		private static final SubtypeQuery test_6136_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_6136() { testValid(test_6136_query); }

		private static final SubtypeQuery test_6137_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{int, (int | int)}"));
		@Test public void test_6137() { testValid(test_6137_query); }

		private static final SubtypeQuery test_6138_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_6138() { testValid(test_6138_query); }

		private static final SubtypeQuery test_6139_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{any, (any & any)}"));
		@Test public void test_6139() { testValid(test_6139_query); }

		private static final SubtypeQuery test_6140_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_6140() { testValid(test_6140_query); }

		private static final SubtypeQuery test_6141_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_6141() { testValid(test_6141_query); }

		private static final SubtypeQuery test_6142_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_6142() { testValid(test_6142_query); }

		private static final SubtypeQuery test_6143_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_6143() { testValid(test_6143_query); }

		private static final SubtypeQuery test_6144_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_6144() { testValid(test_6144_query); }

		private static final SubtypeQuery test_6145_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_6145() { testValid(test_6145_query); }

		private static final SubtypeQuery test_6146_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_6146() { testValid(test_6146_query); }

		private static final SubtypeQuery test_6147_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_6147() { testValid(test_6147_query); }

		private static final SubtypeQuery test_6148_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{any, (any & int)}"));
		@Test public void test_6148() { testValid(test_6148_query); }

		private static final SubtypeQuery test_6149_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_6149() { testValid(test_6149_query); }

		private static final SubtypeQuery test_6150_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_6150() { testValid(test_6150_query); }

		private static final SubtypeQuery test_6151_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_6151() { testValid(test_6151_query); }

		private static final SubtypeQuery test_6152_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{int, (int & int)}"));
		@Test public void test_6152() { testValid(test_6152_query); }

		private static final SubtypeQuery test_6153_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_6153() { testValid(test_6153_query); }

		private static final SubtypeQuery test_6154_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_6154() { testValid(test_6154_query); }

		private static final SubtypeQuery test_6155_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_6155() { testValid(test_6155_query); }

		private static final SubtypeQuery test_6156_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("(!any | any)"));
		@Test public void test_6156() { testValid(test_6156_query); }

		private static final SubtypeQuery test_6157_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("({int, any} | any)"));
		@Test public void test_6157() { testValid(test_6157_query); }

		private static final SubtypeQuery test_6158_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("({any, int} | any)"));
		@Test public void test_6158() { testValid(test_6158_query); }

		private static final SubtypeQuery test_6159_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("((int & int) | any)"));
		@Test public void test_6159() { testValid(test_6159_query); }

		private static final SubtypeQuery test_6160_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("({int, int} | int)"));
		@Test public void test_6160() { testValid(test_6160_query); }

		private static final SubtypeQuery test_6161_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("((any | any) | int)"));
		@Test public void test_6161() { testValid(test_6161_query); }

		private static final SubtypeQuery test_6162_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("((int | any) | int)"));
		@Test public void test_6162() { testValid(test_6162_query); }

		private static final SubtypeQuery test_6163_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("(any | {any})"));
		@Test public void test_6163() { testValid(test_6163_query); }

		private static final SubtypeQuery test_6164_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("(int | {any})"));
		@Test public void test_6164() { testValid(test_6164_query); }

		private static final SubtypeQuery test_6165_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("({any, any} | {any})"));
		@Test public void test_6165() { testValid(test_6165_query); }

		private static final SubtypeQuery test_6166_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("(any | {int})"));
		@Test public void test_6166() { testValid(test_6166_query); }

		private static final SubtypeQuery test_6167_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("((any | any) | {int})"));
		@Test public void test_6167() { testValid(test_6167_query); }

		private static final SubtypeQuery test_6168_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("(!int | !any)"));
		@Test public void test_6168() { testValid(test_6168_query); }

		private static final SubtypeQuery test_6169_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("({int, any} | !any)"));
		@Test public void test_6169() { testValid(test_6169_query); }

		private static final SubtypeQuery test_6170_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("((any | any) | !any)"));
		@Test public void test_6170() { testValid(test_6170_query); }

		private static final SubtypeQuery test_6171_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("({int} | !int)"));
		@Test public void test_6171() { testValid(test_6171_query); }

		private static final SubtypeQuery test_6172_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("(!any | !int)"));
		@Test public void test_6172() { testValid(test_6172_query); }

		private static final SubtypeQuery test_6173_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("(!int | {any, any})"));
		@Test public void test_6173() { testValid(test_6173_query); }

		private static final SubtypeQuery test_6174_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_6174() { testValid(test_6174_query); }

		private static final SubtypeQuery test_6175_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_6175() { testValid(test_6175_query); }

		private static final SubtypeQuery test_6176_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_6176() { testValid(test_6176_query); }

		private static final SubtypeQuery test_6177_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_6177() { testValid(test_6177_query); }

		private static final SubtypeQuery test_6178_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_6178() { testValid(test_6178_query); }

		private static final SubtypeQuery test_6179_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_6179() { testValid(test_6179_query); }

		private static final SubtypeQuery test_6180_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("({int} | (any | any))"));
		@Test public void test_6180() { testValid(test_6180_query); }

		private static final SubtypeQuery test_6181_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_6181() { testValid(test_6181_query); }

		private static final SubtypeQuery test_6182_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_6182() { testValid(test_6182_query); }

		private static final SubtypeQuery test_6183_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_6183() { testValid(test_6183_query); }

		private static final SubtypeQuery test_6184_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_6184() { testValid(test_6184_query); }

		private static final SubtypeQuery test_6185_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_6185() { testValid(test_6185_query); }

		private static final SubtypeQuery test_6186_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_6186() { testValid(test_6186_query); }

		private static final SubtypeQuery test_6187_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("(int | (any | int))"));
		@Test public void test_6187() { testValid(test_6187_query); }

		private static final SubtypeQuery test_6188_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_6188() { testValid(test_6188_query); }

		private static final SubtypeQuery test_6189_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_6189() { testValid(test_6189_query); }

		private static final SubtypeQuery test_6190_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_6190() { testValid(test_6190_query); }

		private static final SubtypeQuery test_6191_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_6191() { testValid(test_6191_query); }

		private static final SubtypeQuery test_6192_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("(!any | (int | int))"));
		@Test public void test_6192() { testValid(test_6192_query); }

		private static final SubtypeQuery test_6193_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_6193() { testValid(test_6193_query); }

		private static final SubtypeQuery test_6194_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("(int | (any & any))"));
		@Test public void test_6194() { testValid(test_6194_query); }

		private static final SubtypeQuery test_6195_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("(!any | (any & any))"));
		@Test public void test_6195() { testValid(test_6195_query); }

		private static final SubtypeQuery test_6196_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_6196() { testValid(test_6196_query); }

		private static final SubtypeQuery test_6197_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_6197() { testValid(test_6197_query); }

		private static final SubtypeQuery test_6198_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_6198() { testValid(test_6198_query); }

		private static final SubtypeQuery test_6199_query = createSubtypeQuery(parseWhiley("((any | any) | int)"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_6199() { testValid(test_6199_query); }

		private static final SubtypeQuery test_6200_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("!int"));
		@Test public void test_6200() { testValid(test_6200_query); }

		private static final SubtypeQuery test_6201_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("(any | any)"));
		@Test public void test_6201() { testValid(test_6201_query); }

		private static final SubtypeQuery test_6202_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("(any & any)"));
		@Test public void test_6202() { testValid(test_6202_query); }

		private static final SubtypeQuery test_6203_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{{int, int}}"));
		@Test public void test_6203() { testValid(test_6203_query); }

		private static final SubtypeQuery test_6204_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("!(int | int)"));
		@Test public void test_6204() { testValid(test_6204_query); }

		private static final SubtypeQuery test_6205_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{{any, any}, any}"));
		@Test public void test_6205() { testValid(test_6205_query); }

		private static final SubtypeQuery test_6206_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{{any, int}, any}"));
		@Test public void test_6206() { testValid(test_6206_query); }

		private static final SubtypeQuery test_6207_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{{any}, int}"));
		@Test public void test_6207() { testValid(test_6207_query); }

		private static final SubtypeQuery test_6208_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{{any, any}, int}"));
		@Test public void test_6208() { testValid(test_6208_query); }

		private static final SubtypeQuery test_6209_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{(any | int), int}"));
		@Test public void test_6209() { testValid(test_6209_query); }

		private static final SubtypeQuery test_6210_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_6210() { testValid(test_6210_query); }

		private static final SubtypeQuery test_6211_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{!any, {int}}"));
		@Test public void test_6211() { testValid(test_6211_query); }

		private static final SubtypeQuery test_6212_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_6212() { testValid(test_6212_query); }

		private static final SubtypeQuery test_6213_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_6213() { testValid(test_6213_query); }

		private static final SubtypeQuery test_6214_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{any, !any}"));
		@Test public void test_6214() { testValid(test_6214_query); }

		private static final SubtypeQuery test_6215_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{{any}, !int}"));
		@Test public void test_6215() { testValid(test_6215_query); }

		private static final SubtypeQuery test_6216_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_6216() { testValid(test_6216_query); }

		private static final SubtypeQuery test_6217_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_6217() { testValid(test_6217_query); }

		private static final SubtypeQuery test_6218_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{(int & int), !int}"));
		@Test public void test_6218() { testValid(test_6218_query); }

		private static final SubtypeQuery test_6219_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_6219() { testValid(test_6219_query); }

		private static final SubtypeQuery test_6220_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_6220() { testValid(test_6220_query); }

		private static final SubtypeQuery test_6221_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_6221() { testValid(test_6221_query); }

		private static final SubtypeQuery test_6222_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_6222() { testValid(test_6222_query); }

		private static final SubtypeQuery test_6223_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_6223() { testValid(test_6223_query); }

		private static final SubtypeQuery test_6224_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_6224() { testValid(test_6224_query); }

		private static final SubtypeQuery test_6225_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_6225() { testValid(test_6225_query); }

		private static final SubtypeQuery test_6226_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{any, {any, int}}"));
		@Test public void test_6226() { testValid(test_6226_query); }

		private static final SubtypeQuery test_6227_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_6227() { testValid(test_6227_query); }

		private static final SubtypeQuery test_6228_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_6228() { testValid(test_6228_query); }

		private static final SubtypeQuery test_6229_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_6229() { testValid(test_6229_query); }

		private static final SubtypeQuery test_6230_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_6230() { testValid(test_6230_query); }

		private static final SubtypeQuery test_6231_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_6231() { testValid(test_6231_query); }

		private static final SubtypeQuery test_6232_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_6232() { testValid(test_6232_query); }

		private static final SubtypeQuery test_6233_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_6233() { testValid(test_6233_query); }

		private static final SubtypeQuery test_6234_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_6234() { testValid(test_6234_query); }

		private static final SubtypeQuery test_6235_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_6235() { testValid(test_6235_query); }

		private static final SubtypeQuery test_6236_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_6236() { testValid(test_6236_query); }

		private static final SubtypeQuery test_6237_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{int, (int | int)}"));
		@Test public void test_6237() { testValid(test_6237_query); }

		private static final SubtypeQuery test_6238_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_6238() { testValid(test_6238_query); }

		private static final SubtypeQuery test_6239_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{any, (any & any)}"));
		@Test public void test_6239() { testValid(test_6239_query); }

		private static final SubtypeQuery test_6240_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_6240() { testValid(test_6240_query); }

		private static final SubtypeQuery test_6241_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_6241() { testValid(test_6241_query); }

		private static final SubtypeQuery test_6242_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_6242() { testValid(test_6242_query); }

		private static final SubtypeQuery test_6243_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_6243() { testValid(test_6243_query); }

		private static final SubtypeQuery test_6244_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_6244() { testValid(test_6244_query); }

		private static final SubtypeQuery test_6245_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_6245() { testValid(test_6245_query); }

		private static final SubtypeQuery test_6246_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_6246() { testValid(test_6246_query); }

		private static final SubtypeQuery test_6247_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_6247() { testValid(test_6247_query); }

		private static final SubtypeQuery test_6248_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{any, (any & int)}"));
		@Test public void test_6248() { testValid(test_6248_query); }

		private static final SubtypeQuery test_6249_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_6249() { testValid(test_6249_query); }

		private static final SubtypeQuery test_6250_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_6250() { testValid(test_6250_query); }

		private static final SubtypeQuery test_6251_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_6251() { testValid(test_6251_query); }

		private static final SubtypeQuery test_6252_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{int, (int & int)}"));
		@Test public void test_6252() { testValid(test_6252_query); }

		private static final SubtypeQuery test_6253_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_6253() { testValid(test_6253_query); }

		private static final SubtypeQuery test_6254_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_6254() { testValid(test_6254_query); }

		private static final SubtypeQuery test_6255_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_6255() { testValid(test_6255_query); }

		private static final SubtypeQuery test_6256_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("(!any | any)"));
		@Test public void test_6256() { testValid(test_6256_query); }

		private static final SubtypeQuery test_6257_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("({int, any} | any)"));
		@Test public void test_6257() { testValid(test_6257_query); }

		private static final SubtypeQuery test_6258_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("({any, int} | any)"));
		@Test public void test_6258() { testValid(test_6258_query); }

		private static final SubtypeQuery test_6259_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("((int & int) | any)"));
		@Test public void test_6259() { testValid(test_6259_query); }

		private static final SubtypeQuery test_6260_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("({int, int} | int)"));
		@Test public void test_6260() { testValid(test_6260_query); }

		private static final SubtypeQuery test_6261_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("((any | any) | int)"));
		@Test public void test_6261() { testValid(test_6261_query); }

		private static final SubtypeQuery test_6262_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("((int | any) | int)"));
		@Test public void test_6262() { testValid(test_6262_query); }

		private static final SubtypeQuery test_6263_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("(any | {any})"));
		@Test public void test_6263() { testValid(test_6263_query); }

		private static final SubtypeQuery test_6264_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("(int | {any})"));
		@Test public void test_6264() { testValid(test_6264_query); }

		private static final SubtypeQuery test_6265_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("({any, any} | {any})"));
		@Test public void test_6265() { testValid(test_6265_query); }

		private static final SubtypeQuery test_6266_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("(any | {int})"));
		@Test public void test_6266() { testValid(test_6266_query); }

		private static final SubtypeQuery test_6267_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("((any | any) | {int})"));
		@Test public void test_6267() { testValid(test_6267_query); }

		private static final SubtypeQuery test_6268_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("(!int | !any)"));
		@Test public void test_6268() { testValid(test_6268_query); }

		private static final SubtypeQuery test_6269_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("({int, any} | !any)"));
		@Test public void test_6269() { testValid(test_6269_query); }

		private static final SubtypeQuery test_6270_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("((any | any) | !any)"));
		@Test public void test_6270() { testValid(test_6270_query); }

		private static final SubtypeQuery test_6271_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("({int} | !int)"));
		@Test public void test_6271() { testValid(test_6271_query); }

		private static final SubtypeQuery test_6272_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("(!any | !int)"));
		@Test public void test_6272() { testValid(test_6272_query); }

		private static final SubtypeQuery test_6273_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("(!int | {any, any})"));
		@Test public void test_6273() { testValid(test_6273_query); }

		private static final SubtypeQuery test_6274_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_6274() { testValid(test_6274_query); }

		private static final SubtypeQuery test_6275_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_6275() { testValid(test_6275_query); }

		private static final SubtypeQuery test_6276_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_6276() { testValid(test_6276_query); }

		private static final SubtypeQuery test_6277_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_6277() { testValid(test_6277_query); }

		private static final SubtypeQuery test_6278_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_6278() { testValid(test_6278_query); }

		private static final SubtypeQuery test_6279_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_6279() { testValid(test_6279_query); }

		private static final SubtypeQuery test_6280_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("({int} | (any | any))"));
		@Test public void test_6280() { testValid(test_6280_query); }

		private static final SubtypeQuery test_6281_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_6281() { testValid(test_6281_query); }

		private static final SubtypeQuery test_6282_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_6282() { testValid(test_6282_query); }

		private static final SubtypeQuery test_6283_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_6283() { testValid(test_6283_query); }

		private static final SubtypeQuery test_6284_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_6284() { testValid(test_6284_query); }

		private static final SubtypeQuery test_6285_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_6285() { testValid(test_6285_query); }

		private static final SubtypeQuery test_6286_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_6286() { testValid(test_6286_query); }

		private static final SubtypeQuery test_6287_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("(int | (any | int))"));
		@Test public void test_6287() { testValid(test_6287_query); }

		private static final SubtypeQuery test_6288_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_6288() { testValid(test_6288_query); }

		private static final SubtypeQuery test_6289_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_6289() { testValid(test_6289_query); }

		private static final SubtypeQuery test_6290_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_6290() { testValid(test_6290_query); }

		private static final SubtypeQuery test_6291_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_6291() { testValid(test_6291_query); }

		private static final SubtypeQuery test_6292_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("(!any | (int | int))"));
		@Test public void test_6292() { testValid(test_6292_query); }

		private static final SubtypeQuery test_6293_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_6293() { testValid(test_6293_query); }

		private static final SubtypeQuery test_6294_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("(int | (any & any))"));
		@Test public void test_6294() { testValid(test_6294_query); }

		private static final SubtypeQuery test_6295_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("(!any | (any & any))"));
		@Test public void test_6295() { testValid(test_6295_query); }

		private static final SubtypeQuery test_6296_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_6296() { testValid(test_6296_query); }

		private static final SubtypeQuery test_6297_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_6297() { testValid(test_6297_query); }

		private static final SubtypeQuery test_6298_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_6298() { testValid(test_6298_query); }

		private static final SubtypeQuery test_6299_query = createSubtypeQuery(parseWhiley("((int | any) | int)"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_6299() { testValid(test_6299_query); }

		private static final SubtypeQuery test_6300_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("!int"));
		@Test public void test_6300() { testValid(test_6300_query); }

		private static final SubtypeQuery test_6301_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("(any | any)"));
		@Test public void test_6301() { testValid(test_6301_query); }

		private static final SubtypeQuery test_6302_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("(any & any)"));
		@Test public void test_6302() { testValid(test_6302_query); }

		private static final SubtypeQuery test_6303_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{{int, int}}"));
		@Test public void test_6303() { testValid(test_6303_query); }

		private static final SubtypeQuery test_6304_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("!(int | int)"));
		@Test public void test_6304() { testValid(test_6304_query); }

		private static final SubtypeQuery test_6305_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{{any, any}, any}"));
		@Test public void test_6305() { testValid(test_6305_query); }

		private static final SubtypeQuery test_6306_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{{any, int}, any}"));
		@Test public void test_6306() { testValid(test_6306_query); }

		private static final SubtypeQuery test_6307_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{{any}, int}"));
		@Test public void test_6307() { testValid(test_6307_query); }

		private static final SubtypeQuery test_6308_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{{any, any}, int}"));
		@Test public void test_6308() { testValid(test_6308_query); }

		private static final SubtypeQuery test_6309_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{(any | int), int}"));
		@Test public void test_6309() { testValid(test_6309_query); }

		private static final SubtypeQuery test_6310_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_6310() { testValid(test_6310_query); }

		private static final SubtypeQuery test_6311_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{!any, {int}}"));
		@Test public void test_6311() { testValid(test_6311_query); }

		private static final SubtypeQuery test_6312_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_6312() { testValid(test_6312_query); }

		private static final SubtypeQuery test_6313_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_6313() { testValid(test_6313_query); }

		private static final SubtypeQuery test_6314_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{any, !any}"));
		@Test public void test_6314() { testValid(test_6314_query); }

		private static final SubtypeQuery test_6315_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{{any}, !int}"));
		@Test public void test_6315() { testValid(test_6315_query); }

		private static final SubtypeQuery test_6316_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_6316() { testValid(test_6316_query); }

		private static final SubtypeQuery test_6317_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_6317() { testValid(test_6317_query); }

		private static final SubtypeQuery test_6318_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{(int & int), !int}"));
		@Test public void test_6318() { testValid(test_6318_query); }

		private static final SubtypeQuery test_6319_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_6319() { testValid(test_6319_query); }

		private static final SubtypeQuery test_6320_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_6320() { testValid(test_6320_query); }

		private static final SubtypeQuery test_6321_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_6321() { testValid(test_6321_query); }

		private static final SubtypeQuery test_6322_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_6322() { testValid(test_6322_query); }

		private static final SubtypeQuery test_6323_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_6323() { testValid(test_6323_query); }

		private static final SubtypeQuery test_6324_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_6324() { testValid(test_6324_query); }

		private static final SubtypeQuery test_6325_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_6325() { testValid(test_6325_query); }

		private static final SubtypeQuery test_6326_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{any, {any, int}}"));
		@Test public void test_6326() { testValid(test_6326_query); }

		private static final SubtypeQuery test_6327_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_6327() { testValid(test_6327_query); }

		private static final SubtypeQuery test_6328_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_6328() { testValid(test_6328_query); }

		private static final SubtypeQuery test_6329_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_6329() { testValid(test_6329_query); }

		private static final SubtypeQuery test_6330_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_6330() { testValid(test_6330_query); }

		private static final SubtypeQuery test_6331_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_6331() { testValid(test_6331_query); }

		private static final SubtypeQuery test_6332_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_6332() { testValid(test_6332_query); }

		private static final SubtypeQuery test_6333_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_6333() { testValid(test_6333_query); }

		private static final SubtypeQuery test_6334_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_6334() { testValid(test_6334_query); }

		private static final SubtypeQuery test_6335_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_6335() { testValid(test_6335_query); }

		private static final SubtypeQuery test_6336_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_6336() { testValid(test_6336_query); }

		private static final SubtypeQuery test_6337_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{int, (int | int)}"));
		@Test public void test_6337() { testValid(test_6337_query); }

		private static final SubtypeQuery test_6338_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_6338() { testValid(test_6338_query); }

		private static final SubtypeQuery test_6339_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{any, (any & any)}"));
		@Test public void test_6339() { testValid(test_6339_query); }

		private static final SubtypeQuery test_6340_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_6340() { testValid(test_6340_query); }

		private static final SubtypeQuery test_6341_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_6341() { testValid(test_6341_query); }

		private static final SubtypeQuery test_6342_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_6342() { testValid(test_6342_query); }

		private static final SubtypeQuery test_6343_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_6343() { testValid(test_6343_query); }

		private static final SubtypeQuery test_6344_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_6344() { testValid(test_6344_query); }

		private static final SubtypeQuery test_6345_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_6345() { testValid(test_6345_query); }

		private static final SubtypeQuery test_6346_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_6346() { testValid(test_6346_query); }

		private static final SubtypeQuery test_6347_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_6347() { testValid(test_6347_query); }

		private static final SubtypeQuery test_6348_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{any, (any & int)}"));
		@Test public void test_6348() { testValid(test_6348_query); }

		private static final SubtypeQuery test_6349_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_6349() { testValid(test_6349_query); }

		private static final SubtypeQuery test_6350_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_6350() { testValid(test_6350_query); }

		private static final SubtypeQuery test_6351_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_6351() { testValid(test_6351_query); }

		private static final SubtypeQuery test_6352_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{int, (int & int)}"));
		@Test public void test_6352() { testValid(test_6352_query); }

		private static final SubtypeQuery test_6353_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_6353() { testValid(test_6353_query); }

		private static final SubtypeQuery test_6354_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_6354() { testValid(test_6354_query); }

		private static final SubtypeQuery test_6355_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_6355() { testValid(test_6355_query); }

		private static final SubtypeQuery test_6356_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("(!any | any)"));
		@Test public void test_6356() { testValid(test_6356_query); }

		private static final SubtypeQuery test_6357_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("({int, any} | any)"));
		@Test public void test_6357() { testValid(test_6357_query); }

		private static final SubtypeQuery test_6358_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("({any, int} | any)"));
		@Test public void test_6358() { testValid(test_6358_query); }

		private static final SubtypeQuery test_6359_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("((int & int) | any)"));
		@Test public void test_6359() { testValid(test_6359_query); }

		private static final SubtypeQuery test_6360_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("({int, int} | int)"));
		@Test public void test_6360() { testValid(test_6360_query); }

		private static final SubtypeQuery test_6361_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("((any | any) | int)"));
		@Test public void test_6361() { testValid(test_6361_query); }

		private static final SubtypeQuery test_6362_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("((int | any) | int)"));
		@Test public void test_6362() { testValid(test_6362_query); }

		private static final SubtypeQuery test_6363_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("(any | {any})"));
		@Test public void test_6363() { testValid(test_6363_query); }

		private static final SubtypeQuery test_6364_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("(int | {any})"));
		@Test public void test_6364() { testValid(test_6364_query); }

		private static final SubtypeQuery test_6365_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("({any, any} | {any})"));
		@Test public void test_6365() { testValid(test_6365_query); }

		private static final SubtypeQuery test_6366_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("(any | {int})"));
		@Test public void test_6366() { testValid(test_6366_query); }

		private static final SubtypeQuery test_6367_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("((any | any) | {int})"));
		@Test public void test_6367() { testValid(test_6367_query); }

		private static final SubtypeQuery test_6368_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("(!int | !any)"));
		@Test public void test_6368() { testValid(test_6368_query); }

		private static final SubtypeQuery test_6369_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("({int, any} | !any)"));
		@Test public void test_6369() { testValid(test_6369_query); }

		private static final SubtypeQuery test_6370_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("((any | any) | !any)"));
		@Test public void test_6370() { testValid(test_6370_query); }

		private static final SubtypeQuery test_6371_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("({int} | !int)"));
		@Test public void test_6371() { testValid(test_6371_query); }

		private static final SubtypeQuery test_6372_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("(!any | !int)"));
		@Test public void test_6372() { testValid(test_6372_query); }

		private static final SubtypeQuery test_6373_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("(!int | {any, any})"));
		@Test public void test_6373() { testValid(test_6373_query); }

		private static final SubtypeQuery test_6374_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_6374() { testValid(test_6374_query); }

		private static final SubtypeQuery test_6375_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_6375() { testValid(test_6375_query); }

		private static final SubtypeQuery test_6376_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_6376() { testValid(test_6376_query); }

		private static final SubtypeQuery test_6377_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_6377() { testValid(test_6377_query); }

		private static final SubtypeQuery test_6378_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_6378() { testValid(test_6378_query); }

		private static final SubtypeQuery test_6379_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_6379() { testValid(test_6379_query); }

		private static final SubtypeQuery test_6380_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("({int} | (any | any))"));
		@Test public void test_6380() { testValid(test_6380_query); }

		private static final SubtypeQuery test_6381_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_6381() { testValid(test_6381_query); }

		private static final SubtypeQuery test_6382_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_6382() { testValid(test_6382_query); }

		private static final SubtypeQuery test_6383_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_6383() { testValid(test_6383_query); }

		private static final SubtypeQuery test_6384_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_6384() { testValid(test_6384_query); }

		private static final SubtypeQuery test_6385_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_6385() { testValid(test_6385_query); }

		private static final SubtypeQuery test_6386_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_6386() { testValid(test_6386_query); }

		private static final SubtypeQuery test_6387_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("(int | (any | int))"));
		@Test public void test_6387() { testValid(test_6387_query); }

		private static final SubtypeQuery test_6388_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_6388() { testValid(test_6388_query); }

		private static final SubtypeQuery test_6389_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_6389() { testValid(test_6389_query); }

		private static final SubtypeQuery test_6390_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_6390() { testValid(test_6390_query); }

		private static final SubtypeQuery test_6391_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_6391() { testValid(test_6391_query); }

		private static final SubtypeQuery test_6392_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("(!any | (int | int))"));
		@Test public void test_6392() { testValid(test_6392_query); }

		private static final SubtypeQuery test_6393_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_6393() { testValid(test_6393_query); }

		private static final SubtypeQuery test_6394_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("(int | (any & any))"));
		@Test public void test_6394() { testValid(test_6394_query); }

		private static final SubtypeQuery test_6395_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("(!any | (any & any))"));
		@Test public void test_6395() { testValid(test_6395_query); }

		private static final SubtypeQuery test_6396_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_6396() { testValid(test_6396_query); }

		private static final SubtypeQuery test_6397_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_6397() { testValid(test_6397_query); }

		private static final SubtypeQuery test_6398_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_6398() { testValid(test_6398_query); }

		private static final SubtypeQuery test_6399_query = createSubtypeQuery(parseWhiley("(any | {any})"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_6399() { testValid(test_6399_query); }

		private static final SubtypeQuery test_6400_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("!int"));
		@Test public void test_6400() { testInvalid(test_6400_query); }

		private static final SubtypeQuery test_6401_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("(any | any)"));
		@Test public void test_6401() { testInvalid(test_6401_query); }

		private static final SubtypeQuery test_6402_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("(any & any)"));
		@Test public void test_6402() { testInvalid(test_6402_query); }

		private static final SubtypeQuery test_6403_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{{int, int}}"));
		@Test public void test_6403() { testValid(test_6403_query); }

		private static final SubtypeQuery test_6404_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("!(int | int)"));
		@Test public void test_6404() { testInvalid(test_6404_query); }

		private static final SubtypeQuery test_6405_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{{any, any}, any}"));
		@Test public void test_6405() { testInvalid(test_6405_query); }

		private static final SubtypeQuery test_6406_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{{any, int}, any}"));
		@Test public void test_6406() { testInvalid(test_6406_query); }

		private static final SubtypeQuery test_6407_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{{any}, int}"));
		@Test public void test_6407() { testInvalid(test_6407_query); }

		private static final SubtypeQuery test_6408_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{{any, any}, int}"));
		@Test public void test_6408() { testInvalid(test_6408_query); }

		private static final SubtypeQuery test_6409_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{(any | int), int}"));
		@Test public void test_6409() { testInvalid(test_6409_query); }

		private static final SubtypeQuery test_6410_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_6410() { testInvalid(test_6410_query); }

		private static final SubtypeQuery test_6411_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{!any, {int}}"));
		@Test public void test_6411() { testValid(test_6411_query); }

		private static final SubtypeQuery test_6412_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_6412() { testInvalid(test_6412_query); }

		private static final SubtypeQuery test_6413_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_6413() { testInvalid(test_6413_query); }

		private static final SubtypeQuery test_6414_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{any, !any}"));
		@Test public void test_6414() { testValid(test_6414_query); }

		private static final SubtypeQuery test_6415_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{{any}, !int}"));
		@Test public void test_6415() { testInvalid(test_6415_query); }

		private static final SubtypeQuery test_6416_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_6416() { testInvalid(test_6416_query); }

		private static final SubtypeQuery test_6417_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_6417() { testInvalid(test_6417_query); }

		private static final SubtypeQuery test_6418_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{(int & int), !int}"));
		@Test public void test_6418() { testInvalid(test_6418_query); }

		private static final SubtypeQuery test_6419_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_6419() { testInvalid(test_6419_query); }

		private static final SubtypeQuery test_6420_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_6420() { testInvalid(test_6420_query); }

		private static final SubtypeQuery test_6421_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_6421() { testInvalid(test_6421_query); }

		private static final SubtypeQuery test_6422_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_6422() { testInvalid(test_6422_query); }

		private static final SubtypeQuery test_6423_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_6423() { testInvalid(test_6423_query); }

		private static final SubtypeQuery test_6424_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_6424() { testInvalid(test_6424_query); }

		private static final SubtypeQuery test_6425_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_6425() { testInvalid(test_6425_query); }

		private static final SubtypeQuery test_6426_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{any, {any, int}}"));
		@Test public void test_6426() { testInvalid(test_6426_query); }

		private static final SubtypeQuery test_6427_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_6427() { testInvalid(test_6427_query); }

		private static final SubtypeQuery test_6428_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_6428() { testInvalid(test_6428_query); }

		private static final SubtypeQuery test_6429_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_6429() { testValid(test_6429_query); }

		private static final SubtypeQuery test_6430_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_6430() { testInvalid(test_6430_query); }

		private static final SubtypeQuery test_6431_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_6431() { testInvalid(test_6431_query); }

		private static final SubtypeQuery test_6432_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_6432() { testInvalid(test_6432_query); }

		private static final SubtypeQuery test_6433_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_6433() { testInvalid(test_6433_query); }

		private static final SubtypeQuery test_6434_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_6434() { testInvalid(test_6434_query); }

		private static final SubtypeQuery test_6435_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_6435() { testInvalid(test_6435_query); }

		private static final SubtypeQuery test_6436_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_6436() { testInvalid(test_6436_query); }

		private static final SubtypeQuery test_6437_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{int, (int | int)}"));
		@Test public void test_6437() { testInvalid(test_6437_query); }

		private static final SubtypeQuery test_6438_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_6438() { testInvalid(test_6438_query); }

		private static final SubtypeQuery test_6439_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{any, (any & any)}"));
		@Test public void test_6439() { testInvalid(test_6439_query); }

		private static final SubtypeQuery test_6440_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_6440() { testInvalid(test_6440_query); }

		private static final SubtypeQuery test_6441_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_6441() { testValid(test_6441_query); }

		private static final SubtypeQuery test_6442_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_6442() { testInvalid(test_6442_query); }

		private static final SubtypeQuery test_6443_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_6443() { testInvalid(test_6443_query); }

		private static final SubtypeQuery test_6444_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_6444() { testInvalid(test_6444_query); }

		private static final SubtypeQuery test_6445_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_6445() { testInvalid(test_6445_query); }

		private static final SubtypeQuery test_6446_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_6446() { testInvalid(test_6446_query); }

		private static final SubtypeQuery test_6447_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_6447() { testInvalid(test_6447_query); }

		private static final SubtypeQuery test_6448_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{any, (any & int)}"));
		@Test public void test_6448() { testInvalid(test_6448_query); }

		private static final SubtypeQuery test_6449_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_6449() { testInvalid(test_6449_query); }

		private static final SubtypeQuery test_6450_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_6450() { testInvalid(test_6450_query); }

		private static final SubtypeQuery test_6451_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_6451() { testInvalid(test_6451_query); }

		private static final SubtypeQuery test_6452_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{int, (int & int)}"));
		@Test public void test_6452() { testInvalid(test_6452_query); }

		private static final SubtypeQuery test_6453_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_6453() { testInvalid(test_6453_query); }

		private static final SubtypeQuery test_6454_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_6454() { testInvalid(test_6454_query); }

		private static final SubtypeQuery test_6455_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_6455() { testInvalid(test_6455_query); }

		private static final SubtypeQuery test_6456_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("(!any | any)"));
		@Test public void test_6456() { testInvalid(test_6456_query); }

		private static final SubtypeQuery test_6457_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("({int, any} | any)"));
		@Test public void test_6457() { testInvalid(test_6457_query); }

		private static final SubtypeQuery test_6458_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("({any, int} | any)"));
		@Test public void test_6458() { testInvalid(test_6458_query); }

		private static final SubtypeQuery test_6459_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("((int & int) | any)"));
		@Test public void test_6459() { testInvalid(test_6459_query); }

		private static final SubtypeQuery test_6460_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("({int, int} | int)"));
		@Test public void test_6460() { testInvalid(test_6460_query); }

		private static final SubtypeQuery test_6461_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("((any | any) | int)"));
		@Test public void test_6461() { testInvalid(test_6461_query); }

		private static final SubtypeQuery test_6462_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("((int | any) | int)"));
		@Test public void test_6462() { testInvalid(test_6462_query); }

		private static final SubtypeQuery test_6463_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("(any | {any})"));
		@Test public void test_6463() { testInvalid(test_6463_query); }

		private static final SubtypeQuery test_6464_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("(int | {any})"));
		@Test public void test_6464() { testValid(test_6464_query); }

		private static final SubtypeQuery test_6465_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("({any, any} | {any})"));
		@Test public void test_6465() { testInvalid(test_6465_query); }

		private static final SubtypeQuery test_6466_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("(any | {int})"));
		@Test public void test_6466() { testInvalid(test_6466_query); }

		private static final SubtypeQuery test_6467_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("((any | any) | {int})"));
		@Test public void test_6467() { testInvalid(test_6467_query); }

		private static final SubtypeQuery test_6468_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("(!int | !any)"));
		@Test public void test_6468() { testInvalid(test_6468_query); }

		private static final SubtypeQuery test_6469_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("({int, any} | !any)"));
		@Test public void test_6469() { testInvalid(test_6469_query); }

		private static final SubtypeQuery test_6470_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("((any | any) | !any)"));
		@Test public void test_6470() { testInvalid(test_6470_query); }

		private static final SubtypeQuery test_6471_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("({int} | !int)"));
		@Test public void test_6471() { testInvalid(test_6471_query); }

		private static final SubtypeQuery test_6472_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("(!any | !int)"));
		@Test public void test_6472() { testInvalid(test_6472_query); }

		private static final SubtypeQuery test_6473_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("(!int | {any, any})"));
		@Test public void test_6473() { testInvalid(test_6473_query); }

		private static final SubtypeQuery test_6474_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_6474() { testInvalid(test_6474_query); }

		private static final SubtypeQuery test_6475_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_6475() { testInvalid(test_6475_query); }

		private static final SubtypeQuery test_6476_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_6476() { testInvalid(test_6476_query); }

		private static final SubtypeQuery test_6477_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_6477() { testInvalid(test_6477_query); }

		private static final SubtypeQuery test_6478_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_6478() { testInvalid(test_6478_query); }

		private static final SubtypeQuery test_6479_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_6479() { testInvalid(test_6479_query); }

		private static final SubtypeQuery test_6480_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("({int} | (any | any))"));
		@Test public void test_6480() { testInvalid(test_6480_query); }

		private static final SubtypeQuery test_6481_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_6481() { testInvalid(test_6481_query); }

		private static final SubtypeQuery test_6482_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_6482() { testInvalid(test_6482_query); }

		private static final SubtypeQuery test_6483_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_6483() { testInvalid(test_6483_query); }

		private static final SubtypeQuery test_6484_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_6484() { testInvalid(test_6484_query); }

		private static final SubtypeQuery test_6485_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_6485() { testInvalid(test_6485_query); }

		private static final SubtypeQuery test_6486_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_6486() { testInvalid(test_6486_query); }

		private static final SubtypeQuery test_6487_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("(int | (any | int))"));
		@Test public void test_6487() { testInvalid(test_6487_query); }

		private static final SubtypeQuery test_6488_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_6488() { testInvalid(test_6488_query); }

		private static final SubtypeQuery test_6489_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_6489() { testInvalid(test_6489_query); }

		private static final SubtypeQuery test_6490_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_6490() { testInvalid(test_6490_query); }

		private static final SubtypeQuery test_6491_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_6491() { testInvalid(test_6491_query); }

		private static final SubtypeQuery test_6492_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("(!any | (int | int))"));
		@Test public void test_6492() { testValid(test_6492_query); }

		private static final SubtypeQuery test_6493_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_6493() { testInvalid(test_6493_query); }

		private static final SubtypeQuery test_6494_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("(int | (any & any))"));
		@Test public void test_6494() { testInvalid(test_6494_query); }

		private static final SubtypeQuery test_6495_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("(!any | (any & any))"));
		@Test public void test_6495() { testInvalid(test_6495_query); }

		private static final SubtypeQuery test_6496_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_6496() { testInvalid(test_6496_query); }

		private static final SubtypeQuery test_6497_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_6497() { testInvalid(test_6497_query); }

		private static final SubtypeQuery test_6498_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_6498() { testInvalid(test_6498_query); }

		private static final SubtypeQuery test_6499_query = createSubtypeQuery(parseWhiley("(int | {any})"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_6499() { testInvalid(test_6499_query); }

		private static final SubtypeQuery test_6500_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("!int"));
		@Test public void test_6500() { testInvalid(test_6500_query); }

		private static final SubtypeQuery test_6501_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("(any | any)"));
		@Test public void test_6501() { testInvalid(test_6501_query); }

		private static final SubtypeQuery test_6502_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("(any & any)"));
		@Test public void test_6502() { testInvalid(test_6502_query); }

		private static final SubtypeQuery test_6503_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{{int, int}}"));
		@Test public void test_6503() { testValid(test_6503_query); }

		private static final SubtypeQuery test_6504_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("!(int | int)"));
		@Test public void test_6504() { testInvalid(test_6504_query); }

		private static final SubtypeQuery test_6505_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{{any, any}, any}"));
		@Test public void test_6505() { testValid(test_6505_query); }

		private static final SubtypeQuery test_6506_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{{any, int}, any}"));
		@Test public void test_6506() { testValid(test_6506_query); }

		private static final SubtypeQuery test_6507_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{{any}, int}"));
		@Test public void test_6507() { testValid(test_6507_query); }

		private static final SubtypeQuery test_6508_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{{any, any}, int}"));
		@Test public void test_6508() { testValid(test_6508_query); }

		private static final SubtypeQuery test_6509_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{(any | int), int}"));
		@Test public void test_6509() { testValid(test_6509_query); }

		private static final SubtypeQuery test_6510_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_6510() { testValid(test_6510_query); }

		private static final SubtypeQuery test_6511_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{!any, {int}}"));
		@Test public void test_6511() { testValid(test_6511_query); }

		private static final SubtypeQuery test_6512_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_6512() { testValid(test_6512_query); }

		private static final SubtypeQuery test_6513_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_6513() { testValid(test_6513_query); }

		private static final SubtypeQuery test_6514_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{any, !any}"));
		@Test public void test_6514() { testValid(test_6514_query); }

		private static final SubtypeQuery test_6515_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{{any}, !int}"));
		@Test public void test_6515() { testValid(test_6515_query); }

		private static final SubtypeQuery test_6516_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_6516() { testValid(test_6516_query); }

		private static final SubtypeQuery test_6517_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_6517() { testValid(test_6517_query); }

		private static final SubtypeQuery test_6518_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{(int & int), !int}"));
		@Test public void test_6518() { testValid(test_6518_query); }

		private static final SubtypeQuery test_6519_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_6519() { testValid(test_6519_query); }

		private static final SubtypeQuery test_6520_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_6520() { testValid(test_6520_query); }

		private static final SubtypeQuery test_6521_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_6521() { testValid(test_6521_query); }

		private static final SubtypeQuery test_6522_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_6522() { testValid(test_6522_query); }

		private static final SubtypeQuery test_6523_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_6523() { testValid(test_6523_query); }

		private static final SubtypeQuery test_6524_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_6524() { testValid(test_6524_query); }

		private static final SubtypeQuery test_6525_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_6525() { testValid(test_6525_query); }

		private static final SubtypeQuery test_6526_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{any, {any, int}}"));
		@Test public void test_6526() { testValid(test_6526_query); }

		private static final SubtypeQuery test_6527_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_6527() { testValid(test_6527_query); }

		private static final SubtypeQuery test_6528_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_6528() { testValid(test_6528_query); }

		private static final SubtypeQuery test_6529_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_6529() { testValid(test_6529_query); }

		private static final SubtypeQuery test_6530_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_6530() { testValid(test_6530_query); }

		private static final SubtypeQuery test_6531_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_6531() { testValid(test_6531_query); }

		private static final SubtypeQuery test_6532_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_6532() { testValid(test_6532_query); }

		private static final SubtypeQuery test_6533_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_6533() { testValid(test_6533_query); }

		private static final SubtypeQuery test_6534_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_6534() { testValid(test_6534_query); }

		private static final SubtypeQuery test_6535_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_6535() { testValid(test_6535_query); }

		private static final SubtypeQuery test_6536_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_6536() { testValid(test_6536_query); }

		private static final SubtypeQuery test_6537_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{int, (int | int)}"));
		@Test public void test_6537() { testValid(test_6537_query); }

		private static final SubtypeQuery test_6538_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_6538() { testValid(test_6538_query); }

		private static final SubtypeQuery test_6539_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{any, (any & any)}"));
		@Test public void test_6539() { testValid(test_6539_query); }

		private static final SubtypeQuery test_6540_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_6540() { testValid(test_6540_query); }

		private static final SubtypeQuery test_6541_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_6541() { testValid(test_6541_query); }

		private static final SubtypeQuery test_6542_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_6542() { testValid(test_6542_query); }

		private static final SubtypeQuery test_6543_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_6543() { testValid(test_6543_query); }

		private static final SubtypeQuery test_6544_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_6544() { testValid(test_6544_query); }

		private static final SubtypeQuery test_6545_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_6545() { testValid(test_6545_query); }

		private static final SubtypeQuery test_6546_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_6546() { testValid(test_6546_query); }

		private static final SubtypeQuery test_6547_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_6547() { testValid(test_6547_query); }

		private static final SubtypeQuery test_6548_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{any, (any & int)}"));
		@Test public void test_6548() { testValid(test_6548_query); }

		private static final SubtypeQuery test_6549_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_6549() { testValid(test_6549_query); }

		private static final SubtypeQuery test_6550_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_6550() { testValid(test_6550_query); }

		private static final SubtypeQuery test_6551_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_6551() { testValid(test_6551_query); }

		private static final SubtypeQuery test_6552_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{int, (int & int)}"));
		@Test public void test_6552() { testValid(test_6552_query); }

		private static final SubtypeQuery test_6553_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_6553() { testValid(test_6553_query); }

		private static final SubtypeQuery test_6554_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_6554() { testValid(test_6554_query); }

		private static final SubtypeQuery test_6555_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_6555() { testValid(test_6555_query); }

		private static final SubtypeQuery test_6556_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("(!any | any)"));
		@Test public void test_6556() { testInvalid(test_6556_query); }

		private static final SubtypeQuery test_6557_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("({int, any} | any)"));
		@Test public void test_6557() { testInvalid(test_6557_query); }

		private static final SubtypeQuery test_6558_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("({any, int} | any)"));
		@Test public void test_6558() { testInvalid(test_6558_query); }

		private static final SubtypeQuery test_6559_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("((int & int) | any)"));
		@Test public void test_6559() { testInvalid(test_6559_query); }

		private static final SubtypeQuery test_6560_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("({int, int} | int)"));
		@Test public void test_6560() { testInvalid(test_6560_query); }

		private static final SubtypeQuery test_6561_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("((any | any) | int)"));
		@Test public void test_6561() { testInvalid(test_6561_query); }

		private static final SubtypeQuery test_6562_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("((int | any) | int)"));
		@Test public void test_6562() { testInvalid(test_6562_query); }

		private static final SubtypeQuery test_6563_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("(any | {any})"));
		@Test public void test_6563() { testInvalid(test_6563_query); }

		private static final SubtypeQuery test_6564_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("(int | {any})"));
		@Test public void test_6564() { testInvalid(test_6564_query); }

		private static final SubtypeQuery test_6565_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("({any, any} | {any})"));
		@Test public void test_6565() { testValid(test_6565_query); }

		private static final SubtypeQuery test_6566_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("(any | {int})"));
		@Test public void test_6566() { testInvalid(test_6566_query); }

		private static final SubtypeQuery test_6567_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("((any | any) | {int})"));
		@Test public void test_6567() { testInvalid(test_6567_query); }

		private static final SubtypeQuery test_6568_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("(!int | !any)"));
		@Test public void test_6568() { testInvalid(test_6568_query); }

		private static final SubtypeQuery test_6569_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("({int, any} | !any)"));
		@Test public void test_6569() { testValid(test_6569_query); }

		private static final SubtypeQuery test_6570_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("((any | any) | !any)"));
		@Test public void test_6570() { testInvalid(test_6570_query); }

		private static final SubtypeQuery test_6571_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("({int} | !int)"));
		@Test public void test_6571() { testInvalid(test_6571_query); }

		private static final SubtypeQuery test_6572_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("(!any | !int)"));
		@Test public void test_6572() { testInvalid(test_6572_query); }

		private static final SubtypeQuery test_6573_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("(!int | {any, any})"));
		@Test public void test_6573() { testInvalid(test_6573_query); }

		private static final SubtypeQuery test_6574_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_6574() { testInvalid(test_6574_query); }

		private static final SubtypeQuery test_6575_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_6575() { testInvalid(test_6575_query); }

		private static final SubtypeQuery test_6576_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_6576() { testValid(test_6576_query); }

		private static final SubtypeQuery test_6577_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_6577() { testInvalid(test_6577_query); }

		private static final SubtypeQuery test_6578_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_6578() { testInvalid(test_6578_query); }

		private static final SubtypeQuery test_6579_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_6579() { testInvalid(test_6579_query); }

		private static final SubtypeQuery test_6580_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("({int} | (any | any))"));
		@Test public void test_6580() { testInvalid(test_6580_query); }

		private static final SubtypeQuery test_6581_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_6581() { testInvalid(test_6581_query); }

		private static final SubtypeQuery test_6582_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_6582() { testInvalid(test_6582_query); }

		private static final SubtypeQuery test_6583_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_6583() { testInvalid(test_6583_query); }

		private static final SubtypeQuery test_6584_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_6584() { testInvalid(test_6584_query); }

		private static final SubtypeQuery test_6585_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_6585() { testInvalid(test_6585_query); }

		private static final SubtypeQuery test_6586_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_6586() { testInvalid(test_6586_query); }

		private static final SubtypeQuery test_6587_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("(int | (any | int))"));
		@Test public void test_6587() { testInvalid(test_6587_query); }

		private static final SubtypeQuery test_6588_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_6588() { testInvalid(test_6588_query); }

		private static final SubtypeQuery test_6589_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_6589() { testInvalid(test_6589_query); }

		private static final SubtypeQuery test_6590_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_6590() { testInvalid(test_6590_query); }

		private static final SubtypeQuery test_6591_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_6591() { testInvalid(test_6591_query); }

		private static final SubtypeQuery test_6592_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("(!any | (int | int))"));
		@Test public void test_6592() { testInvalid(test_6592_query); }

		private static final SubtypeQuery test_6593_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_6593() { testInvalid(test_6593_query); }

		private static final SubtypeQuery test_6594_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("(int | (any & any))"));
		@Test public void test_6594() { testInvalid(test_6594_query); }

		private static final SubtypeQuery test_6595_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("(!any | (any & any))"));
		@Test public void test_6595() { testInvalid(test_6595_query); }

		private static final SubtypeQuery test_6596_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_6596() { testInvalid(test_6596_query); }

		private static final SubtypeQuery test_6597_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_6597() { testInvalid(test_6597_query); }

		private static final SubtypeQuery test_6598_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_6598() { testInvalid(test_6598_query); }

		private static final SubtypeQuery test_6599_query = createSubtypeQuery(parseWhiley("({any, any} | {any})"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_6599() { testInvalid(test_6599_query); }

		private static final SubtypeQuery test_6600_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("!int"));
		@Test public void test_6600() { testValid(test_6600_query); }

		private static final SubtypeQuery test_6601_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("(any | any)"));
		@Test public void test_6601() { testValid(test_6601_query); }

		private static final SubtypeQuery test_6602_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("(any & any)"));
		@Test public void test_6602() { testValid(test_6602_query); }

		private static final SubtypeQuery test_6603_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{{int, int}}"));
		@Test public void test_6603() { testValid(test_6603_query); }

		private static final SubtypeQuery test_6604_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("!(int | int)"));
		@Test public void test_6604() { testValid(test_6604_query); }

		private static final SubtypeQuery test_6605_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{{any, any}, any}"));
		@Test public void test_6605() { testValid(test_6605_query); }

		private static final SubtypeQuery test_6606_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{{any, int}, any}"));
		@Test public void test_6606() { testValid(test_6606_query); }

		private static final SubtypeQuery test_6607_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{{any}, int}"));
		@Test public void test_6607() { testValid(test_6607_query); }

		private static final SubtypeQuery test_6608_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{{any, any}, int}"));
		@Test public void test_6608() { testValid(test_6608_query); }

		private static final SubtypeQuery test_6609_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{(any | int), int}"));
		@Test public void test_6609() { testValid(test_6609_query); }

		private static final SubtypeQuery test_6610_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_6610() { testValid(test_6610_query); }

		private static final SubtypeQuery test_6611_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{!any, {int}}"));
		@Test public void test_6611() { testValid(test_6611_query); }

		private static final SubtypeQuery test_6612_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_6612() { testValid(test_6612_query); }

		private static final SubtypeQuery test_6613_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_6613() { testValid(test_6613_query); }

		private static final SubtypeQuery test_6614_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{any, !any}"));
		@Test public void test_6614() { testValid(test_6614_query); }

		private static final SubtypeQuery test_6615_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{{any}, !int}"));
		@Test public void test_6615() { testValid(test_6615_query); }

		private static final SubtypeQuery test_6616_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_6616() { testValid(test_6616_query); }

		private static final SubtypeQuery test_6617_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_6617() { testValid(test_6617_query); }

		private static final SubtypeQuery test_6618_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{(int & int), !int}"));
		@Test public void test_6618() { testValid(test_6618_query); }

		private static final SubtypeQuery test_6619_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_6619() { testValid(test_6619_query); }

		private static final SubtypeQuery test_6620_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_6620() { testValid(test_6620_query); }

		private static final SubtypeQuery test_6621_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_6621() { testValid(test_6621_query); }

		private static final SubtypeQuery test_6622_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_6622() { testValid(test_6622_query); }

		private static final SubtypeQuery test_6623_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_6623() { testValid(test_6623_query); }

		private static final SubtypeQuery test_6624_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_6624() { testValid(test_6624_query); }

		private static final SubtypeQuery test_6625_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_6625() { testValid(test_6625_query); }

		private static final SubtypeQuery test_6626_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{any, {any, int}}"));
		@Test public void test_6626() { testValid(test_6626_query); }

		private static final SubtypeQuery test_6627_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_6627() { testValid(test_6627_query); }

		private static final SubtypeQuery test_6628_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_6628() { testValid(test_6628_query); }

		private static final SubtypeQuery test_6629_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_6629() { testValid(test_6629_query); }

		private static final SubtypeQuery test_6630_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_6630() { testValid(test_6630_query); }

		private static final SubtypeQuery test_6631_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_6631() { testValid(test_6631_query); }

		private static final SubtypeQuery test_6632_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_6632() { testValid(test_6632_query); }

		private static final SubtypeQuery test_6633_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_6633() { testValid(test_6633_query); }

		private static final SubtypeQuery test_6634_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_6634() { testValid(test_6634_query); }

		private static final SubtypeQuery test_6635_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_6635() { testValid(test_6635_query); }

		private static final SubtypeQuery test_6636_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_6636() { testValid(test_6636_query); }

		private static final SubtypeQuery test_6637_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{int, (int | int)}"));
		@Test public void test_6637() { testValid(test_6637_query); }

		private static final SubtypeQuery test_6638_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_6638() { testValid(test_6638_query); }

		private static final SubtypeQuery test_6639_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{any, (any & any)}"));
		@Test public void test_6639() { testValid(test_6639_query); }

		private static final SubtypeQuery test_6640_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_6640() { testValid(test_6640_query); }

		private static final SubtypeQuery test_6641_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_6641() { testValid(test_6641_query); }

		private static final SubtypeQuery test_6642_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_6642() { testValid(test_6642_query); }

		private static final SubtypeQuery test_6643_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_6643() { testValid(test_6643_query); }

		private static final SubtypeQuery test_6644_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_6644() { testValid(test_6644_query); }

		private static final SubtypeQuery test_6645_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_6645() { testValid(test_6645_query); }

		private static final SubtypeQuery test_6646_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_6646() { testValid(test_6646_query); }

		private static final SubtypeQuery test_6647_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_6647() { testValid(test_6647_query); }

		private static final SubtypeQuery test_6648_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{any, (any & int)}"));
		@Test public void test_6648() { testValid(test_6648_query); }

		private static final SubtypeQuery test_6649_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_6649() { testValid(test_6649_query); }

		private static final SubtypeQuery test_6650_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_6650() { testValid(test_6650_query); }

		private static final SubtypeQuery test_6651_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_6651() { testValid(test_6651_query); }

		private static final SubtypeQuery test_6652_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{int, (int & int)}"));
		@Test public void test_6652() { testValid(test_6652_query); }

		private static final SubtypeQuery test_6653_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_6653() { testValid(test_6653_query); }

		private static final SubtypeQuery test_6654_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_6654() { testValid(test_6654_query); }

		private static final SubtypeQuery test_6655_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_6655() { testValid(test_6655_query); }

		private static final SubtypeQuery test_6656_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("(!any | any)"));
		@Test public void test_6656() { testValid(test_6656_query); }

		private static final SubtypeQuery test_6657_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("({int, any} | any)"));
		@Test public void test_6657() { testValid(test_6657_query); }

		private static final SubtypeQuery test_6658_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("({any, int} | any)"));
		@Test public void test_6658() { testValid(test_6658_query); }

		private static final SubtypeQuery test_6659_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("((int & int) | any)"));
		@Test public void test_6659() { testValid(test_6659_query); }

		private static final SubtypeQuery test_6660_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("({int, int} | int)"));
		@Test public void test_6660() { testValid(test_6660_query); }

		private static final SubtypeQuery test_6661_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("((any | any) | int)"));
		@Test public void test_6661() { testValid(test_6661_query); }

		private static final SubtypeQuery test_6662_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("((int | any) | int)"));
		@Test public void test_6662() { testValid(test_6662_query); }

		private static final SubtypeQuery test_6663_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("(any | {any})"));
		@Test public void test_6663() { testValid(test_6663_query); }

		private static final SubtypeQuery test_6664_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("(int | {any})"));
		@Test public void test_6664() { testValid(test_6664_query); }

		private static final SubtypeQuery test_6665_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("({any, any} | {any})"));
		@Test public void test_6665() { testValid(test_6665_query); }

		private static final SubtypeQuery test_6666_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("(any | {int})"));
		@Test public void test_6666() { testValid(test_6666_query); }

		private static final SubtypeQuery test_6667_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("((any | any) | {int})"));
		@Test public void test_6667() { testValid(test_6667_query); }

		private static final SubtypeQuery test_6668_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("(!int | !any)"));
		@Test public void test_6668() { testValid(test_6668_query); }

		private static final SubtypeQuery test_6669_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("({int, any} | !any)"));
		@Test public void test_6669() { testValid(test_6669_query); }

		private static final SubtypeQuery test_6670_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("((any | any) | !any)"));
		@Test public void test_6670() { testValid(test_6670_query); }

		private static final SubtypeQuery test_6671_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("({int} | !int)"));
		@Test public void test_6671() { testValid(test_6671_query); }

		private static final SubtypeQuery test_6672_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("(!any | !int)"));
		@Test public void test_6672() { testValid(test_6672_query); }

		private static final SubtypeQuery test_6673_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("(!int | {any, any})"));
		@Test public void test_6673() { testValid(test_6673_query); }

		private static final SubtypeQuery test_6674_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_6674() { testValid(test_6674_query); }

		private static final SubtypeQuery test_6675_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_6675() { testValid(test_6675_query); }

		private static final SubtypeQuery test_6676_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_6676() { testValid(test_6676_query); }

		private static final SubtypeQuery test_6677_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_6677() { testValid(test_6677_query); }

		private static final SubtypeQuery test_6678_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_6678() { testValid(test_6678_query); }

		private static final SubtypeQuery test_6679_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_6679() { testValid(test_6679_query); }

		private static final SubtypeQuery test_6680_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("({int} | (any | any))"));
		@Test public void test_6680() { testValid(test_6680_query); }

		private static final SubtypeQuery test_6681_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_6681() { testValid(test_6681_query); }

		private static final SubtypeQuery test_6682_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_6682() { testValid(test_6682_query); }

		private static final SubtypeQuery test_6683_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_6683() { testValid(test_6683_query); }

		private static final SubtypeQuery test_6684_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_6684() { testValid(test_6684_query); }

		private static final SubtypeQuery test_6685_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_6685() { testValid(test_6685_query); }

		private static final SubtypeQuery test_6686_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_6686() { testValid(test_6686_query); }

		private static final SubtypeQuery test_6687_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("(int | (any | int))"));
		@Test public void test_6687() { testValid(test_6687_query); }

		private static final SubtypeQuery test_6688_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_6688() { testValid(test_6688_query); }

		private static final SubtypeQuery test_6689_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_6689() { testValid(test_6689_query); }

		private static final SubtypeQuery test_6690_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_6690() { testValid(test_6690_query); }

		private static final SubtypeQuery test_6691_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_6691() { testValid(test_6691_query); }

		private static final SubtypeQuery test_6692_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("(!any | (int | int))"));
		@Test public void test_6692() { testValid(test_6692_query); }

		private static final SubtypeQuery test_6693_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_6693() { testValid(test_6693_query); }

		private static final SubtypeQuery test_6694_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("(int | (any & any))"));
		@Test public void test_6694() { testValid(test_6694_query); }

		private static final SubtypeQuery test_6695_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("(!any | (any & any))"));
		@Test public void test_6695() { testValid(test_6695_query); }

		private static final SubtypeQuery test_6696_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_6696() { testValid(test_6696_query); }

		private static final SubtypeQuery test_6697_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_6697() { testValid(test_6697_query); }

		private static final SubtypeQuery test_6698_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_6698() { testValid(test_6698_query); }

		private static final SubtypeQuery test_6699_query = createSubtypeQuery(parseWhiley("(any | {int})"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_6699() { testValid(test_6699_query); }

		private static final SubtypeQuery test_6700_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("!int"));
		@Test public void test_6700() { testValid(test_6700_query); }

		private static final SubtypeQuery test_6701_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("(any | any)"));
		@Test public void test_6701() { testValid(test_6701_query); }

		private static final SubtypeQuery test_6702_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("(any & any)"));
		@Test public void test_6702() { testValid(test_6702_query); }

		private static final SubtypeQuery test_6703_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{{int, int}}"));
		@Test public void test_6703() { testValid(test_6703_query); }

		private static final SubtypeQuery test_6704_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("!(int | int)"));
		@Test public void test_6704() { testValid(test_6704_query); }

		private static final SubtypeQuery test_6705_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{{any, any}, any}"));
		@Test public void test_6705() { testValid(test_6705_query); }

		private static final SubtypeQuery test_6706_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{{any, int}, any}"));
		@Test public void test_6706() { testValid(test_6706_query); }

		private static final SubtypeQuery test_6707_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{{any}, int}"));
		@Test public void test_6707() { testValid(test_6707_query); }

		private static final SubtypeQuery test_6708_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{{any, any}, int}"));
		@Test public void test_6708() { testValid(test_6708_query); }

		private static final SubtypeQuery test_6709_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{(any | int), int}"));
		@Test public void test_6709() { testValid(test_6709_query); }

		private static final SubtypeQuery test_6710_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_6710() { testValid(test_6710_query); }

		private static final SubtypeQuery test_6711_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{!any, {int}}"));
		@Test public void test_6711() { testValid(test_6711_query); }

		private static final SubtypeQuery test_6712_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_6712() { testValid(test_6712_query); }

		private static final SubtypeQuery test_6713_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_6713() { testValid(test_6713_query); }

		private static final SubtypeQuery test_6714_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{any, !any}"));
		@Test public void test_6714() { testValid(test_6714_query); }

		private static final SubtypeQuery test_6715_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{{any}, !int}"));
		@Test public void test_6715() { testValid(test_6715_query); }

		private static final SubtypeQuery test_6716_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_6716() { testValid(test_6716_query); }

		private static final SubtypeQuery test_6717_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_6717() { testValid(test_6717_query); }

		private static final SubtypeQuery test_6718_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{(int & int), !int}"));
		@Test public void test_6718() { testValid(test_6718_query); }

		private static final SubtypeQuery test_6719_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_6719() { testValid(test_6719_query); }

		private static final SubtypeQuery test_6720_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_6720() { testValid(test_6720_query); }

		private static final SubtypeQuery test_6721_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_6721() { testValid(test_6721_query); }

		private static final SubtypeQuery test_6722_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_6722() { testValid(test_6722_query); }

		private static final SubtypeQuery test_6723_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_6723() { testValid(test_6723_query); }

		private static final SubtypeQuery test_6724_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_6724() { testValid(test_6724_query); }

		private static final SubtypeQuery test_6725_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_6725() { testValid(test_6725_query); }

		private static final SubtypeQuery test_6726_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{any, {any, int}}"));
		@Test public void test_6726() { testValid(test_6726_query); }

		private static final SubtypeQuery test_6727_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_6727() { testValid(test_6727_query); }

		private static final SubtypeQuery test_6728_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_6728() { testValid(test_6728_query); }

		private static final SubtypeQuery test_6729_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_6729() { testValid(test_6729_query); }

		private static final SubtypeQuery test_6730_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_6730() { testValid(test_6730_query); }

		private static final SubtypeQuery test_6731_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_6731() { testValid(test_6731_query); }

		private static final SubtypeQuery test_6732_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_6732() { testValid(test_6732_query); }

		private static final SubtypeQuery test_6733_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_6733() { testValid(test_6733_query); }

		private static final SubtypeQuery test_6734_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_6734() { testValid(test_6734_query); }

		private static final SubtypeQuery test_6735_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_6735() { testValid(test_6735_query); }

		private static final SubtypeQuery test_6736_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_6736() { testValid(test_6736_query); }

		private static final SubtypeQuery test_6737_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{int, (int | int)}"));
		@Test public void test_6737() { testValid(test_6737_query); }

		private static final SubtypeQuery test_6738_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_6738() { testValid(test_6738_query); }

		private static final SubtypeQuery test_6739_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{any, (any & any)}"));
		@Test public void test_6739() { testValid(test_6739_query); }

		private static final SubtypeQuery test_6740_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_6740() { testValid(test_6740_query); }

		private static final SubtypeQuery test_6741_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_6741() { testValid(test_6741_query); }

		private static final SubtypeQuery test_6742_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_6742() { testValid(test_6742_query); }

		private static final SubtypeQuery test_6743_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_6743() { testValid(test_6743_query); }

		private static final SubtypeQuery test_6744_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_6744() { testValid(test_6744_query); }

		private static final SubtypeQuery test_6745_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_6745() { testValid(test_6745_query); }

		private static final SubtypeQuery test_6746_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_6746() { testValid(test_6746_query); }

		private static final SubtypeQuery test_6747_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_6747() { testValid(test_6747_query); }

		private static final SubtypeQuery test_6748_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{any, (any & int)}"));
		@Test public void test_6748() { testValid(test_6748_query); }

		private static final SubtypeQuery test_6749_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_6749() { testValid(test_6749_query); }

		private static final SubtypeQuery test_6750_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_6750() { testValid(test_6750_query); }

		private static final SubtypeQuery test_6751_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_6751() { testValid(test_6751_query); }

		private static final SubtypeQuery test_6752_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{int, (int & int)}"));
		@Test public void test_6752() { testValid(test_6752_query); }

		private static final SubtypeQuery test_6753_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_6753() { testValid(test_6753_query); }

		private static final SubtypeQuery test_6754_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_6754() { testValid(test_6754_query); }

		private static final SubtypeQuery test_6755_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_6755() { testValid(test_6755_query); }

		private static final SubtypeQuery test_6756_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("(!any | any)"));
		@Test public void test_6756() { testValid(test_6756_query); }

		private static final SubtypeQuery test_6757_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("({int, any} | any)"));
		@Test public void test_6757() { testValid(test_6757_query); }

		private static final SubtypeQuery test_6758_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("({any, int} | any)"));
		@Test public void test_6758() { testValid(test_6758_query); }

		private static final SubtypeQuery test_6759_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("((int & int) | any)"));
		@Test public void test_6759() { testValid(test_6759_query); }

		private static final SubtypeQuery test_6760_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("({int, int} | int)"));
		@Test public void test_6760() { testValid(test_6760_query); }

		private static final SubtypeQuery test_6761_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("((any | any) | int)"));
		@Test public void test_6761() { testValid(test_6761_query); }

		private static final SubtypeQuery test_6762_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("((int | any) | int)"));
		@Test public void test_6762() { testValid(test_6762_query); }

		private static final SubtypeQuery test_6763_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("(any | {any})"));
		@Test public void test_6763() { testValid(test_6763_query); }

		private static final SubtypeQuery test_6764_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("(int | {any})"));
		@Test public void test_6764() { testValid(test_6764_query); }

		private static final SubtypeQuery test_6765_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("({any, any} | {any})"));
		@Test public void test_6765() { testValid(test_6765_query); }

		private static final SubtypeQuery test_6766_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("(any | {int})"));
		@Test public void test_6766() { testValid(test_6766_query); }

		private static final SubtypeQuery test_6767_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("((any | any) | {int})"));
		@Test public void test_6767() { testValid(test_6767_query); }

		private static final SubtypeQuery test_6768_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("(!int | !any)"));
		@Test public void test_6768() { testValid(test_6768_query); }

		private static final SubtypeQuery test_6769_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("({int, any} | !any)"));
		@Test public void test_6769() { testValid(test_6769_query); }

		private static final SubtypeQuery test_6770_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("((any | any) | !any)"));
		@Test public void test_6770() { testValid(test_6770_query); }

		private static final SubtypeQuery test_6771_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("({int} | !int)"));
		@Test public void test_6771() { testValid(test_6771_query); }

		private static final SubtypeQuery test_6772_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("(!any | !int)"));
		@Test public void test_6772() { testValid(test_6772_query); }

		private static final SubtypeQuery test_6773_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("(!int | {any, any})"));
		@Test public void test_6773() { testValid(test_6773_query); }

		private static final SubtypeQuery test_6774_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_6774() { testValid(test_6774_query); }

		private static final SubtypeQuery test_6775_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_6775() { testValid(test_6775_query); }

		private static final SubtypeQuery test_6776_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_6776() { testValid(test_6776_query); }

		private static final SubtypeQuery test_6777_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_6777() { testValid(test_6777_query); }

		private static final SubtypeQuery test_6778_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_6778() { testValid(test_6778_query); }

		private static final SubtypeQuery test_6779_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_6779() { testValid(test_6779_query); }

		private static final SubtypeQuery test_6780_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("({int} | (any | any))"));
		@Test public void test_6780() { testValid(test_6780_query); }

		private static final SubtypeQuery test_6781_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_6781() { testValid(test_6781_query); }

		private static final SubtypeQuery test_6782_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_6782() { testValid(test_6782_query); }

		private static final SubtypeQuery test_6783_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_6783() { testValid(test_6783_query); }

		private static final SubtypeQuery test_6784_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_6784() { testValid(test_6784_query); }

		private static final SubtypeQuery test_6785_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_6785() { testValid(test_6785_query); }

		private static final SubtypeQuery test_6786_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_6786() { testValid(test_6786_query); }

		private static final SubtypeQuery test_6787_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("(int | (any | int))"));
		@Test public void test_6787() { testValid(test_6787_query); }

		private static final SubtypeQuery test_6788_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_6788() { testValid(test_6788_query); }

		private static final SubtypeQuery test_6789_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_6789() { testValid(test_6789_query); }

		private static final SubtypeQuery test_6790_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_6790() { testValid(test_6790_query); }

		private static final SubtypeQuery test_6791_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_6791() { testValid(test_6791_query); }

		private static final SubtypeQuery test_6792_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("(!any | (int | int))"));
		@Test public void test_6792() { testValid(test_6792_query); }

		private static final SubtypeQuery test_6793_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_6793() { testValid(test_6793_query); }

		private static final SubtypeQuery test_6794_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("(int | (any & any))"));
		@Test public void test_6794() { testValid(test_6794_query); }

		private static final SubtypeQuery test_6795_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("(!any | (any & any))"));
		@Test public void test_6795() { testValid(test_6795_query); }

		private static final SubtypeQuery test_6796_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_6796() { testValid(test_6796_query); }

		private static final SubtypeQuery test_6797_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_6797() { testValid(test_6797_query); }

		private static final SubtypeQuery test_6798_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_6798() { testValid(test_6798_query); }

		private static final SubtypeQuery test_6799_query = createSubtypeQuery(parseWhiley("((any | any) | {int})"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_6799() { testValid(test_6799_query); }

		private static final SubtypeQuery test_6800_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("!int"));
		@Test public void test_6800() { testValid(test_6800_query); }

		private static final SubtypeQuery test_6801_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("(any | any)"));
		@Test public void test_6801() { testInvalid(test_6801_query); }

		private static final SubtypeQuery test_6802_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("(any & any)"));
		@Test public void test_6802() { testInvalid(test_6802_query); }

		private static final SubtypeQuery test_6803_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{{int, int}}"));
		@Test public void test_6803() { testValid(test_6803_query); }

		private static final SubtypeQuery test_6804_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("!(int | int)"));
		@Test public void test_6804() { testValid(test_6804_query); }

		private static final SubtypeQuery test_6805_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{{any, any}, any}"));
		@Test public void test_6805() { testValid(test_6805_query); }

		private static final SubtypeQuery test_6806_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{{any, int}, any}"));
		@Test public void test_6806() { testValid(test_6806_query); }

		private static final SubtypeQuery test_6807_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{{any}, int}"));
		@Test public void test_6807() { testValid(test_6807_query); }

		private static final SubtypeQuery test_6808_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{{any, any}, int}"));
		@Test public void test_6808() { testValid(test_6808_query); }

		private static final SubtypeQuery test_6809_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{(any | int), int}"));
		@Test public void test_6809() { testValid(test_6809_query); }

		private static final SubtypeQuery test_6810_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_6810() { testValid(test_6810_query); }

		private static final SubtypeQuery test_6811_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{!any, {int}}"));
		@Test public void test_6811() { testValid(test_6811_query); }

		private static final SubtypeQuery test_6812_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_6812() { testValid(test_6812_query); }

		private static final SubtypeQuery test_6813_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_6813() { testValid(test_6813_query); }

		private static final SubtypeQuery test_6814_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{any, !any}"));
		@Test public void test_6814() { testValid(test_6814_query); }

		private static final SubtypeQuery test_6815_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{{any}, !int}"));
		@Test public void test_6815() { testValid(test_6815_query); }

		private static final SubtypeQuery test_6816_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_6816() { testValid(test_6816_query); }

		private static final SubtypeQuery test_6817_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_6817() { testValid(test_6817_query); }

		private static final SubtypeQuery test_6818_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{(int & int), !int}"));
		@Test public void test_6818() { testValid(test_6818_query); }

		private static final SubtypeQuery test_6819_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_6819() { testValid(test_6819_query); }

		private static final SubtypeQuery test_6820_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_6820() { testValid(test_6820_query); }

		private static final SubtypeQuery test_6821_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_6821() { testValid(test_6821_query); }

		private static final SubtypeQuery test_6822_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_6822() { testValid(test_6822_query); }

		private static final SubtypeQuery test_6823_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_6823() { testValid(test_6823_query); }

		private static final SubtypeQuery test_6824_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_6824() { testValid(test_6824_query); }

		private static final SubtypeQuery test_6825_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_6825() { testValid(test_6825_query); }

		private static final SubtypeQuery test_6826_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{any, {any, int}}"));
		@Test public void test_6826() { testValid(test_6826_query); }

		private static final SubtypeQuery test_6827_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_6827() { testValid(test_6827_query); }

		private static final SubtypeQuery test_6828_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_6828() { testValid(test_6828_query); }

		private static final SubtypeQuery test_6829_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_6829() { testValid(test_6829_query); }

		private static final SubtypeQuery test_6830_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_6830() { testValid(test_6830_query); }

		private static final SubtypeQuery test_6831_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_6831() { testValid(test_6831_query); }

		private static final SubtypeQuery test_6832_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_6832() { testValid(test_6832_query); }

		private static final SubtypeQuery test_6833_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_6833() { testValid(test_6833_query); }

		private static final SubtypeQuery test_6834_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_6834() { testValid(test_6834_query); }

		private static final SubtypeQuery test_6835_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_6835() { testValid(test_6835_query); }

		private static final SubtypeQuery test_6836_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_6836() { testValid(test_6836_query); }

		private static final SubtypeQuery test_6837_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{int, (int | int)}"));
		@Test public void test_6837() { testValid(test_6837_query); }

		private static final SubtypeQuery test_6838_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_6838() { testValid(test_6838_query); }

		private static final SubtypeQuery test_6839_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{any, (any & any)}"));
		@Test public void test_6839() { testValid(test_6839_query); }

		private static final SubtypeQuery test_6840_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_6840() { testValid(test_6840_query); }

		private static final SubtypeQuery test_6841_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_6841() { testValid(test_6841_query); }

		private static final SubtypeQuery test_6842_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_6842() { testValid(test_6842_query); }

		private static final SubtypeQuery test_6843_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_6843() { testValid(test_6843_query); }

		private static final SubtypeQuery test_6844_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_6844() { testValid(test_6844_query); }

		private static final SubtypeQuery test_6845_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_6845() { testValid(test_6845_query); }

		private static final SubtypeQuery test_6846_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_6846() { testValid(test_6846_query); }

		private static final SubtypeQuery test_6847_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_6847() { testValid(test_6847_query); }

		private static final SubtypeQuery test_6848_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{any, (any & int)}"));
		@Test public void test_6848() { testValid(test_6848_query); }

		private static final SubtypeQuery test_6849_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_6849() { testValid(test_6849_query); }

		private static final SubtypeQuery test_6850_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_6850() { testValid(test_6850_query); }

		private static final SubtypeQuery test_6851_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_6851() { testValid(test_6851_query); }

		private static final SubtypeQuery test_6852_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{int, (int & int)}"));
		@Test public void test_6852() { testValid(test_6852_query); }

		private static final SubtypeQuery test_6853_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_6853() { testValid(test_6853_query); }

		private static final SubtypeQuery test_6854_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_6854() { testValid(test_6854_query); }

		private static final SubtypeQuery test_6855_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_6855() { testValid(test_6855_query); }

		private static final SubtypeQuery test_6856_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("(!any | any)"));
		@Test public void test_6856() { testInvalid(test_6856_query); }

		private static final SubtypeQuery test_6857_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("({int, any} | any)"));
		@Test public void test_6857() { testInvalid(test_6857_query); }

		private static final SubtypeQuery test_6858_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("({any, int} | any)"));
		@Test public void test_6858() { testInvalid(test_6858_query); }

		private static final SubtypeQuery test_6859_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("((int & int) | any)"));
		@Test public void test_6859() { testInvalid(test_6859_query); }

		private static final SubtypeQuery test_6860_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("({int, int} | int)"));
		@Test public void test_6860() { testInvalid(test_6860_query); }

		private static final SubtypeQuery test_6861_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("((any | any) | int)"));
		@Test public void test_6861() { testInvalid(test_6861_query); }

		private static final SubtypeQuery test_6862_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("((int | any) | int)"));
		@Test public void test_6862() { testInvalid(test_6862_query); }

		private static final SubtypeQuery test_6863_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("(any | {any})"));
		@Test public void test_6863() { testInvalid(test_6863_query); }

		private static final SubtypeQuery test_6864_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("(int | {any})"));
		@Test public void test_6864() { testInvalid(test_6864_query); }

		private static final SubtypeQuery test_6865_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("({any, any} | {any})"));
		@Test public void test_6865() { testValid(test_6865_query); }

		private static final SubtypeQuery test_6866_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("(any | {int})"));
		@Test public void test_6866() { testInvalid(test_6866_query); }

		private static final SubtypeQuery test_6867_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("((any | any) | {int})"));
		@Test public void test_6867() { testInvalid(test_6867_query); }

		private static final SubtypeQuery test_6868_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("(!int | !any)"));
		@Test public void test_6868() { testValid(test_6868_query); }

		private static final SubtypeQuery test_6869_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("({int, any} | !any)"));
		@Test public void test_6869() { testValid(test_6869_query); }

		private static final SubtypeQuery test_6870_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("((any | any) | !any)"));
		@Test public void test_6870() { testInvalid(test_6870_query); }

		private static final SubtypeQuery test_6871_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("({int} | !int)"));
		@Test public void test_6871() { testValid(test_6871_query); }

		private static final SubtypeQuery test_6872_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("(!any | !int)"));
		@Test public void test_6872() { testValid(test_6872_query); }

		private static final SubtypeQuery test_6873_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("(!int | {any, any})"));
		@Test public void test_6873() { testValid(test_6873_query); }

		private static final SubtypeQuery test_6874_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_6874() { testInvalid(test_6874_query); }

		private static final SubtypeQuery test_6875_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_6875() { testInvalid(test_6875_query); }

		private static final SubtypeQuery test_6876_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_6876() { testValid(test_6876_query); }

		private static final SubtypeQuery test_6877_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_6877() { testInvalid(test_6877_query); }

		private static final SubtypeQuery test_6878_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_6878() { testInvalid(test_6878_query); }

		private static final SubtypeQuery test_6879_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_6879() { testInvalid(test_6879_query); }

		private static final SubtypeQuery test_6880_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("({int} | (any | any))"));
		@Test public void test_6880() { testInvalid(test_6880_query); }

		private static final SubtypeQuery test_6881_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_6881() { testInvalid(test_6881_query); }

		private static final SubtypeQuery test_6882_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_6882() { testInvalid(test_6882_query); }

		private static final SubtypeQuery test_6883_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_6883() { testInvalid(test_6883_query); }

		private static final SubtypeQuery test_6884_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_6884() { testInvalid(test_6884_query); }

		private static final SubtypeQuery test_6885_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_6885() { testInvalid(test_6885_query); }

		private static final SubtypeQuery test_6886_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_6886() { testInvalid(test_6886_query); }

		private static final SubtypeQuery test_6887_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("(int | (any | int))"));
		@Test public void test_6887() { testInvalid(test_6887_query); }

		private static final SubtypeQuery test_6888_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_6888() { testInvalid(test_6888_query); }

		private static final SubtypeQuery test_6889_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_6889() { testInvalid(test_6889_query); }

		private static final SubtypeQuery test_6890_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_6890() { testInvalid(test_6890_query); }

		private static final SubtypeQuery test_6891_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_6891() { testInvalid(test_6891_query); }

		private static final SubtypeQuery test_6892_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("(!any | (int | int))"));
		@Test public void test_6892() { testInvalid(test_6892_query); }

		private static final SubtypeQuery test_6893_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_6893() { testInvalid(test_6893_query); }

		private static final SubtypeQuery test_6894_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("(int | (any & any))"));
		@Test public void test_6894() { testInvalid(test_6894_query); }

		private static final SubtypeQuery test_6895_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("(!any | (any & any))"));
		@Test public void test_6895() { testInvalid(test_6895_query); }

		private static final SubtypeQuery test_6896_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_6896() { testInvalid(test_6896_query); }

		private static final SubtypeQuery test_6897_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_6897() { testInvalid(test_6897_query); }

		private static final SubtypeQuery test_6898_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_6898() { testInvalid(test_6898_query); }

		private static final SubtypeQuery test_6899_query = createSubtypeQuery(parseWhiley("(!int | !any)"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_6899() { testInvalid(test_6899_query); }

		private static final SubtypeQuery test_6900_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("!int"));
		@Test public void test_6900() { testInvalid(test_6900_query); }

		private static final SubtypeQuery test_6901_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("(any | any)"));
		@Test public void test_6901() { testInvalid(test_6901_query); }

		private static final SubtypeQuery test_6902_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("(any & any)"));
		@Test public void test_6902() { testInvalid(test_6902_query); }

		private static final SubtypeQuery test_6903_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{{int, int}}"));
		@Test public void test_6903() { testInvalid(test_6903_query); }

		private static final SubtypeQuery test_6904_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("!(int | int)"));
		@Test public void test_6904() { testInvalid(test_6904_query); }

		private static final SubtypeQuery test_6905_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{{any, any}, any}"));
		@Test public void test_6905() { testInvalid(test_6905_query); }

		private static final SubtypeQuery test_6906_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{{any, int}, any}"));
		@Test public void test_6906() { testInvalid(test_6906_query); }

		private static final SubtypeQuery test_6907_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{{any}, int}"));
		@Test public void test_6907() { testInvalid(test_6907_query); }

		private static final SubtypeQuery test_6908_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{{any, any}, int}"));
		@Test public void test_6908() { testInvalid(test_6908_query); }

		private static final SubtypeQuery test_6909_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{(any | int), int}"));
		@Test public void test_6909() { testInvalid(test_6909_query); }

		private static final SubtypeQuery test_6910_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_6910() { testInvalid(test_6910_query); }

		private static final SubtypeQuery test_6911_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{!any, {int}}"));
		@Test public void test_6911() { testValid(test_6911_query); }

		private static final SubtypeQuery test_6912_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_6912() { testInvalid(test_6912_query); }

		private static final SubtypeQuery test_6913_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_6913() { testValid(test_6913_query); }

		private static final SubtypeQuery test_6914_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{any, !any}"));
		@Test public void test_6914() { testValid(test_6914_query); }

		private static final SubtypeQuery test_6915_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{{any}, !int}"));
		@Test public void test_6915() { testInvalid(test_6915_query); }

		private static final SubtypeQuery test_6916_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_6916() { testInvalid(test_6916_query); }

		private static final SubtypeQuery test_6917_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_6917() { testInvalid(test_6917_query); }

		private static final SubtypeQuery test_6918_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{(int & int), !int}"));
		@Test public void test_6918() { testValid(test_6918_query); }

		private static final SubtypeQuery test_6919_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_6919() { testInvalid(test_6919_query); }

		private static final SubtypeQuery test_6920_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_6920() { testInvalid(test_6920_query); }

		private static final SubtypeQuery test_6921_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_6921() { testValid(test_6921_query); }

		private static final SubtypeQuery test_6922_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_6922() { testValid(test_6922_query); }

		private static final SubtypeQuery test_6923_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_6923() { testInvalid(test_6923_query); }

		private static final SubtypeQuery test_6924_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_6924() { testValid(test_6924_query); }

		private static final SubtypeQuery test_6925_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_6925() { testValid(test_6925_query); }

		private static final SubtypeQuery test_6926_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{any, {any, int}}"));
		@Test public void test_6926() { testInvalid(test_6926_query); }

		private static final SubtypeQuery test_6927_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_6927() { testInvalid(test_6927_query); }

		private static final SubtypeQuery test_6928_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_6928() { testInvalid(test_6928_query); }

		private static final SubtypeQuery test_6929_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_6929() { testValid(test_6929_query); }

		private static final SubtypeQuery test_6930_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_6930() { testInvalid(test_6930_query); }

		private static final SubtypeQuery test_6931_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_6931() { testValid(test_6931_query); }

		private static final SubtypeQuery test_6932_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_6932() { testInvalid(test_6932_query); }

		private static final SubtypeQuery test_6933_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_6933() { testValid(test_6933_query); }

		private static final SubtypeQuery test_6934_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_6934() { testInvalid(test_6934_query); }

		private static final SubtypeQuery test_6935_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_6935() { testInvalid(test_6935_query); }

		private static final SubtypeQuery test_6936_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_6936() { testInvalid(test_6936_query); }

		private static final SubtypeQuery test_6937_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{int, (int | int)}"));
		@Test public void test_6937() { testValid(test_6937_query); }

		private static final SubtypeQuery test_6938_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_6938() { testInvalid(test_6938_query); }

		private static final SubtypeQuery test_6939_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{any, (any & any)}"));
		@Test public void test_6939() { testInvalid(test_6939_query); }

		private static final SubtypeQuery test_6940_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_6940() { testInvalid(test_6940_query); }

		private static final SubtypeQuery test_6941_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_6941() { testValid(test_6941_query); }

		private static final SubtypeQuery test_6942_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_6942() { testInvalid(test_6942_query); }

		private static final SubtypeQuery test_6943_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_6943() { testValid(test_6943_query); }

		private static final SubtypeQuery test_6944_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_6944() { testInvalid(test_6944_query); }

		private static final SubtypeQuery test_6945_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_6945() { testInvalid(test_6945_query); }

		private static final SubtypeQuery test_6946_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_6946() { testInvalid(test_6946_query); }

		private static final SubtypeQuery test_6947_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_6947() { testValid(test_6947_query); }

		private static final SubtypeQuery test_6948_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{any, (any & int)}"));
		@Test public void test_6948() { testInvalid(test_6948_query); }

		private static final SubtypeQuery test_6949_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_6949() { testInvalid(test_6949_query); }

		private static final SubtypeQuery test_6950_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_6950() { testInvalid(test_6950_query); }

		private static final SubtypeQuery test_6951_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_6951() { testInvalid(test_6951_query); }

		private static final SubtypeQuery test_6952_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{int, (int & int)}"));
		@Test public void test_6952() { testValid(test_6952_query); }

		private static final SubtypeQuery test_6953_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_6953() { testInvalid(test_6953_query); }

		private static final SubtypeQuery test_6954_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_6954() { testInvalid(test_6954_query); }

		private static final SubtypeQuery test_6955_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_6955() { testValid(test_6955_query); }

		private static final SubtypeQuery test_6956_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("(!any | any)"));
		@Test public void test_6956() { testInvalid(test_6956_query); }

		private static final SubtypeQuery test_6957_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("({int, any} | any)"));
		@Test public void test_6957() { testInvalid(test_6957_query); }

		private static final SubtypeQuery test_6958_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("({any, int} | any)"));
		@Test public void test_6958() { testInvalid(test_6958_query); }

		private static final SubtypeQuery test_6959_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("((int & int) | any)"));
		@Test public void test_6959() { testInvalid(test_6959_query); }

		private static final SubtypeQuery test_6960_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("({int, int} | int)"));
		@Test public void test_6960() { testInvalid(test_6960_query); }

		private static final SubtypeQuery test_6961_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("((any | any) | int)"));
		@Test public void test_6961() { testInvalid(test_6961_query); }

		private static final SubtypeQuery test_6962_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("((int | any) | int)"));
		@Test public void test_6962() { testInvalid(test_6962_query); }

		private static final SubtypeQuery test_6963_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("(any | {any})"));
		@Test public void test_6963() { testInvalid(test_6963_query); }

		private static final SubtypeQuery test_6964_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("(int | {any})"));
		@Test public void test_6964() { testInvalid(test_6964_query); }

		private static final SubtypeQuery test_6965_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("({any, any} | {any})"));
		@Test public void test_6965() { testInvalid(test_6965_query); }

		private static final SubtypeQuery test_6966_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("(any | {int})"));
		@Test public void test_6966() { testInvalid(test_6966_query); }

		private static final SubtypeQuery test_6967_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("((any | any) | {int})"));
		@Test public void test_6967() { testInvalid(test_6967_query); }

		private static final SubtypeQuery test_6968_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("(!int | !any)"));
		@Test public void test_6968() { testInvalid(test_6968_query); }

		private static final SubtypeQuery test_6969_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("({int, any} | !any)"));
		@Test public void test_6969() { testValid(test_6969_query); }

		private static final SubtypeQuery test_6970_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("((any | any) | !any)"));
		@Test public void test_6970() { testInvalid(test_6970_query); }

		private static final SubtypeQuery test_6971_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("({int} | !int)"));
		@Test public void test_6971() { testInvalid(test_6971_query); }

		private static final SubtypeQuery test_6972_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("(!any | !int)"));
		@Test public void test_6972() { testInvalid(test_6972_query); }

		private static final SubtypeQuery test_6973_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("(!int | {any, any})"));
		@Test public void test_6973() { testInvalid(test_6973_query); }

		private static final SubtypeQuery test_6974_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_6974() { testInvalid(test_6974_query); }

		private static final SubtypeQuery test_6975_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_6975() { testInvalid(test_6975_query); }

		private static final SubtypeQuery test_6976_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_6976() { testInvalid(test_6976_query); }

		private static final SubtypeQuery test_6977_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_6977() { testInvalid(test_6977_query); }

		private static final SubtypeQuery test_6978_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_6978() { testInvalid(test_6978_query); }

		private static final SubtypeQuery test_6979_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_6979() { testInvalid(test_6979_query); }

		private static final SubtypeQuery test_6980_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("({int} | (any | any))"));
		@Test public void test_6980() { testInvalid(test_6980_query); }

		private static final SubtypeQuery test_6981_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_6981() { testInvalid(test_6981_query); }

		private static final SubtypeQuery test_6982_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_6982() { testInvalid(test_6982_query); }

		private static final SubtypeQuery test_6983_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_6983() { testInvalid(test_6983_query); }

		private static final SubtypeQuery test_6984_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_6984() { testInvalid(test_6984_query); }

		private static final SubtypeQuery test_6985_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_6985() { testInvalid(test_6985_query); }

		private static final SubtypeQuery test_6986_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_6986() { testInvalid(test_6986_query); }

		private static final SubtypeQuery test_6987_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("(int | (any | int))"));
		@Test public void test_6987() { testInvalid(test_6987_query); }

		private static final SubtypeQuery test_6988_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_6988() { testInvalid(test_6988_query); }

		private static final SubtypeQuery test_6989_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_6989() { testInvalid(test_6989_query); }

		private static final SubtypeQuery test_6990_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_6990() { testInvalid(test_6990_query); }

		private static final SubtypeQuery test_6991_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_6991() { testInvalid(test_6991_query); }

		private static final SubtypeQuery test_6992_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("(!any | (int | int))"));
		@Test public void test_6992() { testInvalid(test_6992_query); }

		private static final SubtypeQuery test_6993_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_6993() { testInvalid(test_6993_query); }

		private static final SubtypeQuery test_6994_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("(int | (any & any))"));
		@Test public void test_6994() { testInvalid(test_6994_query); }

		private static final SubtypeQuery test_6995_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("(!any | (any & any))"));
		@Test public void test_6995() { testInvalid(test_6995_query); }

		private static final SubtypeQuery test_6996_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_6996() { testInvalid(test_6996_query); }

		private static final SubtypeQuery test_6997_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_6997() { testInvalid(test_6997_query); }

		private static final SubtypeQuery test_6998_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_6998() { testInvalid(test_6998_query); }

		private static final SubtypeQuery test_6999_query = createSubtypeQuery(parseWhiley("({int, any} | !any)"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_6999() { testInvalid(test_6999_query); }

	}
	public static class Part_7 {
		private static final SubtypeQuery test_7000_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("!int"));
		@Test public void test_7000() { testValid(test_7000_query); }

		private static final SubtypeQuery test_7001_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("(any | any)"));
		@Test public void test_7001() { testValid(test_7001_query); }

		private static final SubtypeQuery test_7002_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("(any & any)"));
		@Test public void test_7002() { testValid(test_7002_query); }

		private static final SubtypeQuery test_7003_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{{int, int}}"));
		@Test public void test_7003() { testValid(test_7003_query); }

		private static final SubtypeQuery test_7004_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("!(int | int)"));
		@Test public void test_7004() { testValid(test_7004_query); }

		private static final SubtypeQuery test_7005_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{{any, any}, any}"));
		@Test public void test_7005() { testValid(test_7005_query); }

		private static final SubtypeQuery test_7006_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{{any, int}, any}"));
		@Test public void test_7006() { testValid(test_7006_query); }

		private static final SubtypeQuery test_7007_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{{any}, int}"));
		@Test public void test_7007() { testValid(test_7007_query); }

		private static final SubtypeQuery test_7008_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{{any, any}, int}"));
		@Test public void test_7008() { testValid(test_7008_query); }

		private static final SubtypeQuery test_7009_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{(any | int), int}"));
		@Test public void test_7009() { testValid(test_7009_query); }

		private static final SubtypeQuery test_7010_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_7010() { testValid(test_7010_query); }

		private static final SubtypeQuery test_7011_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{!any, {int}}"));
		@Test public void test_7011() { testValid(test_7011_query); }

		private static final SubtypeQuery test_7012_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_7012() { testValid(test_7012_query); }

		private static final SubtypeQuery test_7013_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_7013() { testValid(test_7013_query); }

		private static final SubtypeQuery test_7014_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{any, !any}"));
		@Test public void test_7014() { testValid(test_7014_query); }

		private static final SubtypeQuery test_7015_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{{any}, !int}"));
		@Test public void test_7015() { testValid(test_7015_query); }

		private static final SubtypeQuery test_7016_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_7016() { testValid(test_7016_query); }

		private static final SubtypeQuery test_7017_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_7017() { testValid(test_7017_query); }

		private static final SubtypeQuery test_7018_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{(int & int), !int}"));
		@Test public void test_7018() { testValid(test_7018_query); }

		private static final SubtypeQuery test_7019_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_7019() { testValid(test_7019_query); }

		private static final SubtypeQuery test_7020_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_7020() { testValid(test_7020_query); }

		private static final SubtypeQuery test_7021_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_7021() { testValid(test_7021_query); }

		private static final SubtypeQuery test_7022_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_7022() { testValid(test_7022_query); }

		private static final SubtypeQuery test_7023_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_7023() { testValid(test_7023_query); }

		private static final SubtypeQuery test_7024_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_7024() { testValid(test_7024_query); }

		private static final SubtypeQuery test_7025_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_7025() { testValid(test_7025_query); }

		private static final SubtypeQuery test_7026_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{any, {any, int}}"));
		@Test public void test_7026() { testValid(test_7026_query); }

		private static final SubtypeQuery test_7027_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_7027() { testValid(test_7027_query); }

		private static final SubtypeQuery test_7028_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_7028() { testValid(test_7028_query); }

		private static final SubtypeQuery test_7029_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_7029() { testValid(test_7029_query); }

		private static final SubtypeQuery test_7030_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_7030() { testValid(test_7030_query); }

		private static final SubtypeQuery test_7031_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_7031() { testValid(test_7031_query); }

		private static final SubtypeQuery test_7032_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_7032() { testValid(test_7032_query); }

		private static final SubtypeQuery test_7033_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_7033() { testValid(test_7033_query); }

		private static final SubtypeQuery test_7034_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_7034() { testValid(test_7034_query); }

		private static final SubtypeQuery test_7035_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_7035() { testValid(test_7035_query); }

		private static final SubtypeQuery test_7036_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_7036() { testValid(test_7036_query); }

		private static final SubtypeQuery test_7037_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{int, (int | int)}"));
		@Test public void test_7037() { testValid(test_7037_query); }

		private static final SubtypeQuery test_7038_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_7038() { testValid(test_7038_query); }

		private static final SubtypeQuery test_7039_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{any, (any & any)}"));
		@Test public void test_7039() { testValid(test_7039_query); }

		private static final SubtypeQuery test_7040_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_7040() { testValid(test_7040_query); }

		private static final SubtypeQuery test_7041_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_7041() { testValid(test_7041_query); }

		private static final SubtypeQuery test_7042_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_7042() { testValid(test_7042_query); }

		private static final SubtypeQuery test_7043_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_7043() { testValid(test_7043_query); }

		private static final SubtypeQuery test_7044_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_7044() { testValid(test_7044_query); }

		private static final SubtypeQuery test_7045_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_7045() { testValid(test_7045_query); }

		private static final SubtypeQuery test_7046_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_7046() { testValid(test_7046_query); }

		private static final SubtypeQuery test_7047_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_7047() { testValid(test_7047_query); }

		private static final SubtypeQuery test_7048_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{any, (any & int)}"));
		@Test public void test_7048() { testValid(test_7048_query); }

		private static final SubtypeQuery test_7049_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_7049() { testValid(test_7049_query); }

		private static final SubtypeQuery test_7050_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_7050() { testValid(test_7050_query); }

		private static final SubtypeQuery test_7051_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_7051() { testValid(test_7051_query); }

		private static final SubtypeQuery test_7052_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{int, (int & int)}"));
		@Test public void test_7052() { testValid(test_7052_query); }

		private static final SubtypeQuery test_7053_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_7053() { testValid(test_7053_query); }

		private static final SubtypeQuery test_7054_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_7054() { testValid(test_7054_query); }

		private static final SubtypeQuery test_7055_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_7055() { testValid(test_7055_query); }

		private static final SubtypeQuery test_7056_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("(!any | any)"));
		@Test public void test_7056() { testValid(test_7056_query); }

		private static final SubtypeQuery test_7057_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("({int, any} | any)"));
		@Test public void test_7057() { testValid(test_7057_query); }

		private static final SubtypeQuery test_7058_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("({any, int} | any)"));
		@Test public void test_7058() { testValid(test_7058_query); }

		private static final SubtypeQuery test_7059_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("((int & int) | any)"));
		@Test public void test_7059() { testValid(test_7059_query); }

		private static final SubtypeQuery test_7060_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("({int, int} | int)"));
		@Test public void test_7060() { testValid(test_7060_query); }

		private static final SubtypeQuery test_7061_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("((any | any) | int)"));
		@Test public void test_7061() { testValid(test_7061_query); }

		private static final SubtypeQuery test_7062_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("((int | any) | int)"));
		@Test public void test_7062() { testValid(test_7062_query); }

		private static final SubtypeQuery test_7063_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("(any | {any})"));
		@Test public void test_7063() { testValid(test_7063_query); }

		private static final SubtypeQuery test_7064_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("(int | {any})"));
		@Test public void test_7064() { testValid(test_7064_query); }

		private static final SubtypeQuery test_7065_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("({any, any} | {any})"));
		@Test public void test_7065() { testValid(test_7065_query); }

		private static final SubtypeQuery test_7066_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("(any | {int})"));
		@Test public void test_7066() { testValid(test_7066_query); }

		private static final SubtypeQuery test_7067_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("((any | any) | {int})"));
		@Test public void test_7067() { testValid(test_7067_query); }

		private static final SubtypeQuery test_7068_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("(!int | !any)"));
		@Test public void test_7068() { testValid(test_7068_query); }

		private static final SubtypeQuery test_7069_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("({int, any} | !any)"));
		@Test public void test_7069() { testValid(test_7069_query); }

		private static final SubtypeQuery test_7070_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("((any | any) | !any)"));
		@Test public void test_7070() { testValid(test_7070_query); }

		private static final SubtypeQuery test_7071_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("({int} | !int)"));
		@Test public void test_7071() { testValid(test_7071_query); }

		private static final SubtypeQuery test_7072_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("(!any | !int)"));
		@Test public void test_7072() { testValid(test_7072_query); }

		private static final SubtypeQuery test_7073_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("(!int | {any, any})"));
		@Test public void test_7073() { testValid(test_7073_query); }

		private static final SubtypeQuery test_7074_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_7074() { testValid(test_7074_query); }

		private static final SubtypeQuery test_7075_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_7075() { testValid(test_7075_query); }

		private static final SubtypeQuery test_7076_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_7076() { testValid(test_7076_query); }

		private static final SubtypeQuery test_7077_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_7077() { testValid(test_7077_query); }

		private static final SubtypeQuery test_7078_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_7078() { testValid(test_7078_query); }

		private static final SubtypeQuery test_7079_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_7079() { testValid(test_7079_query); }

		private static final SubtypeQuery test_7080_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("({int} | (any | any))"));
		@Test public void test_7080() { testValid(test_7080_query); }

		private static final SubtypeQuery test_7081_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_7081() { testValid(test_7081_query); }

		private static final SubtypeQuery test_7082_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_7082() { testValid(test_7082_query); }

		private static final SubtypeQuery test_7083_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_7083() { testValid(test_7083_query); }

		private static final SubtypeQuery test_7084_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_7084() { testValid(test_7084_query); }

		private static final SubtypeQuery test_7085_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_7085() { testValid(test_7085_query); }

		private static final SubtypeQuery test_7086_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_7086() { testValid(test_7086_query); }

		private static final SubtypeQuery test_7087_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("(int | (any | int))"));
		@Test public void test_7087() { testValid(test_7087_query); }

		private static final SubtypeQuery test_7088_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_7088() { testValid(test_7088_query); }

		private static final SubtypeQuery test_7089_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_7089() { testValid(test_7089_query); }

		private static final SubtypeQuery test_7090_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_7090() { testValid(test_7090_query); }

		private static final SubtypeQuery test_7091_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_7091() { testValid(test_7091_query); }

		private static final SubtypeQuery test_7092_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("(!any | (int | int))"));
		@Test public void test_7092() { testValid(test_7092_query); }

		private static final SubtypeQuery test_7093_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_7093() { testValid(test_7093_query); }

		private static final SubtypeQuery test_7094_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("(int | (any & any))"));
		@Test public void test_7094() { testValid(test_7094_query); }

		private static final SubtypeQuery test_7095_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("(!any | (any & any))"));
		@Test public void test_7095() { testValid(test_7095_query); }

		private static final SubtypeQuery test_7096_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_7096() { testValid(test_7096_query); }

		private static final SubtypeQuery test_7097_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_7097() { testValid(test_7097_query); }

		private static final SubtypeQuery test_7098_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_7098() { testValid(test_7098_query); }

		private static final SubtypeQuery test_7099_query = createSubtypeQuery(parseWhiley("((any | any) | !any)"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_7099() { testValid(test_7099_query); }

		private static final SubtypeQuery test_7100_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("!int"));
		@Test public void test_7100() { testValid(test_7100_query); }

		private static final SubtypeQuery test_7101_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("(any | any)"));
		@Test public void test_7101() { testInvalid(test_7101_query); }

		private static final SubtypeQuery test_7102_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("(any & any)"));
		@Test public void test_7102() { testInvalid(test_7102_query); }

		private static final SubtypeQuery test_7103_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{{int, int}}"));
		@Test public void test_7103() { testValid(test_7103_query); }

		private static final SubtypeQuery test_7104_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("!(int | int)"));
		@Test public void test_7104() { testValid(test_7104_query); }

		private static final SubtypeQuery test_7105_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{{any, any}, any}"));
		@Test public void test_7105() { testValid(test_7105_query); }

		private static final SubtypeQuery test_7106_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{{any, int}, any}"));
		@Test public void test_7106() { testValid(test_7106_query); }

		private static final SubtypeQuery test_7107_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{{any}, int}"));
		@Test public void test_7107() { testValid(test_7107_query); }

		private static final SubtypeQuery test_7108_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{{any, any}, int}"));
		@Test public void test_7108() { testValid(test_7108_query); }

		private static final SubtypeQuery test_7109_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{(any | int), int}"));
		@Test public void test_7109() { testValid(test_7109_query); }

		private static final SubtypeQuery test_7110_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_7110() { testValid(test_7110_query); }

		private static final SubtypeQuery test_7111_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{!any, {int}}"));
		@Test public void test_7111() { testValid(test_7111_query); }

		private static final SubtypeQuery test_7112_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_7112() { testValid(test_7112_query); }

		private static final SubtypeQuery test_7113_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_7113() { testValid(test_7113_query); }

		private static final SubtypeQuery test_7114_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{any, !any}"));
		@Test public void test_7114() { testValid(test_7114_query); }

		private static final SubtypeQuery test_7115_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{{any}, !int}"));
		@Test public void test_7115() { testValid(test_7115_query); }

		private static final SubtypeQuery test_7116_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_7116() { testValid(test_7116_query); }

		private static final SubtypeQuery test_7117_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_7117() { testValid(test_7117_query); }

		private static final SubtypeQuery test_7118_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{(int & int), !int}"));
		@Test public void test_7118() { testValid(test_7118_query); }

		private static final SubtypeQuery test_7119_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_7119() { testValid(test_7119_query); }

		private static final SubtypeQuery test_7120_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_7120() { testValid(test_7120_query); }

		private static final SubtypeQuery test_7121_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_7121() { testValid(test_7121_query); }

		private static final SubtypeQuery test_7122_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_7122() { testValid(test_7122_query); }

		private static final SubtypeQuery test_7123_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_7123() { testValid(test_7123_query); }

		private static final SubtypeQuery test_7124_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_7124() { testValid(test_7124_query); }

		private static final SubtypeQuery test_7125_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_7125() { testValid(test_7125_query); }

		private static final SubtypeQuery test_7126_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{any, {any, int}}"));
		@Test public void test_7126() { testValid(test_7126_query); }

		private static final SubtypeQuery test_7127_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_7127() { testValid(test_7127_query); }

		private static final SubtypeQuery test_7128_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_7128() { testValid(test_7128_query); }

		private static final SubtypeQuery test_7129_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_7129() { testValid(test_7129_query); }

		private static final SubtypeQuery test_7130_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_7130() { testValid(test_7130_query); }

		private static final SubtypeQuery test_7131_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_7131() { testValid(test_7131_query); }

		private static final SubtypeQuery test_7132_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_7132() { testValid(test_7132_query); }

		private static final SubtypeQuery test_7133_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_7133() { testValid(test_7133_query); }

		private static final SubtypeQuery test_7134_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_7134() { testValid(test_7134_query); }

		private static final SubtypeQuery test_7135_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_7135() { testValid(test_7135_query); }

		private static final SubtypeQuery test_7136_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_7136() { testValid(test_7136_query); }

		private static final SubtypeQuery test_7137_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{int, (int | int)}"));
		@Test public void test_7137() { testValid(test_7137_query); }

		private static final SubtypeQuery test_7138_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_7138() { testValid(test_7138_query); }

		private static final SubtypeQuery test_7139_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{any, (any & any)}"));
		@Test public void test_7139() { testValid(test_7139_query); }

		private static final SubtypeQuery test_7140_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_7140() { testValid(test_7140_query); }

		private static final SubtypeQuery test_7141_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_7141() { testValid(test_7141_query); }

		private static final SubtypeQuery test_7142_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_7142() { testValid(test_7142_query); }

		private static final SubtypeQuery test_7143_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_7143() { testValid(test_7143_query); }

		private static final SubtypeQuery test_7144_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_7144() { testValid(test_7144_query); }

		private static final SubtypeQuery test_7145_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_7145() { testValid(test_7145_query); }

		private static final SubtypeQuery test_7146_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_7146() { testValid(test_7146_query); }

		private static final SubtypeQuery test_7147_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_7147() { testValid(test_7147_query); }

		private static final SubtypeQuery test_7148_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{any, (any & int)}"));
		@Test public void test_7148() { testValid(test_7148_query); }

		private static final SubtypeQuery test_7149_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_7149() { testValid(test_7149_query); }

		private static final SubtypeQuery test_7150_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_7150() { testValid(test_7150_query); }

		private static final SubtypeQuery test_7151_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_7151() { testValid(test_7151_query); }

		private static final SubtypeQuery test_7152_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{int, (int & int)}"));
		@Test public void test_7152() { testValid(test_7152_query); }

		private static final SubtypeQuery test_7153_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_7153() { testValid(test_7153_query); }

		private static final SubtypeQuery test_7154_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_7154() { testValid(test_7154_query); }

		private static final SubtypeQuery test_7155_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_7155() { testValid(test_7155_query); }

		private static final SubtypeQuery test_7156_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("(!any | any)"));
		@Test public void test_7156() { testInvalid(test_7156_query); }

		private static final SubtypeQuery test_7157_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("({int, any} | any)"));
		@Test public void test_7157() { testInvalid(test_7157_query); }

		private static final SubtypeQuery test_7158_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("({any, int} | any)"));
		@Test public void test_7158() { testInvalid(test_7158_query); }

		private static final SubtypeQuery test_7159_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("((int & int) | any)"));
		@Test public void test_7159() { testInvalid(test_7159_query); }

		private static final SubtypeQuery test_7160_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("({int, int} | int)"));
		@Test public void test_7160() { testInvalid(test_7160_query); }

		private static final SubtypeQuery test_7161_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("((any | any) | int)"));
		@Test public void test_7161() { testInvalid(test_7161_query); }

		private static final SubtypeQuery test_7162_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("((int | any) | int)"));
		@Test public void test_7162() { testInvalid(test_7162_query); }

		private static final SubtypeQuery test_7163_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("(any | {any})"));
		@Test public void test_7163() { testInvalid(test_7163_query); }

		private static final SubtypeQuery test_7164_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("(int | {any})"));
		@Test public void test_7164() { testInvalid(test_7164_query); }

		private static final SubtypeQuery test_7165_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("({any, any} | {any})"));
		@Test public void test_7165() { testValid(test_7165_query); }

		private static final SubtypeQuery test_7166_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("(any | {int})"));
		@Test public void test_7166() { testInvalid(test_7166_query); }

		private static final SubtypeQuery test_7167_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("((any | any) | {int})"));
		@Test public void test_7167() { testInvalid(test_7167_query); }

		private static final SubtypeQuery test_7168_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("(!int | !any)"));
		@Test public void test_7168() { testValid(test_7168_query); }

		private static final SubtypeQuery test_7169_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("({int, any} | !any)"));
		@Test public void test_7169() { testValid(test_7169_query); }

		private static final SubtypeQuery test_7170_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("((any | any) | !any)"));
		@Test public void test_7170() { testInvalid(test_7170_query); }

		private static final SubtypeQuery test_7171_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("({int} | !int)"));
		@Test public void test_7171() { testValid(test_7171_query); }

		private static final SubtypeQuery test_7172_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("(!any | !int)"));
		@Test public void test_7172() { testValid(test_7172_query); }

		private static final SubtypeQuery test_7173_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("(!int | {any, any})"));
		@Test public void test_7173() { testValid(test_7173_query); }

		private static final SubtypeQuery test_7174_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_7174() { testInvalid(test_7174_query); }

		private static final SubtypeQuery test_7175_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_7175() { testInvalid(test_7175_query); }

		private static final SubtypeQuery test_7176_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_7176() { testValid(test_7176_query); }

		private static final SubtypeQuery test_7177_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_7177() { testInvalid(test_7177_query); }

		private static final SubtypeQuery test_7178_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_7178() { testInvalid(test_7178_query); }

		private static final SubtypeQuery test_7179_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_7179() { testInvalid(test_7179_query); }

		private static final SubtypeQuery test_7180_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("({int} | (any | any))"));
		@Test public void test_7180() { testInvalid(test_7180_query); }

		private static final SubtypeQuery test_7181_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_7181() { testInvalid(test_7181_query); }

		private static final SubtypeQuery test_7182_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_7182() { testInvalid(test_7182_query); }

		private static final SubtypeQuery test_7183_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_7183() { testInvalid(test_7183_query); }

		private static final SubtypeQuery test_7184_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_7184() { testInvalid(test_7184_query); }

		private static final SubtypeQuery test_7185_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_7185() { testInvalid(test_7185_query); }

		private static final SubtypeQuery test_7186_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_7186() { testInvalid(test_7186_query); }

		private static final SubtypeQuery test_7187_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("(int | (any | int))"));
		@Test public void test_7187() { testInvalid(test_7187_query); }

		private static final SubtypeQuery test_7188_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_7188() { testInvalid(test_7188_query); }

		private static final SubtypeQuery test_7189_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_7189() { testInvalid(test_7189_query); }

		private static final SubtypeQuery test_7190_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_7190() { testInvalid(test_7190_query); }

		private static final SubtypeQuery test_7191_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_7191() { testInvalid(test_7191_query); }

		private static final SubtypeQuery test_7192_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("(!any | (int | int))"));
		@Test public void test_7192() { testInvalid(test_7192_query); }

		private static final SubtypeQuery test_7193_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_7193() { testInvalid(test_7193_query); }

		private static final SubtypeQuery test_7194_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("(int | (any & any))"));
		@Test public void test_7194() { testInvalid(test_7194_query); }

		private static final SubtypeQuery test_7195_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("(!any | (any & any))"));
		@Test public void test_7195() { testInvalid(test_7195_query); }

		private static final SubtypeQuery test_7196_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_7196() { testInvalid(test_7196_query); }

		private static final SubtypeQuery test_7197_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_7197() { testInvalid(test_7197_query); }

		private static final SubtypeQuery test_7198_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_7198() { testInvalid(test_7198_query); }

		private static final SubtypeQuery test_7199_query = createSubtypeQuery(parseWhiley("({int} | !int)"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_7199() { testInvalid(test_7199_query); }

		private static final SubtypeQuery test_7200_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("!int"));
		@Test public void test_7200() { testValid(test_7200_query); }

		private static final SubtypeQuery test_7201_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("(any | any)"));
		@Test public void test_7201() { testInvalid(test_7201_query); }

		private static final SubtypeQuery test_7202_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("(any & any)"));
		@Test public void test_7202() { testInvalid(test_7202_query); }

		private static final SubtypeQuery test_7203_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{{int, int}}"));
		@Test public void test_7203() { testValid(test_7203_query); }

		private static final SubtypeQuery test_7204_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("!(int | int)"));
		@Test public void test_7204() { testValid(test_7204_query); }

		private static final SubtypeQuery test_7205_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{{any, any}, any}"));
		@Test public void test_7205() { testValid(test_7205_query); }

		private static final SubtypeQuery test_7206_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{{any, int}, any}"));
		@Test public void test_7206() { testValid(test_7206_query); }

		private static final SubtypeQuery test_7207_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{{any}, int}"));
		@Test public void test_7207() { testValid(test_7207_query); }

		private static final SubtypeQuery test_7208_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{{any, any}, int}"));
		@Test public void test_7208() { testValid(test_7208_query); }

		private static final SubtypeQuery test_7209_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{(any | int), int}"));
		@Test public void test_7209() { testValid(test_7209_query); }

		private static final SubtypeQuery test_7210_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_7210() { testValid(test_7210_query); }

		private static final SubtypeQuery test_7211_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{!any, {int}}"));
		@Test public void test_7211() { testValid(test_7211_query); }

		private static final SubtypeQuery test_7212_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_7212() { testValid(test_7212_query); }

		private static final SubtypeQuery test_7213_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_7213() { testValid(test_7213_query); }

		private static final SubtypeQuery test_7214_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{any, !any}"));
		@Test public void test_7214() { testValid(test_7214_query); }

		private static final SubtypeQuery test_7215_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{{any}, !int}"));
		@Test public void test_7215() { testValid(test_7215_query); }

		private static final SubtypeQuery test_7216_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_7216() { testValid(test_7216_query); }

		private static final SubtypeQuery test_7217_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_7217() { testValid(test_7217_query); }

		private static final SubtypeQuery test_7218_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{(int & int), !int}"));
		@Test public void test_7218() { testValid(test_7218_query); }

		private static final SubtypeQuery test_7219_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_7219() { testValid(test_7219_query); }

		private static final SubtypeQuery test_7220_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_7220() { testValid(test_7220_query); }

		private static final SubtypeQuery test_7221_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_7221() { testValid(test_7221_query); }

		private static final SubtypeQuery test_7222_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_7222() { testValid(test_7222_query); }

		private static final SubtypeQuery test_7223_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_7223() { testValid(test_7223_query); }

		private static final SubtypeQuery test_7224_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_7224() { testValid(test_7224_query); }

		private static final SubtypeQuery test_7225_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_7225() { testValid(test_7225_query); }

		private static final SubtypeQuery test_7226_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{any, {any, int}}"));
		@Test public void test_7226() { testValid(test_7226_query); }

		private static final SubtypeQuery test_7227_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_7227() { testValid(test_7227_query); }

		private static final SubtypeQuery test_7228_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_7228() { testValid(test_7228_query); }

		private static final SubtypeQuery test_7229_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_7229() { testValid(test_7229_query); }

		private static final SubtypeQuery test_7230_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_7230() { testValid(test_7230_query); }

		private static final SubtypeQuery test_7231_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_7231() { testValid(test_7231_query); }

		private static final SubtypeQuery test_7232_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_7232() { testValid(test_7232_query); }

		private static final SubtypeQuery test_7233_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_7233() { testValid(test_7233_query); }

		private static final SubtypeQuery test_7234_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_7234() { testValid(test_7234_query); }

		private static final SubtypeQuery test_7235_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_7235() { testValid(test_7235_query); }

		private static final SubtypeQuery test_7236_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_7236() { testValid(test_7236_query); }

		private static final SubtypeQuery test_7237_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{int, (int | int)}"));
		@Test public void test_7237() { testValid(test_7237_query); }

		private static final SubtypeQuery test_7238_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_7238() { testValid(test_7238_query); }

		private static final SubtypeQuery test_7239_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{any, (any & any)}"));
		@Test public void test_7239() { testValid(test_7239_query); }

		private static final SubtypeQuery test_7240_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_7240() { testValid(test_7240_query); }

		private static final SubtypeQuery test_7241_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_7241() { testValid(test_7241_query); }

		private static final SubtypeQuery test_7242_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_7242() { testValid(test_7242_query); }

		private static final SubtypeQuery test_7243_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_7243() { testValid(test_7243_query); }

		private static final SubtypeQuery test_7244_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_7244() { testValid(test_7244_query); }

		private static final SubtypeQuery test_7245_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_7245() { testValid(test_7245_query); }

		private static final SubtypeQuery test_7246_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_7246() { testValid(test_7246_query); }

		private static final SubtypeQuery test_7247_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_7247() { testValid(test_7247_query); }

		private static final SubtypeQuery test_7248_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{any, (any & int)}"));
		@Test public void test_7248() { testValid(test_7248_query); }

		private static final SubtypeQuery test_7249_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_7249() { testValid(test_7249_query); }

		private static final SubtypeQuery test_7250_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_7250() { testValid(test_7250_query); }

		private static final SubtypeQuery test_7251_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_7251() { testValid(test_7251_query); }

		private static final SubtypeQuery test_7252_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{int, (int & int)}"));
		@Test public void test_7252() { testValid(test_7252_query); }

		private static final SubtypeQuery test_7253_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_7253() { testValid(test_7253_query); }

		private static final SubtypeQuery test_7254_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_7254() { testValid(test_7254_query); }

		private static final SubtypeQuery test_7255_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_7255() { testValid(test_7255_query); }

		private static final SubtypeQuery test_7256_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("(!any | any)"));
		@Test public void test_7256() { testInvalid(test_7256_query); }

		private static final SubtypeQuery test_7257_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("({int, any} | any)"));
		@Test public void test_7257() { testInvalid(test_7257_query); }

		private static final SubtypeQuery test_7258_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("({any, int} | any)"));
		@Test public void test_7258() { testInvalid(test_7258_query); }

		private static final SubtypeQuery test_7259_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("((int & int) | any)"));
		@Test public void test_7259() { testInvalid(test_7259_query); }

		private static final SubtypeQuery test_7260_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("({int, int} | int)"));
		@Test public void test_7260() { testInvalid(test_7260_query); }

		private static final SubtypeQuery test_7261_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("((any | any) | int)"));
		@Test public void test_7261() { testInvalid(test_7261_query); }

		private static final SubtypeQuery test_7262_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("((int | any) | int)"));
		@Test public void test_7262() { testInvalid(test_7262_query); }

		private static final SubtypeQuery test_7263_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("(any | {any})"));
		@Test public void test_7263() { testInvalid(test_7263_query); }

		private static final SubtypeQuery test_7264_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("(int | {any})"));
		@Test public void test_7264() { testInvalid(test_7264_query); }

		private static final SubtypeQuery test_7265_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("({any, any} | {any})"));
		@Test public void test_7265() { testValid(test_7265_query); }

		private static final SubtypeQuery test_7266_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("(any | {int})"));
		@Test public void test_7266() { testInvalid(test_7266_query); }

		private static final SubtypeQuery test_7267_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("((any | any) | {int})"));
		@Test public void test_7267() { testInvalid(test_7267_query); }

		private static final SubtypeQuery test_7268_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("(!int | !any)"));
		@Test public void test_7268() { testValid(test_7268_query); }

		private static final SubtypeQuery test_7269_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("({int, any} | !any)"));
		@Test public void test_7269() { testValid(test_7269_query); }

		private static final SubtypeQuery test_7270_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("((any | any) | !any)"));
		@Test public void test_7270() { testInvalid(test_7270_query); }

		private static final SubtypeQuery test_7271_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("({int} | !int)"));
		@Test public void test_7271() { testValid(test_7271_query); }

		private static final SubtypeQuery test_7272_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("(!any | !int)"));
		@Test public void test_7272() { testValid(test_7272_query); }

		private static final SubtypeQuery test_7273_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("(!int | {any, any})"));
		@Test public void test_7273() { testValid(test_7273_query); }

		private static final SubtypeQuery test_7274_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_7274() { testInvalid(test_7274_query); }

		private static final SubtypeQuery test_7275_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_7275() { testInvalid(test_7275_query); }

		private static final SubtypeQuery test_7276_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_7276() { testValid(test_7276_query); }

		private static final SubtypeQuery test_7277_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_7277() { testInvalid(test_7277_query); }

		private static final SubtypeQuery test_7278_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_7278() { testInvalid(test_7278_query); }

		private static final SubtypeQuery test_7279_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_7279() { testInvalid(test_7279_query); }

		private static final SubtypeQuery test_7280_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("({int} | (any | any))"));
		@Test public void test_7280() { testInvalid(test_7280_query); }

		private static final SubtypeQuery test_7281_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_7281() { testInvalid(test_7281_query); }

		private static final SubtypeQuery test_7282_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_7282() { testInvalid(test_7282_query); }

		private static final SubtypeQuery test_7283_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_7283() { testInvalid(test_7283_query); }

		private static final SubtypeQuery test_7284_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_7284() { testInvalid(test_7284_query); }

		private static final SubtypeQuery test_7285_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_7285() { testInvalid(test_7285_query); }

		private static final SubtypeQuery test_7286_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_7286() { testInvalid(test_7286_query); }

		private static final SubtypeQuery test_7287_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("(int | (any | int))"));
		@Test public void test_7287() { testInvalid(test_7287_query); }

		private static final SubtypeQuery test_7288_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_7288() { testInvalid(test_7288_query); }

		private static final SubtypeQuery test_7289_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_7289() { testInvalid(test_7289_query); }

		private static final SubtypeQuery test_7290_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_7290() { testInvalid(test_7290_query); }

		private static final SubtypeQuery test_7291_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_7291() { testInvalid(test_7291_query); }

		private static final SubtypeQuery test_7292_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("(!any | (int | int))"));
		@Test public void test_7292() { testInvalid(test_7292_query); }

		private static final SubtypeQuery test_7293_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_7293() { testInvalid(test_7293_query); }

		private static final SubtypeQuery test_7294_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("(int | (any & any))"));
		@Test public void test_7294() { testInvalid(test_7294_query); }

		private static final SubtypeQuery test_7295_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("(!any | (any & any))"));
		@Test public void test_7295() { testInvalid(test_7295_query); }

		private static final SubtypeQuery test_7296_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_7296() { testInvalid(test_7296_query); }

		private static final SubtypeQuery test_7297_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_7297() { testInvalid(test_7297_query); }

		private static final SubtypeQuery test_7298_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_7298() { testInvalid(test_7298_query); }

		private static final SubtypeQuery test_7299_query = createSubtypeQuery(parseWhiley("(!any | !int)"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_7299() { testInvalid(test_7299_query); }

		private static final SubtypeQuery test_7300_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("!int"));
		@Test public void test_7300() { testValid(test_7300_query); }

		private static final SubtypeQuery test_7301_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("(any | any)"));
		@Test public void test_7301() { testInvalid(test_7301_query); }

		private static final SubtypeQuery test_7302_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("(any & any)"));
		@Test public void test_7302() { testInvalid(test_7302_query); }

		private static final SubtypeQuery test_7303_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{{int, int}}"));
		@Test public void test_7303() { testValid(test_7303_query); }

		private static final SubtypeQuery test_7304_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("!(int | int)"));
		@Test public void test_7304() { testValid(test_7304_query); }

		private static final SubtypeQuery test_7305_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{{any, any}, any}"));
		@Test public void test_7305() { testValid(test_7305_query); }

		private static final SubtypeQuery test_7306_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{{any, int}, any}"));
		@Test public void test_7306() { testValid(test_7306_query); }

		private static final SubtypeQuery test_7307_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{{any}, int}"));
		@Test public void test_7307() { testValid(test_7307_query); }

		private static final SubtypeQuery test_7308_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{{any, any}, int}"));
		@Test public void test_7308() { testValid(test_7308_query); }

		private static final SubtypeQuery test_7309_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{(any | int), int}"));
		@Test public void test_7309() { testValid(test_7309_query); }

		private static final SubtypeQuery test_7310_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_7310() { testValid(test_7310_query); }

		private static final SubtypeQuery test_7311_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{!any, {int}}"));
		@Test public void test_7311() { testValid(test_7311_query); }

		private static final SubtypeQuery test_7312_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_7312() { testValid(test_7312_query); }

		private static final SubtypeQuery test_7313_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_7313() { testValid(test_7313_query); }

		private static final SubtypeQuery test_7314_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{any, !any}"));
		@Test public void test_7314() { testValid(test_7314_query); }

		private static final SubtypeQuery test_7315_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{{any}, !int}"));
		@Test public void test_7315() { testValid(test_7315_query); }

		private static final SubtypeQuery test_7316_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_7316() { testValid(test_7316_query); }

		private static final SubtypeQuery test_7317_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_7317() { testValid(test_7317_query); }

		private static final SubtypeQuery test_7318_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{(int & int), !int}"));
		@Test public void test_7318() { testValid(test_7318_query); }

		private static final SubtypeQuery test_7319_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_7319() { testValid(test_7319_query); }

		private static final SubtypeQuery test_7320_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_7320() { testValid(test_7320_query); }

		private static final SubtypeQuery test_7321_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_7321() { testValid(test_7321_query); }

		private static final SubtypeQuery test_7322_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_7322() { testValid(test_7322_query); }

		private static final SubtypeQuery test_7323_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_7323() { testValid(test_7323_query); }

		private static final SubtypeQuery test_7324_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_7324() { testValid(test_7324_query); }

		private static final SubtypeQuery test_7325_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_7325() { testValid(test_7325_query); }

		private static final SubtypeQuery test_7326_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{any, {any, int}}"));
		@Test public void test_7326() { testValid(test_7326_query); }

		private static final SubtypeQuery test_7327_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_7327() { testValid(test_7327_query); }

		private static final SubtypeQuery test_7328_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_7328() { testValid(test_7328_query); }

		private static final SubtypeQuery test_7329_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_7329() { testValid(test_7329_query); }

		private static final SubtypeQuery test_7330_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_7330() { testValid(test_7330_query); }

		private static final SubtypeQuery test_7331_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_7331() { testValid(test_7331_query); }

		private static final SubtypeQuery test_7332_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_7332() { testValid(test_7332_query); }

		private static final SubtypeQuery test_7333_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_7333() { testValid(test_7333_query); }

		private static final SubtypeQuery test_7334_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_7334() { testValid(test_7334_query); }

		private static final SubtypeQuery test_7335_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_7335() { testValid(test_7335_query); }

		private static final SubtypeQuery test_7336_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_7336() { testValid(test_7336_query); }

		private static final SubtypeQuery test_7337_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{int, (int | int)}"));
		@Test public void test_7337() { testValid(test_7337_query); }

		private static final SubtypeQuery test_7338_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_7338() { testValid(test_7338_query); }

		private static final SubtypeQuery test_7339_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{any, (any & any)}"));
		@Test public void test_7339() { testValid(test_7339_query); }

		private static final SubtypeQuery test_7340_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_7340() { testValid(test_7340_query); }

		private static final SubtypeQuery test_7341_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_7341() { testValid(test_7341_query); }

		private static final SubtypeQuery test_7342_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_7342() { testValid(test_7342_query); }

		private static final SubtypeQuery test_7343_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_7343() { testValid(test_7343_query); }

		private static final SubtypeQuery test_7344_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_7344() { testValid(test_7344_query); }

		private static final SubtypeQuery test_7345_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_7345() { testValid(test_7345_query); }

		private static final SubtypeQuery test_7346_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_7346() { testValid(test_7346_query); }

		private static final SubtypeQuery test_7347_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_7347() { testValid(test_7347_query); }

		private static final SubtypeQuery test_7348_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{any, (any & int)}"));
		@Test public void test_7348() { testValid(test_7348_query); }

		private static final SubtypeQuery test_7349_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_7349() { testValid(test_7349_query); }

		private static final SubtypeQuery test_7350_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_7350() { testValid(test_7350_query); }

		private static final SubtypeQuery test_7351_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_7351() { testValid(test_7351_query); }

		private static final SubtypeQuery test_7352_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{int, (int & int)}"));
		@Test public void test_7352() { testValid(test_7352_query); }

		private static final SubtypeQuery test_7353_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_7353() { testValid(test_7353_query); }

		private static final SubtypeQuery test_7354_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_7354() { testValid(test_7354_query); }

		private static final SubtypeQuery test_7355_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_7355() { testValid(test_7355_query); }

		private static final SubtypeQuery test_7356_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("(!any | any)"));
		@Test public void test_7356() { testInvalid(test_7356_query); }

		private static final SubtypeQuery test_7357_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("({int, any} | any)"));
		@Test public void test_7357() { testInvalid(test_7357_query); }

		private static final SubtypeQuery test_7358_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("({any, int} | any)"));
		@Test public void test_7358() { testInvalid(test_7358_query); }

		private static final SubtypeQuery test_7359_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("((int & int) | any)"));
		@Test public void test_7359() { testInvalid(test_7359_query); }

		private static final SubtypeQuery test_7360_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("({int, int} | int)"));
		@Test public void test_7360() { testInvalid(test_7360_query); }

		private static final SubtypeQuery test_7361_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("((any | any) | int)"));
		@Test public void test_7361() { testInvalid(test_7361_query); }

		private static final SubtypeQuery test_7362_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("((int | any) | int)"));
		@Test public void test_7362() { testInvalid(test_7362_query); }

		private static final SubtypeQuery test_7363_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("(any | {any})"));
		@Test public void test_7363() { testInvalid(test_7363_query); }

		private static final SubtypeQuery test_7364_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("(int | {any})"));
		@Test public void test_7364() { testInvalid(test_7364_query); }

		private static final SubtypeQuery test_7365_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("({any, any} | {any})"));
		@Test public void test_7365() { testValid(test_7365_query); }

		private static final SubtypeQuery test_7366_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("(any | {int})"));
		@Test public void test_7366() { testInvalid(test_7366_query); }

		private static final SubtypeQuery test_7367_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("((any | any) | {int})"));
		@Test public void test_7367() { testInvalid(test_7367_query); }

		private static final SubtypeQuery test_7368_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("(!int | !any)"));
		@Test public void test_7368() { testValid(test_7368_query); }

		private static final SubtypeQuery test_7369_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("({int, any} | !any)"));
		@Test public void test_7369() { testValid(test_7369_query); }

		private static final SubtypeQuery test_7370_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("((any | any) | !any)"));
		@Test public void test_7370() { testInvalid(test_7370_query); }

		private static final SubtypeQuery test_7371_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("({int} | !int)"));
		@Test public void test_7371() { testValid(test_7371_query); }

		private static final SubtypeQuery test_7372_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("(!any | !int)"));
		@Test public void test_7372() { testValid(test_7372_query); }

		private static final SubtypeQuery test_7373_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("(!int | {any, any})"));
		@Test public void test_7373() { testValid(test_7373_query); }

		private static final SubtypeQuery test_7374_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_7374() { testInvalid(test_7374_query); }

		private static final SubtypeQuery test_7375_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_7375() { testInvalid(test_7375_query); }

		private static final SubtypeQuery test_7376_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_7376() { testValid(test_7376_query); }

		private static final SubtypeQuery test_7377_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_7377() { testInvalid(test_7377_query); }

		private static final SubtypeQuery test_7378_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_7378() { testInvalid(test_7378_query); }

		private static final SubtypeQuery test_7379_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_7379() { testInvalid(test_7379_query); }

		private static final SubtypeQuery test_7380_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("({int} | (any | any))"));
		@Test public void test_7380() { testInvalid(test_7380_query); }

		private static final SubtypeQuery test_7381_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_7381() { testInvalid(test_7381_query); }

		private static final SubtypeQuery test_7382_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_7382() { testInvalid(test_7382_query); }

		private static final SubtypeQuery test_7383_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_7383() { testInvalid(test_7383_query); }

		private static final SubtypeQuery test_7384_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_7384() { testInvalid(test_7384_query); }

		private static final SubtypeQuery test_7385_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_7385() { testInvalid(test_7385_query); }

		private static final SubtypeQuery test_7386_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_7386() { testInvalid(test_7386_query); }

		private static final SubtypeQuery test_7387_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("(int | (any | int))"));
		@Test public void test_7387() { testInvalid(test_7387_query); }

		private static final SubtypeQuery test_7388_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_7388() { testInvalid(test_7388_query); }

		private static final SubtypeQuery test_7389_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_7389() { testInvalid(test_7389_query); }

		private static final SubtypeQuery test_7390_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_7390() { testInvalid(test_7390_query); }

		private static final SubtypeQuery test_7391_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_7391() { testInvalid(test_7391_query); }

		private static final SubtypeQuery test_7392_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("(!any | (int | int))"));
		@Test public void test_7392() { testInvalid(test_7392_query); }

		private static final SubtypeQuery test_7393_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_7393() { testInvalid(test_7393_query); }

		private static final SubtypeQuery test_7394_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("(int | (any & any))"));
		@Test public void test_7394() { testInvalid(test_7394_query); }

		private static final SubtypeQuery test_7395_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("(!any | (any & any))"));
		@Test public void test_7395() { testInvalid(test_7395_query); }

		private static final SubtypeQuery test_7396_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_7396() { testInvalid(test_7396_query); }

		private static final SubtypeQuery test_7397_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_7397() { testInvalid(test_7397_query); }

		private static final SubtypeQuery test_7398_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_7398() { testInvalid(test_7398_query); }

		private static final SubtypeQuery test_7399_query = createSubtypeQuery(parseWhiley("(!int | {any, any})"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_7399() { testInvalid(test_7399_query); }

		private static final SubtypeQuery test_7400_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("!int"));
		@Test public void test_7400() { testInvalid(test_7400_query); }

		private static final SubtypeQuery test_7401_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("(any | any)"));
		@Test public void test_7401() { testInvalid(test_7401_query); }

		private static final SubtypeQuery test_7402_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("(any & any)"));
		@Test public void test_7402() { testInvalid(test_7402_query); }

		private static final SubtypeQuery test_7403_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{{int, int}}"));
		@Test public void test_7403() { testInvalid(test_7403_query); }

		private static final SubtypeQuery test_7404_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("!(int | int)"));
		@Test public void test_7404() { testInvalid(test_7404_query); }

		private static final SubtypeQuery test_7405_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{{any, any}, any}"));
		@Test public void test_7405() { testValid(test_7405_query); }

		private static final SubtypeQuery test_7406_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{{any, int}, any}"));
		@Test public void test_7406() { testValid(test_7406_query); }

		private static final SubtypeQuery test_7407_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{{any}, int}"));
		@Test public void test_7407() { testValid(test_7407_query); }

		private static final SubtypeQuery test_7408_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{{any, any}, int}"));
		@Test public void test_7408() { testValid(test_7408_query); }

		private static final SubtypeQuery test_7409_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{(any | int), int}"));
		@Test public void test_7409() { testValid(test_7409_query); }

		private static final SubtypeQuery test_7410_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_7410() { testValid(test_7410_query); }

		private static final SubtypeQuery test_7411_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{!any, {int}}"));
		@Test public void test_7411() { testValid(test_7411_query); }

		private static final SubtypeQuery test_7412_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_7412() { testValid(test_7412_query); }

		private static final SubtypeQuery test_7413_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_7413() { testValid(test_7413_query); }

		private static final SubtypeQuery test_7414_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{any, !any}"));
		@Test public void test_7414() { testValid(test_7414_query); }

		private static final SubtypeQuery test_7415_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{{any}, !int}"));
		@Test public void test_7415() { testValid(test_7415_query); }

		private static final SubtypeQuery test_7416_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_7416() { testValid(test_7416_query); }

		private static final SubtypeQuery test_7417_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_7417() { testValid(test_7417_query); }

		private static final SubtypeQuery test_7418_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{(int & int), !int}"));
		@Test public void test_7418() { testValid(test_7418_query); }

		private static final SubtypeQuery test_7419_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_7419() { testValid(test_7419_query); }

		private static final SubtypeQuery test_7420_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_7420() { testValid(test_7420_query); }

		private static final SubtypeQuery test_7421_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_7421() { testValid(test_7421_query); }

		private static final SubtypeQuery test_7422_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_7422() { testValid(test_7422_query); }

		private static final SubtypeQuery test_7423_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_7423() { testValid(test_7423_query); }

		private static final SubtypeQuery test_7424_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_7424() { testValid(test_7424_query); }

		private static final SubtypeQuery test_7425_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_7425() { testValid(test_7425_query); }

		private static final SubtypeQuery test_7426_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{any, {any, int}}"));
		@Test public void test_7426() { testValid(test_7426_query); }

		private static final SubtypeQuery test_7427_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_7427() { testValid(test_7427_query); }

		private static final SubtypeQuery test_7428_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_7428() { testValid(test_7428_query); }

		private static final SubtypeQuery test_7429_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_7429() { testValid(test_7429_query); }

		private static final SubtypeQuery test_7430_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_7430() { testValid(test_7430_query); }

		private static final SubtypeQuery test_7431_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_7431() { testValid(test_7431_query); }

		private static final SubtypeQuery test_7432_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_7432() { testValid(test_7432_query); }

		private static final SubtypeQuery test_7433_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_7433() { testValid(test_7433_query); }

		private static final SubtypeQuery test_7434_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_7434() { testValid(test_7434_query); }

		private static final SubtypeQuery test_7435_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_7435() { testValid(test_7435_query); }

		private static final SubtypeQuery test_7436_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_7436() { testValid(test_7436_query); }

		private static final SubtypeQuery test_7437_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{int, (int | int)}"));
		@Test public void test_7437() { testValid(test_7437_query); }

		private static final SubtypeQuery test_7438_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_7438() { testValid(test_7438_query); }

		private static final SubtypeQuery test_7439_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{any, (any & any)}"));
		@Test public void test_7439() { testValid(test_7439_query); }

		private static final SubtypeQuery test_7440_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_7440() { testValid(test_7440_query); }

		private static final SubtypeQuery test_7441_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_7441() { testValid(test_7441_query); }

		private static final SubtypeQuery test_7442_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_7442() { testValid(test_7442_query); }

		private static final SubtypeQuery test_7443_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_7443() { testValid(test_7443_query); }

		private static final SubtypeQuery test_7444_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_7444() { testValid(test_7444_query); }

		private static final SubtypeQuery test_7445_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_7445() { testValid(test_7445_query); }

		private static final SubtypeQuery test_7446_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_7446() { testValid(test_7446_query); }

		private static final SubtypeQuery test_7447_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_7447() { testValid(test_7447_query); }

		private static final SubtypeQuery test_7448_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{any, (any & int)}"));
		@Test public void test_7448() { testValid(test_7448_query); }

		private static final SubtypeQuery test_7449_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_7449() { testValid(test_7449_query); }

		private static final SubtypeQuery test_7450_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_7450() { testValid(test_7450_query); }

		private static final SubtypeQuery test_7451_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_7451() { testValid(test_7451_query); }

		private static final SubtypeQuery test_7452_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{int, (int & int)}"));
		@Test public void test_7452() { testValid(test_7452_query); }

		private static final SubtypeQuery test_7453_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_7453() { testValid(test_7453_query); }

		private static final SubtypeQuery test_7454_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_7454() { testValid(test_7454_query); }

		private static final SubtypeQuery test_7455_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_7455() { testValid(test_7455_query); }

		private static final SubtypeQuery test_7456_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("(!any | any)"));
		@Test public void test_7456() { testInvalid(test_7456_query); }

		private static final SubtypeQuery test_7457_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("({int, any} | any)"));
		@Test public void test_7457() { testInvalid(test_7457_query); }

		private static final SubtypeQuery test_7458_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("({any, int} | any)"));
		@Test public void test_7458() { testInvalid(test_7458_query); }

		private static final SubtypeQuery test_7459_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("((int & int) | any)"));
		@Test public void test_7459() { testInvalid(test_7459_query); }

		private static final SubtypeQuery test_7460_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("({int, int} | int)"));
		@Test public void test_7460() { testValid(test_7460_query); }

		private static final SubtypeQuery test_7461_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("((any | any) | int)"));
		@Test public void test_7461() { testInvalid(test_7461_query); }

		private static final SubtypeQuery test_7462_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("((int | any) | int)"));
		@Test public void test_7462() { testInvalid(test_7462_query); }

		private static final SubtypeQuery test_7463_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("(any | {any})"));
		@Test public void test_7463() { testInvalid(test_7463_query); }

		private static final SubtypeQuery test_7464_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("(int | {any})"));
		@Test public void test_7464() { testInvalid(test_7464_query); }

		private static final SubtypeQuery test_7465_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("({any, any} | {any})"));
		@Test public void test_7465() { testInvalid(test_7465_query); }

		private static final SubtypeQuery test_7466_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("(any | {int})"));
		@Test public void test_7466() { testInvalid(test_7466_query); }

		private static final SubtypeQuery test_7467_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("((any | any) | {int})"));
		@Test public void test_7467() { testInvalid(test_7467_query); }

		private static final SubtypeQuery test_7468_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("(!int | !any)"));
		@Test public void test_7468() { testInvalid(test_7468_query); }

		private static final SubtypeQuery test_7469_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("({int, any} | !any)"));
		@Test public void test_7469() { testValid(test_7469_query); }

		private static final SubtypeQuery test_7470_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("((any | any) | !any)"));
		@Test public void test_7470() { testInvalid(test_7470_query); }

		private static final SubtypeQuery test_7471_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("({int} | !int)"));
		@Test public void test_7471() { testInvalid(test_7471_query); }

		private static final SubtypeQuery test_7472_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("(!any | !int)"));
		@Test public void test_7472() { testInvalid(test_7472_query); }

		private static final SubtypeQuery test_7473_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("(!int | {any, any})"));
		@Test public void test_7473() { testInvalid(test_7473_query); }

		private static final SubtypeQuery test_7474_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_7474() { testValid(test_7474_query); }

		private static final SubtypeQuery test_7475_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_7475() { testInvalid(test_7475_query); }

		private static final SubtypeQuery test_7476_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_7476() { testValid(test_7476_query); }

		private static final SubtypeQuery test_7477_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_7477() { testInvalid(test_7477_query); }

		private static final SubtypeQuery test_7478_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_7478() { testValid(test_7478_query); }

		private static final SubtypeQuery test_7479_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_7479() { testValid(test_7479_query); }

		private static final SubtypeQuery test_7480_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("({int} | (any | any))"));
		@Test public void test_7480() { testInvalid(test_7480_query); }

		private static final SubtypeQuery test_7481_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_7481() { testInvalid(test_7481_query); }

		private static final SubtypeQuery test_7482_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_7482() { testInvalid(test_7482_query); }

		private static final SubtypeQuery test_7483_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_7483() { testInvalid(test_7483_query); }

		private static final SubtypeQuery test_7484_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_7484() { testInvalid(test_7484_query); }

		private static final SubtypeQuery test_7485_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_7485() { testInvalid(test_7485_query); }

		private static final SubtypeQuery test_7486_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_7486() { testInvalid(test_7486_query); }

		private static final SubtypeQuery test_7487_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("(int | (any | int))"));
		@Test public void test_7487() { testInvalid(test_7487_query); }

		private static final SubtypeQuery test_7488_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_7488() { testInvalid(test_7488_query); }

		private static final SubtypeQuery test_7489_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_7489() { testInvalid(test_7489_query); }

		private static final SubtypeQuery test_7490_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_7490() { testInvalid(test_7490_query); }

		private static final SubtypeQuery test_7491_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_7491() { testInvalid(test_7491_query); }

		private static final SubtypeQuery test_7492_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("(!any | (int | int))"));
		@Test public void test_7492() { testValid(test_7492_query); }

		private static final SubtypeQuery test_7493_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_7493() { testValid(test_7493_query); }

		private static final SubtypeQuery test_7494_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("(int | (any & any))"));
		@Test public void test_7494() { testInvalid(test_7494_query); }

		private static final SubtypeQuery test_7495_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("(!any | (any & any))"));
		@Test public void test_7495() { testInvalid(test_7495_query); }

		private static final SubtypeQuery test_7496_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_7496() { testInvalid(test_7496_query); }

		private static final SubtypeQuery test_7497_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_7497() { testInvalid(test_7497_query); }

		private static final SubtypeQuery test_7498_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_7498() { testInvalid(test_7498_query); }

		private static final SubtypeQuery test_7499_query = createSubtypeQuery(parseWhiley("((any & int) | {any, any})"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_7499() { testInvalid(test_7499_query); }

		private static final SubtypeQuery test_7500_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("!int"));
		@Test public void test_7500() { testValid(test_7500_query); }

		private static final SubtypeQuery test_7501_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("(any | any)"));
		@Test public void test_7501() { testValid(test_7501_query); }

		private static final SubtypeQuery test_7502_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("(any & any)"));
		@Test public void test_7502() { testValid(test_7502_query); }

		private static final SubtypeQuery test_7503_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{{int, int}}"));
		@Test public void test_7503() { testValid(test_7503_query); }

		private static final SubtypeQuery test_7504_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("!(int | int)"));
		@Test public void test_7504() { testValid(test_7504_query); }

		private static final SubtypeQuery test_7505_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{{any, any}, any}"));
		@Test public void test_7505() { testValid(test_7505_query); }

		private static final SubtypeQuery test_7506_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{{any, int}, any}"));
		@Test public void test_7506() { testValid(test_7506_query); }

		private static final SubtypeQuery test_7507_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{{any}, int}"));
		@Test public void test_7507() { testValid(test_7507_query); }

		private static final SubtypeQuery test_7508_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{{any, any}, int}"));
		@Test public void test_7508() { testValid(test_7508_query); }

		private static final SubtypeQuery test_7509_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{(any | int), int}"));
		@Test public void test_7509() { testValid(test_7509_query); }

		private static final SubtypeQuery test_7510_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_7510() { testValid(test_7510_query); }

		private static final SubtypeQuery test_7511_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{!any, {int}}"));
		@Test public void test_7511() { testValid(test_7511_query); }

		private static final SubtypeQuery test_7512_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_7512() { testValid(test_7512_query); }

		private static final SubtypeQuery test_7513_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_7513() { testValid(test_7513_query); }

		private static final SubtypeQuery test_7514_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{any, !any}"));
		@Test public void test_7514() { testValid(test_7514_query); }

		private static final SubtypeQuery test_7515_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{{any}, !int}"));
		@Test public void test_7515() { testValid(test_7515_query); }

		private static final SubtypeQuery test_7516_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_7516() { testValid(test_7516_query); }

		private static final SubtypeQuery test_7517_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_7517() { testValid(test_7517_query); }

		private static final SubtypeQuery test_7518_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{(int & int), !int}"));
		@Test public void test_7518() { testValid(test_7518_query); }

		private static final SubtypeQuery test_7519_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_7519() { testValid(test_7519_query); }

		private static final SubtypeQuery test_7520_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_7520() { testValid(test_7520_query); }

		private static final SubtypeQuery test_7521_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_7521() { testValid(test_7521_query); }

		private static final SubtypeQuery test_7522_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_7522() { testValid(test_7522_query); }

		private static final SubtypeQuery test_7523_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_7523() { testValid(test_7523_query); }

		private static final SubtypeQuery test_7524_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_7524() { testValid(test_7524_query); }

		private static final SubtypeQuery test_7525_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_7525() { testValid(test_7525_query); }

		private static final SubtypeQuery test_7526_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{any, {any, int}}"));
		@Test public void test_7526() { testValid(test_7526_query); }

		private static final SubtypeQuery test_7527_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_7527() { testValid(test_7527_query); }

		private static final SubtypeQuery test_7528_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_7528() { testValid(test_7528_query); }

		private static final SubtypeQuery test_7529_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_7529() { testValid(test_7529_query); }

		private static final SubtypeQuery test_7530_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_7530() { testValid(test_7530_query); }

		private static final SubtypeQuery test_7531_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_7531() { testValid(test_7531_query); }

		private static final SubtypeQuery test_7532_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_7532() { testValid(test_7532_query); }

		private static final SubtypeQuery test_7533_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_7533() { testValid(test_7533_query); }

		private static final SubtypeQuery test_7534_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_7534() { testValid(test_7534_query); }

		private static final SubtypeQuery test_7535_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_7535() { testValid(test_7535_query); }

		private static final SubtypeQuery test_7536_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_7536() { testValid(test_7536_query); }

		private static final SubtypeQuery test_7537_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{int, (int | int)}"));
		@Test public void test_7537() { testValid(test_7537_query); }

		private static final SubtypeQuery test_7538_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_7538() { testValid(test_7538_query); }

		private static final SubtypeQuery test_7539_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{any, (any & any)}"));
		@Test public void test_7539() { testValid(test_7539_query); }

		private static final SubtypeQuery test_7540_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_7540() { testValid(test_7540_query); }

		private static final SubtypeQuery test_7541_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_7541() { testValid(test_7541_query); }

		private static final SubtypeQuery test_7542_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_7542() { testValid(test_7542_query); }

		private static final SubtypeQuery test_7543_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_7543() { testValid(test_7543_query); }

		private static final SubtypeQuery test_7544_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_7544() { testValid(test_7544_query); }

		private static final SubtypeQuery test_7545_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_7545() { testValid(test_7545_query); }

		private static final SubtypeQuery test_7546_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_7546() { testValid(test_7546_query); }

		private static final SubtypeQuery test_7547_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_7547() { testValid(test_7547_query); }

		private static final SubtypeQuery test_7548_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{any, (any & int)}"));
		@Test public void test_7548() { testValid(test_7548_query); }

		private static final SubtypeQuery test_7549_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_7549() { testValid(test_7549_query); }

		private static final SubtypeQuery test_7550_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_7550() { testValid(test_7550_query); }

		private static final SubtypeQuery test_7551_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_7551() { testValid(test_7551_query); }

		private static final SubtypeQuery test_7552_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{int, (int & int)}"));
		@Test public void test_7552() { testValid(test_7552_query); }

		private static final SubtypeQuery test_7553_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_7553() { testValid(test_7553_query); }

		private static final SubtypeQuery test_7554_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_7554() { testValid(test_7554_query); }

		private static final SubtypeQuery test_7555_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_7555() { testValid(test_7555_query); }

		private static final SubtypeQuery test_7556_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("(!any | any)"));
		@Test public void test_7556() { testValid(test_7556_query); }

		private static final SubtypeQuery test_7557_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("({int, any} | any)"));
		@Test public void test_7557() { testValid(test_7557_query); }

		private static final SubtypeQuery test_7558_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("({any, int} | any)"));
		@Test public void test_7558() { testValid(test_7558_query); }

		private static final SubtypeQuery test_7559_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("((int & int) | any)"));
		@Test public void test_7559() { testValid(test_7559_query); }

		private static final SubtypeQuery test_7560_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("({int, int} | int)"));
		@Test public void test_7560() { testValid(test_7560_query); }

		private static final SubtypeQuery test_7561_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("((any | any) | int)"));
		@Test public void test_7561() { testValid(test_7561_query); }

		private static final SubtypeQuery test_7562_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("((int | any) | int)"));
		@Test public void test_7562() { testValid(test_7562_query); }

		private static final SubtypeQuery test_7563_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("(any | {any})"));
		@Test public void test_7563() { testValid(test_7563_query); }

		private static final SubtypeQuery test_7564_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("(int | {any})"));
		@Test public void test_7564() { testValid(test_7564_query); }

		private static final SubtypeQuery test_7565_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("({any, any} | {any})"));
		@Test public void test_7565() { testValid(test_7565_query); }

		private static final SubtypeQuery test_7566_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("(any | {int})"));
		@Test public void test_7566() { testValid(test_7566_query); }

		private static final SubtypeQuery test_7567_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("((any | any) | {int})"));
		@Test public void test_7567() { testValid(test_7567_query); }

		private static final SubtypeQuery test_7568_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("(!int | !any)"));
		@Test public void test_7568() { testValid(test_7568_query); }

		private static final SubtypeQuery test_7569_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("({int, any} | !any)"));
		@Test public void test_7569() { testValid(test_7569_query); }

		private static final SubtypeQuery test_7570_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("((any | any) | !any)"));
		@Test public void test_7570() { testValid(test_7570_query); }

		private static final SubtypeQuery test_7571_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("({int} | !int)"));
		@Test public void test_7571() { testValid(test_7571_query); }

		private static final SubtypeQuery test_7572_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("(!any | !int)"));
		@Test public void test_7572() { testValid(test_7572_query); }

		private static final SubtypeQuery test_7573_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("(!int | {any, any})"));
		@Test public void test_7573() { testValid(test_7573_query); }

		private static final SubtypeQuery test_7574_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_7574() { testValid(test_7574_query); }

		private static final SubtypeQuery test_7575_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_7575() { testValid(test_7575_query); }

		private static final SubtypeQuery test_7576_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_7576() { testValid(test_7576_query); }

		private static final SubtypeQuery test_7577_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_7577() { testValid(test_7577_query); }

		private static final SubtypeQuery test_7578_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_7578() { testValid(test_7578_query); }

		private static final SubtypeQuery test_7579_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_7579() { testValid(test_7579_query); }

		private static final SubtypeQuery test_7580_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("({int} | (any | any))"));
		@Test public void test_7580() { testValid(test_7580_query); }

		private static final SubtypeQuery test_7581_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_7581() { testValid(test_7581_query); }

		private static final SubtypeQuery test_7582_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_7582() { testValid(test_7582_query); }

		private static final SubtypeQuery test_7583_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_7583() { testValid(test_7583_query); }

		private static final SubtypeQuery test_7584_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_7584() { testValid(test_7584_query); }

		private static final SubtypeQuery test_7585_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_7585() { testValid(test_7585_query); }

		private static final SubtypeQuery test_7586_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_7586() { testValid(test_7586_query); }

		private static final SubtypeQuery test_7587_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("(int | (any | int))"));
		@Test public void test_7587() { testValid(test_7587_query); }

		private static final SubtypeQuery test_7588_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_7588() { testValid(test_7588_query); }

		private static final SubtypeQuery test_7589_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_7589() { testValid(test_7589_query); }

		private static final SubtypeQuery test_7590_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_7590() { testValid(test_7590_query); }

		private static final SubtypeQuery test_7591_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_7591() { testValid(test_7591_query); }

		private static final SubtypeQuery test_7592_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("(!any | (int | int))"));
		@Test public void test_7592() { testValid(test_7592_query); }

		private static final SubtypeQuery test_7593_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_7593() { testValid(test_7593_query); }

		private static final SubtypeQuery test_7594_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("(int | (any & any))"));
		@Test public void test_7594() { testValid(test_7594_query); }

		private static final SubtypeQuery test_7595_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("(!any | (any & any))"));
		@Test public void test_7595() { testValid(test_7595_query); }

		private static final SubtypeQuery test_7596_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_7596() { testValid(test_7596_query); }

		private static final SubtypeQuery test_7597_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_7597() { testValid(test_7597_query); }

		private static final SubtypeQuery test_7598_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_7598() { testValid(test_7598_query); }

		private static final SubtypeQuery test_7599_query = createSubtypeQuery(parseWhiley("((any & any) | {int, any})"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_7599() { testValid(test_7599_query); }

		private static final SubtypeQuery test_7600_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("!int"));
		@Test public void test_7600() { testInvalid(test_7600_query); }

		private static final SubtypeQuery test_7601_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("(any | any)"));
		@Test public void test_7601() { testInvalid(test_7601_query); }

		private static final SubtypeQuery test_7602_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("(any & any)"));
		@Test public void test_7602() { testInvalid(test_7602_query); }

		private static final SubtypeQuery test_7603_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{{int, int}}"));
		@Test public void test_7603() { testInvalid(test_7603_query); }

		private static final SubtypeQuery test_7604_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("!(int | int)"));
		@Test public void test_7604() { testInvalid(test_7604_query); }

		private static final SubtypeQuery test_7605_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{{any, any}, any}"));
		@Test public void test_7605() { testInvalid(test_7605_query); }

		private static final SubtypeQuery test_7606_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{{any, int}, any}"));
		@Test public void test_7606() { testInvalid(test_7606_query); }

		private static final SubtypeQuery test_7607_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{{any}, int}"));
		@Test public void test_7607() { testValid(test_7607_query); }

		private static final SubtypeQuery test_7608_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{{any, any}, int}"));
		@Test public void test_7608() { testValid(test_7608_query); }

		private static final SubtypeQuery test_7609_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{(any | int), int}"));
		@Test public void test_7609() { testValid(test_7609_query); }

		private static final SubtypeQuery test_7610_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_7610() { testInvalid(test_7610_query); }

		private static final SubtypeQuery test_7611_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{!any, {int}}"));
		@Test public void test_7611() { testValid(test_7611_query); }

		private static final SubtypeQuery test_7612_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_7612() { testInvalid(test_7612_query); }

		private static final SubtypeQuery test_7613_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_7613() { testInvalid(test_7613_query); }

		private static final SubtypeQuery test_7614_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{any, !any}"));
		@Test public void test_7614() { testValid(test_7614_query); }

		private static final SubtypeQuery test_7615_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{{any}, !int}"));
		@Test public void test_7615() { testInvalid(test_7615_query); }

		private static final SubtypeQuery test_7616_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_7616() { testInvalid(test_7616_query); }

		private static final SubtypeQuery test_7617_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_7617() { testInvalid(test_7617_query); }

		private static final SubtypeQuery test_7618_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{(int & int), !int}"));
		@Test public void test_7618() { testInvalid(test_7618_query); }

		private static final SubtypeQuery test_7619_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_7619() { testInvalid(test_7619_query); }

		private static final SubtypeQuery test_7620_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_7620() { testInvalid(test_7620_query); }

		private static final SubtypeQuery test_7621_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_7621() { testInvalid(test_7621_query); }

		private static final SubtypeQuery test_7622_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_7622() { testInvalid(test_7622_query); }

		private static final SubtypeQuery test_7623_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_7623() { testInvalid(test_7623_query); }

		private static final SubtypeQuery test_7624_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_7624() { testInvalid(test_7624_query); }

		private static final SubtypeQuery test_7625_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_7625() { testInvalid(test_7625_query); }

		private static final SubtypeQuery test_7626_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{any, {any, int}}"));
		@Test public void test_7626() { testInvalid(test_7626_query); }

		private static final SubtypeQuery test_7627_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_7627() { testInvalid(test_7627_query); }

		private static final SubtypeQuery test_7628_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_7628() { testInvalid(test_7628_query); }

		private static final SubtypeQuery test_7629_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_7629() { testValid(test_7629_query); }

		private static final SubtypeQuery test_7630_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_7630() { testInvalid(test_7630_query); }

		private static final SubtypeQuery test_7631_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_7631() { testInvalid(test_7631_query); }

		private static final SubtypeQuery test_7632_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_7632() { testInvalid(test_7632_query); }

		private static final SubtypeQuery test_7633_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_7633() { testInvalid(test_7633_query); }

		private static final SubtypeQuery test_7634_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_7634() { testInvalid(test_7634_query); }

		private static final SubtypeQuery test_7635_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_7635() { testInvalid(test_7635_query); }

		private static final SubtypeQuery test_7636_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_7636() { testInvalid(test_7636_query); }

		private static final SubtypeQuery test_7637_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{int, (int | int)}"));
		@Test public void test_7637() { testValid(test_7637_query); }

		private static final SubtypeQuery test_7638_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_7638() { testValid(test_7638_query); }

		private static final SubtypeQuery test_7639_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{any, (any & any)}"));
		@Test public void test_7639() { testInvalid(test_7639_query); }

		private static final SubtypeQuery test_7640_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_7640() { testInvalid(test_7640_query); }

		private static final SubtypeQuery test_7641_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_7641() { testValid(test_7641_query); }

		private static final SubtypeQuery test_7642_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_7642() { testInvalid(test_7642_query); }

		private static final SubtypeQuery test_7643_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_7643() { testInvalid(test_7643_query); }

		private static final SubtypeQuery test_7644_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_7644() { testValid(test_7644_query); }

		private static final SubtypeQuery test_7645_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_7645() { testValid(test_7645_query); }

		private static final SubtypeQuery test_7646_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_7646() { testValid(test_7646_query); }

		private static final SubtypeQuery test_7647_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_7647() { testValid(test_7647_query); }

		private static final SubtypeQuery test_7648_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{any, (any & int)}"));
		@Test public void test_7648() { testValid(test_7648_query); }

		private static final SubtypeQuery test_7649_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_7649() { testValid(test_7649_query); }

		private static final SubtypeQuery test_7650_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_7650() { testValid(test_7650_query); }

		private static final SubtypeQuery test_7651_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_7651() { testValid(test_7651_query); }

		private static final SubtypeQuery test_7652_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{int, (int & int)}"));
		@Test public void test_7652() { testValid(test_7652_query); }

		private static final SubtypeQuery test_7653_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_7653() { testValid(test_7653_query); }

		private static final SubtypeQuery test_7654_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_7654() { testValid(test_7654_query); }

		private static final SubtypeQuery test_7655_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_7655() { testValid(test_7655_query); }

		private static final SubtypeQuery test_7656_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("(!any | any)"));
		@Test public void test_7656() { testInvalid(test_7656_query); }

		private static final SubtypeQuery test_7657_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("({int, any} | any)"));
		@Test public void test_7657() { testInvalid(test_7657_query); }

		private static final SubtypeQuery test_7658_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("({any, int} | any)"));
		@Test public void test_7658() { testInvalid(test_7658_query); }

		private static final SubtypeQuery test_7659_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("((int & int) | any)"));
		@Test public void test_7659() { testInvalid(test_7659_query); }

		private static final SubtypeQuery test_7660_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("({int, int} | int)"));
		@Test public void test_7660() { testInvalid(test_7660_query); }

		private static final SubtypeQuery test_7661_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("((any | any) | int)"));
		@Test public void test_7661() { testInvalid(test_7661_query); }

		private static final SubtypeQuery test_7662_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("((int | any) | int)"));
		@Test public void test_7662() { testInvalid(test_7662_query); }

		private static final SubtypeQuery test_7663_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("(any | {any})"));
		@Test public void test_7663() { testInvalid(test_7663_query); }

		private static final SubtypeQuery test_7664_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("(int | {any})"));
		@Test public void test_7664() { testInvalid(test_7664_query); }

		private static final SubtypeQuery test_7665_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("({any, any} | {any})"));
		@Test public void test_7665() { testInvalid(test_7665_query); }

		private static final SubtypeQuery test_7666_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("(any | {int})"));
		@Test public void test_7666() { testInvalid(test_7666_query); }

		private static final SubtypeQuery test_7667_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("((any | any) | {int})"));
		@Test public void test_7667() { testInvalid(test_7667_query); }

		private static final SubtypeQuery test_7668_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("(!int | !any)"));
		@Test public void test_7668() { testInvalid(test_7668_query); }

		private static final SubtypeQuery test_7669_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("({int, any} | !any)"));
		@Test public void test_7669() { testInvalid(test_7669_query); }

		private static final SubtypeQuery test_7670_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("((any | any) | !any)"));
		@Test public void test_7670() { testInvalid(test_7670_query); }

		private static final SubtypeQuery test_7671_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("({int} | !int)"));
		@Test public void test_7671() { testInvalid(test_7671_query); }

		private static final SubtypeQuery test_7672_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("(!any | !int)"));
		@Test public void test_7672() { testInvalid(test_7672_query); }

		private static final SubtypeQuery test_7673_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("(!int | {any, any})"));
		@Test public void test_7673() { testInvalid(test_7673_query); }

		private static final SubtypeQuery test_7674_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_7674() { testInvalid(test_7674_query); }

		private static final SubtypeQuery test_7675_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_7675() { testInvalid(test_7675_query); }

		private static final SubtypeQuery test_7676_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_7676() { testValid(test_7676_query); }

		private static final SubtypeQuery test_7677_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_7677() { testInvalid(test_7677_query); }

		private static final SubtypeQuery test_7678_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_7678() { testInvalid(test_7678_query); }

		private static final SubtypeQuery test_7679_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_7679() { testInvalid(test_7679_query); }

		private static final SubtypeQuery test_7680_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("({int} | (any | any))"));
		@Test public void test_7680() { testInvalid(test_7680_query); }

		private static final SubtypeQuery test_7681_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_7681() { testInvalid(test_7681_query); }

		private static final SubtypeQuery test_7682_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_7682() { testInvalid(test_7682_query); }

		private static final SubtypeQuery test_7683_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_7683() { testInvalid(test_7683_query); }

		private static final SubtypeQuery test_7684_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_7684() { testInvalid(test_7684_query); }

		private static final SubtypeQuery test_7685_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_7685() { testInvalid(test_7685_query); }

		private static final SubtypeQuery test_7686_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_7686() { testInvalid(test_7686_query); }

		private static final SubtypeQuery test_7687_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("(int | (any | int))"));
		@Test public void test_7687() { testInvalid(test_7687_query); }

		private static final SubtypeQuery test_7688_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_7688() { testInvalid(test_7688_query); }

		private static final SubtypeQuery test_7689_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_7689() { testInvalid(test_7689_query); }

		private static final SubtypeQuery test_7690_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_7690() { testInvalid(test_7690_query); }

		private static final SubtypeQuery test_7691_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_7691() { testInvalid(test_7691_query); }

		private static final SubtypeQuery test_7692_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("(!any | (int | int))"));
		@Test public void test_7692() { testInvalid(test_7692_query); }

		private static final SubtypeQuery test_7693_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_7693() { testInvalid(test_7693_query); }

		private static final SubtypeQuery test_7694_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("(int | (any & any))"));
		@Test public void test_7694() { testInvalid(test_7694_query); }

		private static final SubtypeQuery test_7695_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("(!any | (any & any))"));
		@Test public void test_7695() { testInvalid(test_7695_query); }

		private static final SubtypeQuery test_7696_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_7696() { testInvalid(test_7696_query); }

		private static final SubtypeQuery test_7697_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_7697() { testInvalid(test_7697_query); }

		private static final SubtypeQuery test_7698_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_7698() { testInvalid(test_7698_query); }

		private static final SubtypeQuery test_7699_query = createSubtypeQuery(parseWhiley("({int, int} | {any, int})"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_7699() { testInvalid(test_7699_query); }

		private static final SubtypeQuery test_7700_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("!int"));
		@Test public void test_7700() { testValid(test_7700_query); }

		private static final SubtypeQuery test_7701_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("(any | any)"));
		@Test public void test_7701() { testValid(test_7701_query); }

		private static final SubtypeQuery test_7702_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("(any & any)"));
		@Test public void test_7702() { testValid(test_7702_query); }

		private static final SubtypeQuery test_7703_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{{int, int}}"));
		@Test public void test_7703() { testValid(test_7703_query); }

		private static final SubtypeQuery test_7704_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("!(int | int)"));
		@Test public void test_7704() { testValid(test_7704_query); }

		private static final SubtypeQuery test_7705_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{{any, any}, any}"));
		@Test public void test_7705() { testValid(test_7705_query); }

		private static final SubtypeQuery test_7706_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{{any, int}, any}"));
		@Test public void test_7706() { testValid(test_7706_query); }

		private static final SubtypeQuery test_7707_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{{any}, int}"));
		@Test public void test_7707() { testValid(test_7707_query); }

		private static final SubtypeQuery test_7708_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{{any, any}, int}"));
		@Test public void test_7708() { testValid(test_7708_query); }

		private static final SubtypeQuery test_7709_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{(any | int), int}"));
		@Test public void test_7709() { testValid(test_7709_query); }

		private static final SubtypeQuery test_7710_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_7710() { testValid(test_7710_query); }

		private static final SubtypeQuery test_7711_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{!any, {int}}"));
		@Test public void test_7711() { testValid(test_7711_query); }

		private static final SubtypeQuery test_7712_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_7712() { testValid(test_7712_query); }

		private static final SubtypeQuery test_7713_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_7713() { testValid(test_7713_query); }

		private static final SubtypeQuery test_7714_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{any, !any}"));
		@Test public void test_7714() { testValid(test_7714_query); }

		private static final SubtypeQuery test_7715_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{{any}, !int}"));
		@Test public void test_7715() { testValid(test_7715_query); }

		private static final SubtypeQuery test_7716_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_7716() { testValid(test_7716_query); }

		private static final SubtypeQuery test_7717_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_7717() { testValid(test_7717_query); }

		private static final SubtypeQuery test_7718_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{(int & int), !int}"));
		@Test public void test_7718() { testValid(test_7718_query); }

		private static final SubtypeQuery test_7719_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_7719() { testValid(test_7719_query); }

		private static final SubtypeQuery test_7720_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_7720() { testValid(test_7720_query); }

		private static final SubtypeQuery test_7721_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_7721() { testValid(test_7721_query); }

		private static final SubtypeQuery test_7722_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_7722() { testValid(test_7722_query); }

		private static final SubtypeQuery test_7723_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_7723() { testValid(test_7723_query); }

		private static final SubtypeQuery test_7724_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_7724() { testValid(test_7724_query); }

		private static final SubtypeQuery test_7725_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_7725() { testValid(test_7725_query); }

		private static final SubtypeQuery test_7726_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{any, {any, int}}"));
		@Test public void test_7726() { testValid(test_7726_query); }

		private static final SubtypeQuery test_7727_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_7727() { testValid(test_7727_query); }

		private static final SubtypeQuery test_7728_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_7728() { testValid(test_7728_query); }

		private static final SubtypeQuery test_7729_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_7729() { testValid(test_7729_query); }

		private static final SubtypeQuery test_7730_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_7730() { testValid(test_7730_query); }

		private static final SubtypeQuery test_7731_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_7731() { testValid(test_7731_query); }

		private static final SubtypeQuery test_7732_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_7732() { testValid(test_7732_query); }

		private static final SubtypeQuery test_7733_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_7733() { testValid(test_7733_query); }

		private static final SubtypeQuery test_7734_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_7734() { testValid(test_7734_query); }

		private static final SubtypeQuery test_7735_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_7735() { testValid(test_7735_query); }

		private static final SubtypeQuery test_7736_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_7736() { testValid(test_7736_query); }

		private static final SubtypeQuery test_7737_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{int, (int | int)}"));
		@Test public void test_7737() { testValid(test_7737_query); }

		private static final SubtypeQuery test_7738_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_7738() { testValid(test_7738_query); }

		private static final SubtypeQuery test_7739_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{any, (any & any)}"));
		@Test public void test_7739() { testValid(test_7739_query); }

		private static final SubtypeQuery test_7740_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_7740() { testValid(test_7740_query); }

		private static final SubtypeQuery test_7741_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_7741() { testValid(test_7741_query); }

		private static final SubtypeQuery test_7742_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_7742() { testValid(test_7742_query); }

		private static final SubtypeQuery test_7743_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_7743() { testValid(test_7743_query); }

		private static final SubtypeQuery test_7744_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_7744() { testValid(test_7744_query); }

		private static final SubtypeQuery test_7745_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_7745() { testValid(test_7745_query); }

		private static final SubtypeQuery test_7746_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_7746() { testValid(test_7746_query); }

		private static final SubtypeQuery test_7747_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_7747() { testValid(test_7747_query); }

		private static final SubtypeQuery test_7748_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{any, (any & int)}"));
		@Test public void test_7748() { testValid(test_7748_query); }

		private static final SubtypeQuery test_7749_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_7749() { testValid(test_7749_query); }

		private static final SubtypeQuery test_7750_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_7750() { testValid(test_7750_query); }

		private static final SubtypeQuery test_7751_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_7751() { testValid(test_7751_query); }

		private static final SubtypeQuery test_7752_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{int, (int & int)}"));
		@Test public void test_7752() { testValid(test_7752_query); }

		private static final SubtypeQuery test_7753_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_7753() { testValid(test_7753_query); }

		private static final SubtypeQuery test_7754_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_7754() { testValid(test_7754_query); }

		private static final SubtypeQuery test_7755_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_7755() { testValid(test_7755_query); }

		private static final SubtypeQuery test_7756_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("(!any | any)"));
		@Test public void test_7756() { testValid(test_7756_query); }

		private static final SubtypeQuery test_7757_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("({int, any} | any)"));
		@Test public void test_7757() { testValid(test_7757_query); }

		private static final SubtypeQuery test_7758_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("({any, int} | any)"));
		@Test public void test_7758() { testValid(test_7758_query); }

		private static final SubtypeQuery test_7759_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("((int & int) | any)"));
		@Test public void test_7759() { testValid(test_7759_query); }

		private static final SubtypeQuery test_7760_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("({int, int} | int)"));
		@Test public void test_7760() { testValid(test_7760_query); }

		private static final SubtypeQuery test_7761_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("((any | any) | int)"));
		@Test public void test_7761() { testValid(test_7761_query); }

		private static final SubtypeQuery test_7762_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("((int | any) | int)"));
		@Test public void test_7762() { testValid(test_7762_query); }

		private static final SubtypeQuery test_7763_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("(any | {any})"));
		@Test public void test_7763() { testValid(test_7763_query); }

		private static final SubtypeQuery test_7764_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("(int | {any})"));
		@Test public void test_7764() { testValid(test_7764_query); }

		private static final SubtypeQuery test_7765_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("({any, any} | {any})"));
		@Test public void test_7765() { testValid(test_7765_query); }

		private static final SubtypeQuery test_7766_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("(any | {int})"));
		@Test public void test_7766() { testValid(test_7766_query); }

		private static final SubtypeQuery test_7767_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("((any | any) | {int})"));
		@Test public void test_7767() { testValid(test_7767_query); }

		private static final SubtypeQuery test_7768_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("(!int | !any)"));
		@Test public void test_7768() { testValid(test_7768_query); }

		private static final SubtypeQuery test_7769_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("({int, any} | !any)"));
		@Test public void test_7769() { testValid(test_7769_query); }

		private static final SubtypeQuery test_7770_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("((any | any) | !any)"));
		@Test public void test_7770() { testValid(test_7770_query); }

		private static final SubtypeQuery test_7771_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("({int} | !int)"));
		@Test public void test_7771() { testValid(test_7771_query); }

		private static final SubtypeQuery test_7772_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("(!any | !int)"));
		@Test public void test_7772() { testValid(test_7772_query); }

		private static final SubtypeQuery test_7773_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("(!int | {any, any})"));
		@Test public void test_7773() { testValid(test_7773_query); }

		private static final SubtypeQuery test_7774_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_7774() { testValid(test_7774_query); }

		private static final SubtypeQuery test_7775_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_7775() { testValid(test_7775_query); }

		private static final SubtypeQuery test_7776_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_7776() { testValid(test_7776_query); }

		private static final SubtypeQuery test_7777_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_7777() { testValid(test_7777_query); }

		private static final SubtypeQuery test_7778_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_7778() { testValid(test_7778_query); }

		private static final SubtypeQuery test_7779_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_7779() { testValid(test_7779_query); }

		private static final SubtypeQuery test_7780_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("({int} | (any | any))"));
		@Test public void test_7780() { testValid(test_7780_query); }

		private static final SubtypeQuery test_7781_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_7781() { testValid(test_7781_query); }

		private static final SubtypeQuery test_7782_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_7782() { testValid(test_7782_query); }

		private static final SubtypeQuery test_7783_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_7783() { testValid(test_7783_query); }

		private static final SubtypeQuery test_7784_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_7784() { testValid(test_7784_query); }

		private static final SubtypeQuery test_7785_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_7785() { testValid(test_7785_query); }

		private static final SubtypeQuery test_7786_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_7786() { testValid(test_7786_query); }

		private static final SubtypeQuery test_7787_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("(int | (any | int))"));
		@Test public void test_7787() { testValid(test_7787_query); }

		private static final SubtypeQuery test_7788_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_7788() { testValid(test_7788_query); }

		private static final SubtypeQuery test_7789_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_7789() { testValid(test_7789_query); }

		private static final SubtypeQuery test_7790_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_7790() { testValid(test_7790_query); }

		private static final SubtypeQuery test_7791_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_7791() { testValid(test_7791_query); }

		private static final SubtypeQuery test_7792_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("(!any | (int | int))"));
		@Test public void test_7792() { testValid(test_7792_query); }

		private static final SubtypeQuery test_7793_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_7793() { testValid(test_7793_query); }

		private static final SubtypeQuery test_7794_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("(int | (any & any))"));
		@Test public void test_7794() { testValid(test_7794_query); }

		private static final SubtypeQuery test_7795_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("(!any | (any & any))"));
		@Test public void test_7795() { testValid(test_7795_query); }

		private static final SubtypeQuery test_7796_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_7796() { testValid(test_7796_query); }

		private static final SubtypeQuery test_7797_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_7797() { testValid(test_7797_query); }

		private static final SubtypeQuery test_7798_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_7798() { testValid(test_7798_query); }

		private static final SubtypeQuery test_7799_query = createSubtypeQuery(parseWhiley("((any & any) | {int, int})"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_7799() { testValid(test_7799_query); }

		private static final SubtypeQuery test_7800_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("!int"));
		@Test public void test_7800() { testInvalid(test_7800_query); }

		private static final SubtypeQuery test_7801_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("(any | any)"));
		@Test public void test_7801() { testInvalid(test_7801_query); }

		private static final SubtypeQuery test_7802_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("(any & any)"));
		@Test public void test_7802() { testInvalid(test_7802_query); }

		private static final SubtypeQuery test_7803_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{{int, int}}"));
		@Test public void test_7803() { testInvalid(test_7803_query); }

		private static final SubtypeQuery test_7804_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("!(int | int)"));
		@Test public void test_7804() { testInvalid(test_7804_query); }

		private static final SubtypeQuery test_7805_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{{any, any}, any}"));
		@Test public void test_7805() { testInvalid(test_7805_query); }

		private static final SubtypeQuery test_7806_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{{any, int}, any}"));
		@Test public void test_7806() { testInvalid(test_7806_query); }

		private static final SubtypeQuery test_7807_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{{any}, int}"));
		@Test public void test_7807() { testInvalid(test_7807_query); }

		private static final SubtypeQuery test_7808_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{{any, any}, int}"));
		@Test public void test_7808() { testInvalid(test_7808_query); }

		private static final SubtypeQuery test_7809_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{(any | int), int}"));
		@Test public void test_7809() { testInvalid(test_7809_query); }

		private static final SubtypeQuery test_7810_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_7810() { testInvalid(test_7810_query); }

		private static final SubtypeQuery test_7811_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{!any, {int}}"));
		@Test public void test_7811() { testValid(test_7811_query); }

		private static final SubtypeQuery test_7812_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_7812() { testInvalid(test_7812_query); }

		private static final SubtypeQuery test_7813_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_7813() { testInvalid(test_7813_query); }

		private static final SubtypeQuery test_7814_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{any, !any}"));
		@Test public void test_7814() { testValid(test_7814_query); }

		private static final SubtypeQuery test_7815_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{{any}, !int}"));
		@Test public void test_7815() { testInvalid(test_7815_query); }

		private static final SubtypeQuery test_7816_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_7816() { testInvalid(test_7816_query); }

		private static final SubtypeQuery test_7817_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_7817() { testInvalid(test_7817_query); }

		private static final SubtypeQuery test_7818_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{(int & int), !int}"));
		@Test public void test_7818() { testInvalid(test_7818_query); }

		private static final SubtypeQuery test_7819_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_7819() { testInvalid(test_7819_query); }

		private static final SubtypeQuery test_7820_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_7820() { testInvalid(test_7820_query); }

		private static final SubtypeQuery test_7821_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_7821() { testInvalid(test_7821_query); }

		private static final SubtypeQuery test_7822_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_7822() { testInvalid(test_7822_query); }

		private static final SubtypeQuery test_7823_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_7823() { testInvalid(test_7823_query); }

		private static final SubtypeQuery test_7824_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_7824() { testInvalid(test_7824_query); }

		private static final SubtypeQuery test_7825_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_7825() { testInvalid(test_7825_query); }

		private static final SubtypeQuery test_7826_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{any, {any, int}}"));
		@Test public void test_7826() { testInvalid(test_7826_query); }

		private static final SubtypeQuery test_7827_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_7827() { testInvalid(test_7827_query); }

		private static final SubtypeQuery test_7828_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_7828() { testInvalid(test_7828_query); }

		private static final SubtypeQuery test_7829_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_7829() { testValid(test_7829_query); }

		private static final SubtypeQuery test_7830_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_7830() { testInvalid(test_7830_query); }

		private static final SubtypeQuery test_7831_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_7831() { testInvalid(test_7831_query); }

		private static final SubtypeQuery test_7832_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_7832() { testInvalid(test_7832_query); }

		private static final SubtypeQuery test_7833_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_7833() { testInvalid(test_7833_query); }

		private static final SubtypeQuery test_7834_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_7834() { testInvalid(test_7834_query); }

		private static final SubtypeQuery test_7835_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_7835() { testInvalid(test_7835_query); }

		private static final SubtypeQuery test_7836_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_7836() { testInvalid(test_7836_query); }

		private static final SubtypeQuery test_7837_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{int, (int | int)}"));
		@Test public void test_7837() { testValid(test_7837_query); }

		private static final SubtypeQuery test_7838_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_7838() { testInvalid(test_7838_query); }

		private static final SubtypeQuery test_7839_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{any, (any & any)}"));
		@Test public void test_7839() { testInvalid(test_7839_query); }

		private static final SubtypeQuery test_7840_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_7840() { testInvalid(test_7840_query); }

		private static final SubtypeQuery test_7841_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_7841() { testValid(test_7841_query); }

		private static final SubtypeQuery test_7842_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_7842() { testInvalid(test_7842_query); }

		private static final SubtypeQuery test_7843_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_7843() { testInvalid(test_7843_query); }

		private static final SubtypeQuery test_7844_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_7844() { testInvalid(test_7844_query); }

		private static final SubtypeQuery test_7845_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_7845() { testInvalid(test_7845_query); }

		private static final SubtypeQuery test_7846_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_7846() { testInvalid(test_7846_query); }

		private static final SubtypeQuery test_7847_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_7847() { testValid(test_7847_query); }

		private static final SubtypeQuery test_7848_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{any, (any & int)}"));
		@Test public void test_7848() { testInvalid(test_7848_query); }

		private static final SubtypeQuery test_7849_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_7849() { testInvalid(test_7849_query); }

		private static final SubtypeQuery test_7850_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_7850() { testInvalid(test_7850_query); }

		private static final SubtypeQuery test_7851_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_7851() { testInvalid(test_7851_query); }

		private static final SubtypeQuery test_7852_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{int, (int & int)}"));
		@Test public void test_7852() { testValid(test_7852_query); }

		private static final SubtypeQuery test_7853_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_7853() { testInvalid(test_7853_query); }

		private static final SubtypeQuery test_7854_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_7854() { testInvalid(test_7854_query); }

		private static final SubtypeQuery test_7855_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_7855() { testValid(test_7855_query); }

		private static final SubtypeQuery test_7856_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("(!any | any)"));
		@Test public void test_7856() { testInvalid(test_7856_query); }

		private static final SubtypeQuery test_7857_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("({int, any} | any)"));
		@Test public void test_7857() { testInvalid(test_7857_query); }

		private static final SubtypeQuery test_7858_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("({any, int} | any)"));
		@Test public void test_7858() { testInvalid(test_7858_query); }

		private static final SubtypeQuery test_7859_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("((int & int) | any)"));
		@Test public void test_7859() { testInvalid(test_7859_query); }

		private static final SubtypeQuery test_7860_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("({int, int} | int)"));
		@Test public void test_7860() { testValid(test_7860_query); }

		private static final SubtypeQuery test_7861_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("((any | any) | int)"));
		@Test public void test_7861() { testInvalid(test_7861_query); }

		private static final SubtypeQuery test_7862_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("((int | any) | int)"));
		@Test public void test_7862() { testInvalid(test_7862_query); }

		private static final SubtypeQuery test_7863_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("(any | {any})"));
		@Test public void test_7863() { testInvalid(test_7863_query); }

		private static final SubtypeQuery test_7864_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("(int | {any})"));
		@Test public void test_7864() { testInvalid(test_7864_query); }

		private static final SubtypeQuery test_7865_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("({any, any} | {any})"));
		@Test public void test_7865() { testInvalid(test_7865_query); }

		private static final SubtypeQuery test_7866_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("(any | {int})"));
		@Test public void test_7866() { testInvalid(test_7866_query); }

		private static final SubtypeQuery test_7867_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("((any | any) | {int})"));
		@Test public void test_7867() { testInvalid(test_7867_query); }

		private static final SubtypeQuery test_7868_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("(!int | !any)"));
		@Test public void test_7868() { testInvalid(test_7868_query); }

		private static final SubtypeQuery test_7869_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("({int, any} | !any)"));
		@Test public void test_7869() { testInvalid(test_7869_query); }

		private static final SubtypeQuery test_7870_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("((any | any) | !any)"));
		@Test public void test_7870() { testInvalid(test_7870_query); }

		private static final SubtypeQuery test_7871_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("({int} | !int)"));
		@Test public void test_7871() { testInvalid(test_7871_query); }

		private static final SubtypeQuery test_7872_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("(!any | !int)"));
		@Test public void test_7872() { testInvalid(test_7872_query); }

		private static final SubtypeQuery test_7873_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("(!int | {any, any})"));
		@Test public void test_7873() { testInvalid(test_7873_query); }

		private static final SubtypeQuery test_7874_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_7874() { testInvalid(test_7874_query); }

		private static final SubtypeQuery test_7875_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_7875() { testInvalid(test_7875_query); }

		private static final SubtypeQuery test_7876_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_7876() { testInvalid(test_7876_query); }

		private static final SubtypeQuery test_7877_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_7877() { testInvalid(test_7877_query); }

		private static final SubtypeQuery test_7878_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_7878() { testValid(test_7878_query); }

		private static final SubtypeQuery test_7879_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_7879() { testValid(test_7879_query); }

		private static final SubtypeQuery test_7880_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("({int} | (any | any))"));
		@Test public void test_7880() { testInvalid(test_7880_query); }

		private static final SubtypeQuery test_7881_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_7881() { testInvalid(test_7881_query); }

		private static final SubtypeQuery test_7882_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_7882() { testInvalid(test_7882_query); }

		private static final SubtypeQuery test_7883_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_7883() { testInvalid(test_7883_query); }

		private static final SubtypeQuery test_7884_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_7884() { testInvalid(test_7884_query); }

		private static final SubtypeQuery test_7885_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_7885() { testInvalid(test_7885_query); }

		private static final SubtypeQuery test_7886_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_7886() { testInvalid(test_7886_query); }

		private static final SubtypeQuery test_7887_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("(int | (any | int))"));
		@Test public void test_7887() { testInvalid(test_7887_query); }

		private static final SubtypeQuery test_7888_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_7888() { testInvalid(test_7888_query); }

		private static final SubtypeQuery test_7889_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_7889() { testInvalid(test_7889_query); }

		private static final SubtypeQuery test_7890_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_7890() { testInvalid(test_7890_query); }

		private static final SubtypeQuery test_7891_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_7891() { testInvalid(test_7891_query); }

		private static final SubtypeQuery test_7892_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("(!any | (int | int))"));
		@Test public void test_7892() { testValid(test_7892_query); }

		private static final SubtypeQuery test_7893_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_7893() { testInvalid(test_7893_query); }

		private static final SubtypeQuery test_7894_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("(int | (any & any))"));
		@Test public void test_7894() { testInvalid(test_7894_query); }

		private static final SubtypeQuery test_7895_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("(!any | (any & any))"));
		@Test public void test_7895() { testInvalid(test_7895_query); }

		private static final SubtypeQuery test_7896_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_7896() { testInvalid(test_7896_query); }

		private static final SubtypeQuery test_7897_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_7897() { testInvalid(test_7897_query); }

		private static final SubtypeQuery test_7898_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_7898() { testInvalid(test_7898_query); }

		private static final SubtypeQuery test_7899_query = createSubtypeQuery(parseWhiley("((int & any) | {int, int})"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_7899() { testInvalid(test_7899_query); }

		private static final SubtypeQuery test_7900_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("!int"));
		@Test public void test_7900() { testInvalid(test_7900_query); }

		private static final SubtypeQuery test_7901_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("(any | any)"));
		@Test public void test_7901() { testInvalid(test_7901_query); }

		private static final SubtypeQuery test_7902_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("(any & any)"));
		@Test public void test_7902() { testInvalid(test_7902_query); }

		private static final SubtypeQuery test_7903_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{{int, int}}"));
		@Test public void test_7903() { testInvalid(test_7903_query); }

		private static final SubtypeQuery test_7904_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("!(int | int)"));
		@Test public void test_7904() { testInvalid(test_7904_query); }

		private static final SubtypeQuery test_7905_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{{any, any}, any}"));
		@Test public void test_7905() { testInvalid(test_7905_query); }

		private static final SubtypeQuery test_7906_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{{any, int}, any}"));
		@Test public void test_7906() { testInvalid(test_7906_query); }

		private static final SubtypeQuery test_7907_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{{any}, int}"));
		@Test public void test_7907() { testInvalid(test_7907_query); }

		private static final SubtypeQuery test_7908_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{{any, any}, int}"));
		@Test public void test_7908() { testInvalid(test_7908_query); }

		private static final SubtypeQuery test_7909_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{(any | int), int}"));
		@Test public void test_7909() { testInvalid(test_7909_query); }

		private static final SubtypeQuery test_7910_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_7910() { testInvalid(test_7910_query); }

		private static final SubtypeQuery test_7911_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{!any, {int}}"));
		@Test public void test_7911() { testValid(test_7911_query); }

		private static final SubtypeQuery test_7912_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_7912() { testInvalid(test_7912_query); }

		private static final SubtypeQuery test_7913_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_7913() { testInvalid(test_7913_query); }

		private static final SubtypeQuery test_7914_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{any, !any}"));
		@Test public void test_7914() { testValid(test_7914_query); }

		private static final SubtypeQuery test_7915_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{{any}, !int}"));
		@Test public void test_7915() { testInvalid(test_7915_query); }

		private static final SubtypeQuery test_7916_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_7916() { testInvalid(test_7916_query); }

		private static final SubtypeQuery test_7917_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_7917() { testInvalid(test_7917_query); }

		private static final SubtypeQuery test_7918_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{(int & int), !int}"));
		@Test public void test_7918() { testInvalid(test_7918_query); }

		private static final SubtypeQuery test_7919_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_7919() { testInvalid(test_7919_query); }

		private static final SubtypeQuery test_7920_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_7920() { testInvalid(test_7920_query); }

		private static final SubtypeQuery test_7921_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_7921() { testInvalid(test_7921_query); }

		private static final SubtypeQuery test_7922_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_7922() { testInvalid(test_7922_query); }

		private static final SubtypeQuery test_7923_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_7923() { testInvalid(test_7923_query); }

		private static final SubtypeQuery test_7924_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_7924() { testInvalid(test_7924_query); }

		private static final SubtypeQuery test_7925_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_7925() { testInvalid(test_7925_query); }

		private static final SubtypeQuery test_7926_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{any, {any, int}}"));
		@Test public void test_7926() { testInvalid(test_7926_query); }

		private static final SubtypeQuery test_7927_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_7927() { testInvalid(test_7927_query); }

		private static final SubtypeQuery test_7928_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_7928() { testInvalid(test_7928_query); }

		private static final SubtypeQuery test_7929_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_7929() { testValid(test_7929_query); }

		private static final SubtypeQuery test_7930_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_7930() { testInvalid(test_7930_query); }

		private static final SubtypeQuery test_7931_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_7931() { testInvalid(test_7931_query); }

		private static final SubtypeQuery test_7932_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_7932() { testInvalid(test_7932_query); }

		private static final SubtypeQuery test_7933_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_7933() { testInvalid(test_7933_query); }

		private static final SubtypeQuery test_7934_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_7934() { testInvalid(test_7934_query); }

		private static final SubtypeQuery test_7935_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_7935() { testInvalid(test_7935_query); }

		private static final SubtypeQuery test_7936_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_7936() { testInvalid(test_7936_query); }

		private static final SubtypeQuery test_7937_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{int, (int | int)}"));
		@Test public void test_7937() { testValid(test_7937_query); }

		private static final SubtypeQuery test_7938_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_7938() { testInvalid(test_7938_query); }

		private static final SubtypeQuery test_7939_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{any, (any & any)}"));
		@Test public void test_7939() { testInvalid(test_7939_query); }

		private static final SubtypeQuery test_7940_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_7940() { testInvalid(test_7940_query); }

		private static final SubtypeQuery test_7941_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_7941() { testValid(test_7941_query); }

		private static final SubtypeQuery test_7942_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_7942() { testInvalid(test_7942_query); }

		private static final SubtypeQuery test_7943_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_7943() { testInvalid(test_7943_query); }

		private static final SubtypeQuery test_7944_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_7944() { testInvalid(test_7944_query); }

		private static final SubtypeQuery test_7945_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_7945() { testInvalid(test_7945_query); }

		private static final SubtypeQuery test_7946_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_7946() { testInvalid(test_7946_query); }

		private static final SubtypeQuery test_7947_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_7947() { testValid(test_7947_query); }

		private static final SubtypeQuery test_7948_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{any, (any & int)}"));
		@Test public void test_7948() { testInvalid(test_7948_query); }

		private static final SubtypeQuery test_7949_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_7949() { testInvalid(test_7949_query); }

		private static final SubtypeQuery test_7950_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_7950() { testInvalid(test_7950_query); }

		private static final SubtypeQuery test_7951_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_7951() { testInvalid(test_7951_query); }

		private static final SubtypeQuery test_7952_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{int, (int & int)}"));
		@Test public void test_7952() { testValid(test_7952_query); }

		private static final SubtypeQuery test_7953_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_7953() { testInvalid(test_7953_query); }

		private static final SubtypeQuery test_7954_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_7954() { testInvalid(test_7954_query); }

		private static final SubtypeQuery test_7955_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_7955() { testValid(test_7955_query); }

		private static final SubtypeQuery test_7956_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("(!any | any)"));
		@Test public void test_7956() { testInvalid(test_7956_query); }

		private static final SubtypeQuery test_7957_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("({int, any} | any)"));
		@Test public void test_7957() { testInvalid(test_7957_query); }

		private static final SubtypeQuery test_7958_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("({any, int} | any)"));
		@Test public void test_7958() { testInvalid(test_7958_query); }

		private static final SubtypeQuery test_7959_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("((int & int) | any)"));
		@Test public void test_7959() { testInvalid(test_7959_query); }

		private static final SubtypeQuery test_7960_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("({int, int} | int)"));
		@Test public void test_7960() { testValid(test_7960_query); }

		private static final SubtypeQuery test_7961_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("((any | any) | int)"));
		@Test public void test_7961() { testInvalid(test_7961_query); }

		private static final SubtypeQuery test_7962_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("((int | any) | int)"));
		@Test public void test_7962() { testInvalid(test_7962_query); }

		private static final SubtypeQuery test_7963_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("(any | {any})"));
		@Test public void test_7963() { testInvalid(test_7963_query); }

		private static final SubtypeQuery test_7964_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("(int | {any})"));
		@Test public void test_7964() { testInvalid(test_7964_query); }

		private static final SubtypeQuery test_7965_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("({any, any} | {any})"));
		@Test public void test_7965() { testInvalid(test_7965_query); }

		private static final SubtypeQuery test_7966_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("(any | {int})"));
		@Test public void test_7966() { testInvalid(test_7966_query); }

		private static final SubtypeQuery test_7967_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("((any | any) | {int})"));
		@Test public void test_7967() { testInvalid(test_7967_query); }

		private static final SubtypeQuery test_7968_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("(!int | !any)"));
		@Test public void test_7968() { testInvalid(test_7968_query); }

		private static final SubtypeQuery test_7969_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("({int, any} | !any)"));
		@Test public void test_7969() { testInvalid(test_7969_query); }

		private static final SubtypeQuery test_7970_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("((any | any) | !any)"));
		@Test public void test_7970() { testInvalid(test_7970_query); }

		private static final SubtypeQuery test_7971_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("({int} | !int)"));
		@Test public void test_7971() { testInvalid(test_7971_query); }

		private static final SubtypeQuery test_7972_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("(!any | !int)"));
		@Test public void test_7972() { testInvalid(test_7972_query); }

		private static final SubtypeQuery test_7973_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("(!int | {any, any})"));
		@Test public void test_7973() { testInvalid(test_7973_query); }

		private static final SubtypeQuery test_7974_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_7974() { testInvalid(test_7974_query); }

		private static final SubtypeQuery test_7975_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_7975() { testInvalid(test_7975_query); }

		private static final SubtypeQuery test_7976_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_7976() { testInvalid(test_7976_query); }

		private static final SubtypeQuery test_7977_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_7977() { testInvalid(test_7977_query); }

		private static final SubtypeQuery test_7978_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_7978() { testValid(test_7978_query); }

		private static final SubtypeQuery test_7979_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_7979() { testValid(test_7979_query); }

		private static final SubtypeQuery test_7980_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("({int} | (any | any))"));
		@Test public void test_7980() { testInvalid(test_7980_query); }

		private static final SubtypeQuery test_7981_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_7981() { testInvalid(test_7981_query); }

		private static final SubtypeQuery test_7982_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_7982() { testInvalid(test_7982_query); }

		private static final SubtypeQuery test_7983_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_7983() { testInvalid(test_7983_query); }

		private static final SubtypeQuery test_7984_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_7984() { testInvalid(test_7984_query); }

		private static final SubtypeQuery test_7985_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_7985() { testInvalid(test_7985_query); }

		private static final SubtypeQuery test_7986_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_7986() { testInvalid(test_7986_query); }

		private static final SubtypeQuery test_7987_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("(int | (any | int))"));
		@Test public void test_7987() { testInvalid(test_7987_query); }

		private static final SubtypeQuery test_7988_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_7988() { testInvalid(test_7988_query); }

		private static final SubtypeQuery test_7989_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_7989() { testInvalid(test_7989_query); }

		private static final SubtypeQuery test_7990_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_7990() { testInvalid(test_7990_query); }

		private static final SubtypeQuery test_7991_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_7991() { testInvalid(test_7991_query); }

		private static final SubtypeQuery test_7992_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("(!any | (int | int))"));
		@Test public void test_7992() { testValid(test_7992_query); }

		private static final SubtypeQuery test_7993_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_7993() { testInvalid(test_7993_query); }

		private static final SubtypeQuery test_7994_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("(int | (any & any))"));
		@Test public void test_7994() { testInvalid(test_7994_query); }

		private static final SubtypeQuery test_7995_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("(!any | (any & any))"));
		@Test public void test_7995() { testInvalid(test_7995_query); }

		private static final SubtypeQuery test_7996_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_7996() { testInvalid(test_7996_query); }

		private static final SubtypeQuery test_7997_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_7997() { testInvalid(test_7997_query); }

		private static final SubtypeQuery test_7998_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_7998() { testInvalid(test_7998_query); }

		private static final SubtypeQuery test_7999_query = createSubtypeQuery(parseWhiley("((any & int) | {int, int})"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_7999() { testInvalid(test_7999_query); }

	}
	public static class Part_8 {
		private static final SubtypeQuery test_8000_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("!int"));
		@Test public void test_8000() { testValid(test_8000_query); }

		private static final SubtypeQuery test_8001_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("(any | any)"));
		@Test public void test_8001() { testValid(test_8001_query); }

		private static final SubtypeQuery test_8002_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("(any & any)"));
		@Test public void test_8002() { testValid(test_8002_query); }

		private static final SubtypeQuery test_8003_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{{int, int}}"));
		@Test public void test_8003() { testValid(test_8003_query); }

		private static final SubtypeQuery test_8004_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("!(int | int)"));
		@Test public void test_8004() { testValid(test_8004_query); }

		private static final SubtypeQuery test_8005_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{{any, any}, any}"));
		@Test public void test_8005() { testValid(test_8005_query); }

		private static final SubtypeQuery test_8006_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{{any, int}, any}"));
		@Test public void test_8006() { testValid(test_8006_query); }

		private static final SubtypeQuery test_8007_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{{any}, int}"));
		@Test public void test_8007() { testValid(test_8007_query); }

		private static final SubtypeQuery test_8008_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{{any, any}, int}"));
		@Test public void test_8008() { testValid(test_8008_query); }

		private static final SubtypeQuery test_8009_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{(any | int), int}"));
		@Test public void test_8009() { testValid(test_8009_query); }

		private static final SubtypeQuery test_8010_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_8010() { testValid(test_8010_query); }

		private static final SubtypeQuery test_8011_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{!any, {int}}"));
		@Test public void test_8011() { testValid(test_8011_query); }

		private static final SubtypeQuery test_8012_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_8012() { testValid(test_8012_query); }

		private static final SubtypeQuery test_8013_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_8013() { testValid(test_8013_query); }

		private static final SubtypeQuery test_8014_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{any, !any}"));
		@Test public void test_8014() { testValid(test_8014_query); }

		private static final SubtypeQuery test_8015_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{{any}, !int}"));
		@Test public void test_8015() { testValid(test_8015_query); }

		private static final SubtypeQuery test_8016_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_8016() { testValid(test_8016_query); }

		private static final SubtypeQuery test_8017_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_8017() { testValid(test_8017_query); }

		private static final SubtypeQuery test_8018_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{(int & int), !int}"));
		@Test public void test_8018() { testValid(test_8018_query); }

		private static final SubtypeQuery test_8019_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_8019() { testValid(test_8019_query); }

		private static final SubtypeQuery test_8020_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_8020() { testValid(test_8020_query); }

		private static final SubtypeQuery test_8021_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_8021() { testValid(test_8021_query); }

		private static final SubtypeQuery test_8022_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_8022() { testValid(test_8022_query); }

		private static final SubtypeQuery test_8023_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_8023() { testValid(test_8023_query); }

		private static final SubtypeQuery test_8024_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_8024() { testValid(test_8024_query); }

		private static final SubtypeQuery test_8025_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_8025() { testValid(test_8025_query); }

		private static final SubtypeQuery test_8026_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{any, {any, int}}"));
		@Test public void test_8026() { testValid(test_8026_query); }

		private static final SubtypeQuery test_8027_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_8027() { testValid(test_8027_query); }

		private static final SubtypeQuery test_8028_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_8028() { testValid(test_8028_query); }

		private static final SubtypeQuery test_8029_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_8029() { testValid(test_8029_query); }

		private static final SubtypeQuery test_8030_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_8030() { testValid(test_8030_query); }

		private static final SubtypeQuery test_8031_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_8031() { testValid(test_8031_query); }

		private static final SubtypeQuery test_8032_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_8032() { testValid(test_8032_query); }

		private static final SubtypeQuery test_8033_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_8033() { testValid(test_8033_query); }

		private static final SubtypeQuery test_8034_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_8034() { testValid(test_8034_query); }

		private static final SubtypeQuery test_8035_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_8035() { testValid(test_8035_query); }

		private static final SubtypeQuery test_8036_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_8036() { testValid(test_8036_query); }

		private static final SubtypeQuery test_8037_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{int, (int | int)}"));
		@Test public void test_8037() { testValid(test_8037_query); }

		private static final SubtypeQuery test_8038_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_8038() { testValid(test_8038_query); }

		private static final SubtypeQuery test_8039_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{any, (any & any)}"));
		@Test public void test_8039() { testValid(test_8039_query); }

		private static final SubtypeQuery test_8040_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_8040() { testValid(test_8040_query); }

		private static final SubtypeQuery test_8041_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_8041() { testValid(test_8041_query); }

		private static final SubtypeQuery test_8042_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_8042() { testValid(test_8042_query); }

		private static final SubtypeQuery test_8043_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_8043() { testValid(test_8043_query); }

		private static final SubtypeQuery test_8044_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_8044() { testValid(test_8044_query); }

		private static final SubtypeQuery test_8045_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_8045() { testValid(test_8045_query); }

		private static final SubtypeQuery test_8046_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_8046() { testValid(test_8046_query); }

		private static final SubtypeQuery test_8047_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_8047() { testValid(test_8047_query); }

		private static final SubtypeQuery test_8048_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{any, (any & int)}"));
		@Test public void test_8048() { testValid(test_8048_query); }

		private static final SubtypeQuery test_8049_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_8049() { testValid(test_8049_query); }

		private static final SubtypeQuery test_8050_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_8050() { testValid(test_8050_query); }

		private static final SubtypeQuery test_8051_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_8051() { testValid(test_8051_query); }

		private static final SubtypeQuery test_8052_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{int, (int & int)}"));
		@Test public void test_8052() { testValid(test_8052_query); }

		private static final SubtypeQuery test_8053_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_8053() { testValid(test_8053_query); }

		private static final SubtypeQuery test_8054_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_8054() { testValid(test_8054_query); }

		private static final SubtypeQuery test_8055_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_8055() { testValid(test_8055_query); }

		private static final SubtypeQuery test_8056_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("(!any | any)"));
		@Test public void test_8056() { testValid(test_8056_query); }

		private static final SubtypeQuery test_8057_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("({int, any} | any)"));
		@Test public void test_8057() { testValid(test_8057_query); }

		private static final SubtypeQuery test_8058_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("({any, int} | any)"));
		@Test public void test_8058() { testValid(test_8058_query); }

		private static final SubtypeQuery test_8059_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("((int & int) | any)"));
		@Test public void test_8059() { testValid(test_8059_query); }

		private static final SubtypeQuery test_8060_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("({int, int} | int)"));
		@Test public void test_8060() { testValid(test_8060_query); }

		private static final SubtypeQuery test_8061_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("((any | any) | int)"));
		@Test public void test_8061() { testValid(test_8061_query); }

		private static final SubtypeQuery test_8062_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("((int | any) | int)"));
		@Test public void test_8062() { testValid(test_8062_query); }

		private static final SubtypeQuery test_8063_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("(any | {any})"));
		@Test public void test_8063() { testValid(test_8063_query); }

		private static final SubtypeQuery test_8064_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("(int | {any})"));
		@Test public void test_8064() { testValid(test_8064_query); }

		private static final SubtypeQuery test_8065_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("({any, any} | {any})"));
		@Test public void test_8065() { testValid(test_8065_query); }

		private static final SubtypeQuery test_8066_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("(any | {int})"));
		@Test public void test_8066() { testValid(test_8066_query); }

		private static final SubtypeQuery test_8067_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("((any | any) | {int})"));
		@Test public void test_8067() { testValid(test_8067_query); }

		private static final SubtypeQuery test_8068_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("(!int | !any)"));
		@Test public void test_8068() { testValid(test_8068_query); }

		private static final SubtypeQuery test_8069_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("({int, any} | !any)"));
		@Test public void test_8069() { testValid(test_8069_query); }

		private static final SubtypeQuery test_8070_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("((any | any) | !any)"));
		@Test public void test_8070() { testValid(test_8070_query); }

		private static final SubtypeQuery test_8071_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("({int} | !int)"));
		@Test public void test_8071() { testValid(test_8071_query); }

		private static final SubtypeQuery test_8072_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("(!any | !int)"));
		@Test public void test_8072() { testValid(test_8072_query); }

		private static final SubtypeQuery test_8073_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("(!int | {any, any})"));
		@Test public void test_8073() { testValid(test_8073_query); }

		private static final SubtypeQuery test_8074_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_8074() { testValid(test_8074_query); }

		private static final SubtypeQuery test_8075_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_8075() { testValid(test_8075_query); }

		private static final SubtypeQuery test_8076_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_8076() { testValid(test_8076_query); }

		private static final SubtypeQuery test_8077_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_8077() { testValid(test_8077_query); }

		private static final SubtypeQuery test_8078_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_8078() { testValid(test_8078_query); }

		private static final SubtypeQuery test_8079_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_8079() { testValid(test_8079_query); }

		private static final SubtypeQuery test_8080_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("({int} | (any | any))"));
		@Test public void test_8080() { testValid(test_8080_query); }

		private static final SubtypeQuery test_8081_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_8081() { testValid(test_8081_query); }

		private static final SubtypeQuery test_8082_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_8082() { testValid(test_8082_query); }

		private static final SubtypeQuery test_8083_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_8083() { testValid(test_8083_query); }

		private static final SubtypeQuery test_8084_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_8084() { testValid(test_8084_query); }

		private static final SubtypeQuery test_8085_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_8085() { testValid(test_8085_query); }

		private static final SubtypeQuery test_8086_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_8086() { testValid(test_8086_query); }

		private static final SubtypeQuery test_8087_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("(int | (any | int))"));
		@Test public void test_8087() { testValid(test_8087_query); }

		private static final SubtypeQuery test_8088_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_8088() { testValid(test_8088_query); }

		private static final SubtypeQuery test_8089_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_8089() { testValid(test_8089_query); }

		private static final SubtypeQuery test_8090_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_8090() { testValid(test_8090_query); }

		private static final SubtypeQuery test_8091_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_8091() { testValid(test_8091_query); }

		private static final SubtypeQuery test_8092_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("(!any | (int | int))"));
		@Test public void test_8092() { testValid(test_8092_query); }

		private static final SubtypeQuery test_8093_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_8093() { testValid(test_8093_query); }

		private static final SubtypeQuery test_8094_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("(int | (any & any))"));
		@Test public void test_8094() { testValid(test_8094_query); }

		private static final SubtypeQuery test_8095_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("(!any | (any & any))"));
		@Test public void test_8095() { testValid(test_8095_query); }

		private static final SubtypeQuery test_8096_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_8096() { testValid(test_8096_query); }

		private static final SubtypeQuery test_8097_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_8097() { testValid(test_8097_query); }

		private static final SubtypeQuery test_8098_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_8098() { testValid(test_8098_query); }

		private static final SubtypeQuery test_8099_query = createSubtypeQuery(parseWhiley("({int} | (any | any))"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_8099() { testValid(test_8099_query); }

		private static final SubtypeQuery test_8100_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("!int"));
		@Test public void test_8100() { testValid(test_8100_query); }

		private static final SubtypeQuery test_8101_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("(any | any)"));
		@Test public void test_8101() { testValid(test_8101_query); }

		private static final SubtypeQuery test_8102_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("(any & any)"));
		@Test public void test_8102() { testValid(test_8102_query); }

		private static final SubtypeQuery test_8103_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{{int, int}}"));
		@Test public void test_8103() { testValid(test_8103_query); }

		private static final SubtypeQuery test_8104_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("!(int | int)"));
		@Test public void test_8104() { testValid(test_8104_query); }

		private static final SubtypeQuery test_8105_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{{any, any}, any}"));
		@Test public void test_8105() { testValid(test_8105_query); }

		private static final SubtypeQuery test_8106_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{{any, int}, any}"));
		@Test public void test_8106() { testValid(test_8106_query); }

		private static final SubtypeQuery test_8107_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{{any}, int}"));
		@Test public void test_8107() { testValid(test_8107_query); }

		private static final SubtypeQuery test_8108_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{{any, any}, int}"));
		@Test public void test_8108() { testValid(test_8108_query); }

		private static final SubtypeQuery test_8109_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{(any | int), int}"));
		@Test public void test_8109() { testValid(test_8109_query); }

		private static final SubtypeQuery test_8110_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_8110() { testValid(test_8110_query); }

		private static final SubtypeQuery test_8111_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{!any, {int}}"));
		@Test public void test_8111() { testValid(test_8111_query); }

		private static final SubtypeQuery test_8112_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_8112() { testValid(test_8112_query); }

		private static final SubtypeQuery test_8113_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_8113() { testValid(test_8113_query); }

		private static final SubtypeQuery test_8114_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{any, !any}"));
		@Test public void test_8114() { testValid(test_8114_query); }

		private static final SubtypeQuery test_8115_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{{any}, !int}"));
		@Test public void test_8115() { testValid(test_8115_query); }

		private static final SubtypeQuery test_8116_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_8116() { testValid(test_8116_query); }

		private static final SubtypeQuery test_8117_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_8117() { testValid(test_8117_query); }

		private static final SubtypeQuery test_8118_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{(int & int), !int}"));
		@Test public void test_8118() { testValid(test_8118_query); }

		private static final SubtypeQuery test_8119_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_8119() { testValid(test_8119_query); }

		private static final SubtypeQuery test_8120_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_8120() { testValid(test_8120_query); }

		private static final SubtypeQuery test_8121_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_8121() { testValid(test_8121_query); }

		private static final SubtypeQuery test_8122_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_8122() { testValid(test_8122_query); }

		private static final SubtypeQuery test_8123_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_8123() { testValid(test_8123_query); }

		private static final SubtypeQuery test_8124_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_8124() { testValid(test_8124_query); }

		private static final SubtypeQuery test_8125_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_8125() { testValid(test_8125_query); }

		private static final SubtypeQuery test_8126_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{any, {any, int}}"));
		@Test public void test_8126() { testValid(test_8126_query); }

		private static final SubtypeQuery test_8127_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_8127() { testValid(test_8127_query); }

		private static final SubtypeQuery test_8128_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_8128() { testValid(test_8128_query); }

		private static final SubtypeQuery test_8129_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_8129() { testValid(test_8129_query); }

		private static final SubtypeQuery test_8130_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_8130() { testValid(test_8130_query); }

		private static final SubtypeQuery test_8131_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_8131() { testValid(test_8131_query); }

		private static final SubtypeQuery test_8132_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_8132() { testValid(test_8132_query); }

		private static final SubtypeQuery test_8133_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_8133() { testValid(test_8133_query); }

		private static final SubtypeQuery test_8134_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_8134() { testValid(test_8134_query); }

		private static final SubtypeQuery test_8135_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_8135() { testValid(test_8135_query); }

		private static final SubtypeQuery test_8136_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_8136() { testValid(test_8136_query); }

		private static final SubtypeQuery test_8137_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{int, (int | int)}"));
		@Test public void test_8137() { testValid(test_8137_query); }

		private static final SubtypeQuery test_8138_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_8138() { testValid(test_8138_query); }

		private static final SubtypeQuery test_8139_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{any, (any & any)}"));
		@Test public void test_8139() { testValid(test_8139_query); }

		private static final SubtypeQuery test_8140_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_8140() { testValid(test_8140_query); }

		private static final SubtypeQuery test_8141_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_8141() { testValid(test_8141_query); }

		private static final SubtypeQuery test_8142_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_8142() { testValid(test_8142_query); }

		private static final SubtypeQuery test_8143_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_8143() { testValid(test_8143_query); }

		private static final SubtypeQuery test_8144_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_8144() { testValid(test_8144_query); }

		private static final SubtypeQuery test_8145_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_8145() { testValid(test_8145_query); }

		private static final SubtypeQuery test_8146_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_8146() { testValid(test_8146_query); }

		private static final SubtypeQuery test_8147_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_8147() { testValid(test_8147_query); }

		private static final SubtypeQuery test_8148_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{any, (any & int)}"));
		@Test public void test_8148() { testValid(test_8148_query); }

		private static final SubtypeQuery test_8149_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_8149() { testValid(test_8149_query); }

		private static final SubtypeQuery test_8150_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_8150() { testValid(test_8150_query); }

		private static final SubtypeQuery test_8151_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_8151() { testValid(test_8151_query); }

		private static final SubtypeQuery test_8152_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{int, (int & int)}"));
		@Test public void test_8152() { testValid(test_8152_query); }

		private static final SubtypeQuery test_8153_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_8153() { testValid(test_8153_query); }

		private static final SubtypeQuery test_8154_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_8154() { testValid(test_8154_query); }

		private static final SubtypeQuery test_8155_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_8155() { testValid(test_8155_query); }

		private static final SubtypeQuery test_8156_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("(!any | any)"));
		@Test public void test_8156() { testValid(test_8156_query); }

		private static final SubtypeQuery test_8157_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("({int, any} | any)"));
		@Test public void test_8157() { testValid(test_8157_query); }

		private static final SubtypeQuery test_8158_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("({any, int} | any)"));
		@Test public void test_8158() { testValid(test_8158_query); }

		private static final SubtypeQuery test_8159_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("((int & int) | any)"));
		@Test public void test_8159() { testValid(test_8159_query); }

		private static final SubtypeQuery test_8160_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("({int, int} | int)"));
		@Test public void test_8160() { testValid(test_8160_query); }

		private static final SubtypeQuery test_8161_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("((any | any) | int)"));
		@Test public void test_8161() { testValid(test_8161_query); }

		private static final SubtypeQuery test_8162_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("((int | any) | int)"));
		@Test public void test_8162() { testValid(test_8162_query); }

		private static final SubtypeQuery test_8163_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("(any | {any})"));
		@Test public void test_8163() { testValid(test_8163_query); }

		private static final SubtypeQuery test_8164_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("(int | {any})"));
		@Test public void test_8164() { testValid(test_8164_query); }

		private static final SubtypeQuery test_8165_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("({any, any} | {any})"));
		@Test public void test_8165() { testValid(test_8165_query); }

		private static final SubtypeQuery test_8166_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("(any | {int})"));
		@Test public void test_8166() { testValid(test_8166_query); }

		private static final SubtypeQuery test_8167_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("((any | any) | {int})"));
		@Test public void test_8167() { testValid(test_8167_query); }

		private static final SubtypeQuery test_8168_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("(!int | !any)"));
		@Test public void test_8168() { testValid(test_8168_query); }

		private static final SubtypeQuery test_8169_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("({int, any} | !any)"));
		@Test public void test_8169() { testValid(test_8169_query); }

		private static final SubtypeQuery test_8170_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("((any | any) | !any)"));
		@Test public void test_8170() { testValid(test_8170_query); }

		private static final SubtypeQuery test_8171_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("({int} | !int)"));
		@Test public void test_8171() { testValid(test_8171_query); }

		private static final SubtypeQuery test_8172_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("(!any | !int)"));
		@Test public void test_8172() { testValid(test_8172_query); }

		private static final SubtypeQuery test_8173_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("(!int | {any, any})"));
		@Test public void test_8173() { testValid(test_8173_query); }

		private static final SubtypeQuery test_8174_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_8174() { testValid(test_8174_query); }

		private static final SubtypeQuery test_8175_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_8175() { testValid(test_8175_query); }

		private static final SubtypeQuery test_8176_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_8176() { testValid(test_8176_query); }

		private static final SubtypeQuery test_8177_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_8177() { testValid(test_8177_query); }

		private static final SubtypeQuery test_8178_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_8178() { testValid(test_8178_query); }

		private static final SubtypeQuery test_8179_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_8179() { testValid(test_8179_query); }

		private static final SubtypeQuery test_8180_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("({int} | (any | any))"));
		@Test public void test_8180() { testValid(test_8180_query); }

		private static final SubtypeQuery test_8181_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_8181() { testValid(test_8181_query); }

		private static final SubtypeQuery test_8182_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_8182() { testValid(test_8182_query); }

		private static final SubtypeQuery test_8183_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_8183() { testValid(test_8183_query); }

		private static final SubtypeQuery test_8184_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_8184() { testValid(test_8184_query); }

		private static final SubtypeQuery test_8185_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_8185() { testValid(test_8185_query); }

		private static final SubtypeQuery test_8186_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_8186() { testValid(test_8186_query); }

		private static final SubtypeQuery test_8187_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("(int | (any | int))"));
		@Test public void test_8187() { testValid(test_8187_query); }

		private static final SubtypeQuery test_8188_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_8188() { testValid(test_8188_query); }

		private static final SubtypeQuery test_8189_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_8189() { testValid(test_8189_query); }

		private static final SubtypeQuery test_8190_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_8190() { testValid(test_8190_query); }

		private static final SubtypeQuery test_8191_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_8191() { testValid(test_8191_query); }

		private static final SubtypeQuery test_8192_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("(!any | (int | int))"));
		@Test public void test_8192() { testValid(test_8192_query); }

		private static final SubtypeQuery test_8193_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_8193() { testValid(test_8193_query); }

		private static final SubtypeQuery test_8194_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("(int | (any & any))"));
		@Test public void test_8194() { testValid(test_8194_query); }

		private static final SubtypeQuery test_8195_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("(!any | (any & any))"));
		@Test public void test_8195() { testValid(test_8195_query); }

		private static final SubtypeQuery test_8196_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_8196() { testValid(test_8196_query); }

		private static final SubtypeQuery test_8197_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_8197() { testValid(test_8197_query); }

		private static final SubtypeQuery test_8198_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_8198() { testValid(test_8198_query); }

		private static final SubtypeQuery test_8199_query = createSubtypeQuery(parseWhiley("({any, int} | (any | any))"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_8199() { testValid(test_8199_query); }

		private static final SubtypeQuery test_8200_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("!int"));
		@Test public void test_8200() { testValid(test_8200_query); }

		private static final SubtypeQuery test_8201_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("(any | any)"));
		@Test public void test_8201() { testValid(test_8201_query); }

		private static final SubtypeQuery test_8202_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("(any & any)"));
		@Test public void test_8202() { testValid(test_8202_query); }

		private static final SubtypeQuery test_8203_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{{int, int}}"));
		@Test public void test_8203() { testValid(test_8203_query); }

		private static final SubtypeQuery test_8204_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("!(int | int)"));
		@Test public void test_8204() { testValid(test_8204_query); }

		private static final SubtypeQuery test_8205_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{{any, any}, any}"));
		@Test public void test_8205() { testValid(test_8205_query); }

		private static final SubtypeQuery test_8206_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{{any, int}, any}"));
		@Test public void test_8206() { testValid(test_8206_query); }

		private static final SubtypeQuery test_8207_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{{any}, int}"));
		@Test public void test_8207() { testValid(test_8207_query); }

		private static final SubtypeQuery test_8208_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{{any, any}, int}"));
		@Test public void test_8208() { testValid(test_8208_query); }

		private static final SubtypeQuery test_8209_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{(any | int), int}"));
		@Test public void test_8209() { testValid(test_8209_query); }

		private static final SubtypeQuery test_8210_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_8210() { testValid(test_8210_query); }

		private static final SubtypeQuery test_8211_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{!any, {int}}"));
		@Test public void test_8211() { testValid(test_8211_query); }

		private static final SubtypeQuery test_8212_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_8212() { testValid(test_8212_query); }

		private static final SubtypeQuery test_8213_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_8213() { testValid(test_8213_query); }

		private static final SubtypeQuery test_8214_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{any, !any}"));
		@Test public void test_8214() { testValid(test_8214_query); }

		private static final SubtypeQuery test_8215_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{{any}, !int}"));
		@Test public void test_8215() { testValid(test_8215_query); }

		private static final SubtypeQuery test_8216_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_8216() { testValid(test_8216_query); }

		private static final SubtypeQuery test_8217_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_8217() { testValid(test_8217_query); }

		private static final SubtypeQuery test_8218_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{(int & int), !int}"));
		@Test public void test_8218() { testValid(test_8218_query); }

		private static final SubtypeQuery test_8219_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_8219() { testValid(test_8219_query); }

		private static final SubtypeQuery test_8220_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_8220() { testValid(test_8220_query); }

		private static final SubtypeQuery test_8221_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_8221() { testValid(test_8221_query); }

		private static final SubtypeQuery test_8222_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_8222() { testValid(test_8222_query); }

		private static final SubtypeQuery test_8223_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_8223() { testValid(test_8223_query); }

		private static final SubtypeQuery test_8224_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_8224() { testValid(test_8224_query); }

		private static final SubtypeQuery test_8225_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_8225() { testValid(test_8225_query); }

		private static final SubtypeQuery test_8226_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{any, {any, int}}"));
		@Test public void test_8226() { testValid(test_8226_query); }

		private static final SubtypeQuery test_8227_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_8227() { testValid(test_8227_query); }

		private static final SubtypeQuery test_8228_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_8228() { testValid(test_8228_query); }

		private static final SubtypeQuery test_8229_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_8229() { testValid(test_8229_query); }

		private static final SubtypeQuery test_8230_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_8230() { testValid(test_8230_query); }

		private static final SubtypeQuery test_8231_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_8231() { testValid(test_8231_query); }

		private static final SubtypeQuery test_8232_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_8232() { testValid(test_8232_query); }

		private static final SubtypeQuery test_8233_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_8233() { testValid(test_8233_query); }

		private static final SubtypeQuery test_8234_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_8234() { testValid(test_8234_query); }

		private static final SubtypeQuery test_8235_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_8235() { testValid(test_8235_query); }

		private static final SubtypeQuery test_8236_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_8236() { testValid(test_8236_query); }

		private static final SubtypeQuery test_8237_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{int, (int | int)}"));
		@Test public void test_8237() { testValid(test_8237_query); }

		private static final SubtypeQuery test_8238_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_8238() { testValid(test_8238_query); }

		private static final SubtypeQuery test_8239_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{any, (any & any)}"));
		@Test public void test_8239() { testValid(test_8239_query); }

		private static final SubtypeQuery test_8240_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_8240() { testValid(test_8240_query); }

		private static final SubtypeQuery test_8241_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_8241() { testValid(test_8241_query); }

		private static final SubtypeQuery test_8242_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_8242() { testValid(test_8242_query); }

		private static final SubtypeQuery test_8243_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_8243() { testValid(test_8243_query); }

		private static final SubtypeQuery test_8244_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_8244() { testValid(test_8244_query); }

		private static final SubtypeQuery test_8245_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_8245() { testValid(test_8245_query); }

		private static final SubtypeQuery test_8246_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_8246() { testValid(test_8246_query); }

		private static final SubtypeQuery test_8247_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_8247() { testValid(test_8247_query); }

		private static final SubtypeQuery test_8248_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{any, (any & int)}"));
		@Test public void test_8248() { testValid(test_8248_query); }

		private static final SubtypeQuery test_8249_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_8249() { testValid(test_8249_query); }

		private static final SubtypeQuery test_8250_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_8250() { testValid(test_8250_query); }

		private static final SubtypeQuery test_8251_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_8251() { testValid(test_8251_query); }

		private static final SubtypeQuery test_8252_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{int, (int & int)}"));
		@Test public void test_8252() { testValid(test_8252_query); }

		private static final SubtypeQuery test_8253_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_8253() { testValid(test_8253_query); }

		private static final SubtypeQuery test_8254_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_8254() { testValid(test_8254_query); }

		private static final SubtypeQuery test_8255_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_8255() { testValid(test_8255_query); }

		private static final SubtypeQuery test_8256_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("(!any | any)"));
		@Test public void test_8256() { testValid(test_8256_query); }

		private static final SubtypeQuery test_8257_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("({int, any} | any)"));
		@Test public void test_8257() { testValid(test_8257_query); }

		private static final SubtypeQuery test_8258_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("({any, int} | any)"));
		@Test public void test_8258() { testValid(test_8258_query); }

		private static final SubtypeQuery test_8259_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("((int & int) | any)"));
		@Test public void test_8259() { testValid(test_8259_query); }

		private static final SubtypeQuery test_8260_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("({int, int} | int)"));
		@Test public void test_8260() { testValid(test_8260_query); }

		private static final SubtypeQuery test_8261_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("((any | any) | int)"));
		@Test public void test_8261() { testValid(test_8261_query); }

		private static final SubtypeQuery test_8262_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("((int | any) | int)"));
		@Test public void test_8262() { testValid(test_8262_query); }

		private static final SubtypeQuery test_8263_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("(any | {any})"));
		@Test public void test_8263() { testValid(test_8263_query); }

		private static final SubtypeQuery test_8264_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("(int | {any})"));
		@Test public void test_8264() { testValid(test_8264_query); }

		private static final SubtypeQuery test_8265_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("({any, any} | {any})"));
		@Test public void test_8265() { testValid(test_8265_query); }

		private static final SubtypeQuery test_8266_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("(any | {int})"));
		@Test public void test_8266() { testValid(test_8266_query); }

		private static final SubtypeQuery test_8267_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("((any | any) | {int})"));
		@Test public void test_8267() { testValid(test_8267_query); }

		private static final SubtypeQuery test_8268_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("(!int | !any)"));
		@Test public void test_8268() { testValid(test_8268_query); }

		private static final SubtypeQuery test_8269_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("({int, any} | !any)"));
		@Test public void test_8269() { testValid(test_8269_query); }

		private static final SubtypeQuery test_8270_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("((any | any) | !any)"));
		@Test public void test_8270() { testValid(test_8270_query); }

		private static final SubtypeQuery test_8271_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("({int} | !int)"));
		@Test public void test_8271() { testValid(test_8271_query); }

		private static final SubtypeQuery test_8272_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("(!any | !int)"));
		@Test public void test_8272() { testValid(test_8272_query); }

		private static final SubtypeQuery test_8273_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("(!int | {any, any})"));
		@Test public void test_8273() { testValid(test_8273_query); }

		private static final SubtypeQuery test_8274_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_8274() { testValid(test_8274_query); }

		private static final SubtypeQuery test_8275_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_8275() { testValid(test_8275_query); }

		private static final SubtypeQuery test_8276_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_8276() { testValid(test_8276_query); }

		private static final SubtypeQuery test_8277_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_8277() { testValid(test_8277_query); }

		private static final SubtypeQuery test_8278_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_8278() { testValid(test_8278_query); }

		private static final SubtypeQuery test_8279_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_8279() { testValid(test_8279_query); }

		private static final SubtypeQuery test_8280_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("({int} | (any | any))"));
		@Test public void test_8280() { testValid(test_8280_query); }

		private static final SubtypeQuery test_8281_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_8281() { testValid(test_8281_query); }

		private static final SubtypeQuery test_8282_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_8282() { testValid(test_8282_query); }

		private static final SubtypeQuery test_8283_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_8283() { testValid(test_8283_query); }

		private static final SubtypeQuery test_8284_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_8284() { testValid(test_8284_query); }

		private static final SubtypeQuery test_8285_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_8285() { testValid(test_8285_query); }

		private static final SubtypeQuery test_8286_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_8286() { testValid(test_8286_query); }

		private static final SubtypeQuery test_8287_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("(int | (any | int))"));
		@Test public void test_8287() { testValid(test_8287_query); }

		private static final SubtypeQuery test_8288_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_8288() { testValid(test_8288_query); }

		private static final SubtypeQuery test_8289_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_8289() { testValid(test_8289_query); }

		private static final SubtypeQuery test_8290_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_8290() { testValid(test_8290_query); }

		private static final SubtypeQuery test_8291_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_8291() { testValid(test_8291_query); }

		private static final SubtypeQuery test_8292_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("(!any | (int | int))"));
		@Test public void test_8292() { testValid(test_8292_query); }

		private static final SubtypeQuery test_8293_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_8293() { testValid(test_8293_query); }

		private static final SubtypeQuery test_8294_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("(int | (any & any))"));
		@Test public void test_8294() { testValid(test_8294_query); }

		private static final SubtypeQuery test_8295_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("(!any | (any & any))"));
		@Test public void test_8295() { testValid(test_8295_query); }

		private static final SubtypeQuery test_8296_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_8296() { testValid(test_8296_query); }

		private static final SubtypeQuery test_8297_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_8297() { testValid(test_8297_query); }

		private static final SubtypeQuery test_8298_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_8298() { testValid(test_8298_query); }

		private static final SubtypeQuery test_8299_query = createSubtypeQuery(parseWhiley("((any | any) | (any | any))"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_8299() { testValid(test_8299_query); }

		private static final SubtypeQuery test_8300_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("!int"));
		@Test public void test_8300() { testValid(test_8300_query); }

		private static final SubtypeQuery test_8301_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("(any | any)"));
		@Test public void test_8301() { testValid(test_8301_query); }

		private static final SubtypeQuery test_8302_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("(any & any)"));
		@Test public void test_8302() { testValid(test_8302_query); }

		private static final SubtypeQuery test_8303_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{{int, int}}"));
		@Test public void test_8303() { testValid(test_8303_query); }

		private static final SubtypeQuery test_8304_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("!(int | int)"));
		@Test public void test_8304() { testValid(test_8304_query); }

		private static final SubtypeQuery test_8305_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{{any, any}, any}"));
		@Test public void test_8305() { testValid(test_8305_query); }

		private static final SubtypeQuery test_8306_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{{any, int}, any}"));
		@Test public void test_8306() { testValid(test_8306_query); }

		private static final SubtypeQuery test_8307_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{{any}, int}"));
		@Test public void test_8307() { testValid(test_8307_query); }

		private static final SubtypeQuery test_8308_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{{any, any}, int}"));
		@Test public void test_8308() { testValid(test_8308_query); }

		private static final SubtypeQuery test_8309_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{(any | int), int}"));
		@Test public void test_8309() { testValid(test_8309_query); }

		private static final SubtypeQuery test_8310_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_8310() { testValid(test_8310_query); }

		private static final SubtypeQuery test_8311_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{!any, {int}}"));
		@Test public void test_8311() { testValid(test_8311_query); }

		private static final SubtypeQuery test_8312_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_8312() { testValid(test_8312_query); }

		private static final SubtypeQuery test_8313_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_8313() { testValid(test_8313_query); }

		private static final SubtypeQuery test_8314_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{any, !any}"));
		@Test public void test_8314() { testValid(test_8314_query); }

		private static final SubtypeQuery test_8315_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{{any}, !int}"));
		@Test public void test_8315() { testValid(test_8315_query); }

		private static final SubtypeQuery test_8316_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_8316() { testValid(test_8316_query); }

		private static final SubtypeQuery test_8317_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_8317() { testValid(test_8317_query); }

		private static final SubtypeQuery test_8318_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{(int & int), !int}"));
		@Test public void test_8318() { testValid(test_8318_query); }

		private static final SubtypeQuery test_8319_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_8319() { testValid(test_8319_query); }

		private static final SubtypeQuery test_8320_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_8320() { testValid(test_8320_query); }

		private static final SubtypeQuery test_8321_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_8321() { testValid(test_8321_query); }

		private static final SubtypeQuery test_8322_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_8322() { testValid(test_8322_query); }

		private static final SubtypeQuery test_8323_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_8323() { testValid(test_8323_query); }

		private static final SubtypeQuery test_8324_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_8324() { testValid(test_8324_query); }

		private static final SubtypeQuery test_8325_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_8325() { testValid(test_8325_query); }

		private static final SubtypeQuery test_8326_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{any, {any, int}}"));
		@Test public void test_8326() { testValid(test_8326_query); }

		private static final SubtypeQuery test_8327_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_8327() { testValid(test_8327_query); }

		private static final SubtypeQuery test_8328_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_8328() { testValid(test_8328_query); }

		private static final SubtypeQuery test_8329_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_8329() { testValid(test_8329_query); }

		private static final SubtypeQuery test_8330_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_8330() { testValid(test_8330_query); }

		private static final SubtypeQuery test_8331_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_8331() { testValid(test_8331_query); }

		private static final SubtypeQuery test_8332_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_8332() { testValid(test_8332_query); }

		private static final SubtypeQuery test_8333_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_8333() { testValid(test_8333_query); }

		private static final SubtypeQuery test_8334_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_8334() { testValid(test_8334_query); }

		private static final SubtypeQuery test_8335_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_8335() { testValid(test_8335_query); }

		private static final SubtypeQuery test_8336_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_8336() { testValid(test_8336_query); }

		private static final SubtypeQuery test_8337_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{int, (int | int)}"));
		@Test public void test_8337() { testValid(test_8337_query); }

		private static final SubtypeQuery test_8338_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_8338() { testValid(test_8338_query); }

		private static final SubtypeQuery test_8339_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{any, (any & any)}"));
		@Test public void test_8339() { testValid(test_8339_query); }

		private static final SubtypeQuery test_8340_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_8340() { testValid(test_8340_query); }

		private static final SubtypeQuery test_8341_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_8341() { testValid(test_8341_query); }

		private static final SubtypeQuery test_8342_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_8342() { testValid(test_8342_query); }

		private static final SubtypeQuery test_8343_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_8343() { testValid(test_8343_query); }

		private static final SubtypeQuery test_8344_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_8344() { testValid(test_8344_query); }

		private static final SubtypeQuery test_8345_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_8345() { testValid(test_8345_query); }

		private static final SubtypeQuery test_8346_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_8346() { testValid(test_8346_query); }

		private static final SubtypeQuery test_8347_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_8347() { testValid(test_8347_query); }

		private static final SubtypeQuery test_8348_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{any, (any & int)}"));
		@Test public void test_8348() { testValid(test_8348_query); }

		private static final SubtypeQuery test_8349_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_8349() { testValid(test_8349_query); }

		private static final SubtypeQuery test_8350_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_8350() { testValid(test_8350_query); }

		private static final SubtypeQuery test_8351_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_8351() { testValid(test_8351_query); }

		private static final SubtypeQuery test_8352_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{int, (int & int)}"));
		@Test public void test_8352() { testValid(test_8352_query); }

		private static final SubtypeQuery test_8353_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_8353() { testValid(test_8353_query); }

		private static final SubtypeQuery test_8354_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_8354() { testValid(test_8354_query); }

		private static final SubtypeQuery test_8355_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_8355() { testValid(test_8355_query); }

		private static final SubtypeQuery test_8356_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("(!any | any)"));
		@Test public void test_8356() { testValid(test_8356_query); }

		private static final SubtypeQuery test_8357_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("({int, any} | any)"));
		@Test public void test_8357() { testValid(test_8357_query); }

		private static final SubtypeQuery test_8358_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("({any, int} | any)"));
		@Test public void test_8358() { testValid(test_8358_query); }

		private static final SubtypeQuery test_8359_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("((int & int) | any)"));
		@Test public void test_8359() { testValid(test_8359_query); }

		private static final SubtypeQuery test_8360_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("({int, int} | int)"));
		@Test public void test_8360() { testValid(test_8360_query); }

		private static final SubtypeQuery test_8361_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("((any | any) | int)"));
		@Test public void test_8361() { testValid(test_8361_query); }

		private static final SubtypeQuery test_8362_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("((int | any) | int)"));
		@Test public void test_8362() { testValid(test_8362_query); }

		private static final SubtypeQuery test_8363_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("(any | {any})"));
		@Test public void test_8363() { testValid(test_8363_query); }

		private static final SubtypeQuery test_8364_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("(int | {any})"));
		@Test public void test_8364() { testValid(test_8364_query); }

		private static final SubtypeQuery test_8365_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("({any, any} | {any})"));
		@Test public void test_8365() { testValid(test_8365_query); }

		private static final SubtypeQuery test_8366_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("(any | {int})"));
		@Test public void test_8366() { testValid(test_8366_query); }

		private static final SubtypeQuery test_8367_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("((any | any) | {int})"));
		@Test public void test_8367() { testValid(test_8367_query); }

		private static final SubtypeQuery test_8368_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("(!int | !any)"));
		@Test public void test_8368() { testValid(test_8368_query); }

		private static final SubtypeQuery test_8369_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("({int, any} | !any)"));
		@Test public void test_8369() { testValid(test_8369_query); }

		private static final SubtypeQuery test_8370_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("((any | any) | !any)"));
		@Test public void test_8370() { testValid(test_8370_query); }

		private static final SubtypeQuery test_8371_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("({int} | !int)"));
		@Test public void test_8371() { testValid(test_8371_query); }

		private static final SubtypeQuery test_8372_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("(!any | !int)"));
		@Test public void test_8372() { testValid(test_8372_query); }

		private static final SubtypeQuery test_8373_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("(!int | {any, any})"));
		@Test public void test_8373() { testValid(test_8373_query); }

		private static final SubtypeQuery test_8374_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_8374() { testValid(test_8374_query); }

		private static final SubtypeQuery test_8375_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_8375() { testValid(test_8375_query); }

		private static final SubtypeQuery test_8376_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_8376() { testValid(test_8376_query); }

		private static final SubtypeQuery test_8377_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_8377() { testValid(test_8377_query); }

		private static final SubtypeQuery test_8378_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_8378() { testValid(test_8378_query); }

		private static final SubtypeQuery test_8379_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_8379() { testValid(test_8379_query); }

		private static final SubtypeQuery test_8380_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("({int} | (any | any))"));
		@Test public void test_8380() { testValid(test_8380_query); }

		private static final SubtypeQuery test_8381_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_8381() { testValid(test_8381_query); }

		private static final SubtypeQuery test_8382_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_8382() { testValid(test_8382_query); }

		private static final SubtypeQuery test_8383_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_8383() { testValid(test_8383_query); }

		private static final SubtypeQuery test_8384_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_8384() { testValid(test_8384_query); }

		private static final SubtypeQuery test_8385_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_8385() { testValid(test_8385_query); }

		private static final SubtypeQuery test_8386_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_8386() { testValid(test_8386_query); }

		private static final SubtypeQuery test_8387_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("(int | (any | int))"));
		@Test public void test_8387() { testValid(test_8387_query); }

		private static final SubtypeQuery test_8388_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_8388() { testValid(test_8388_query); }

		private static final SubtypeQuery test_8389_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_8389() { testValid(test_8389_query); }

		private static final SubtypeQuery test_8390_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_8390() { testValid(test_8390_query); }

		private static final SubtypeQuery test_8391_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_8391() { testValid(test_8391_query); }

		private static final SubtypeQuery test_8392_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("(!any | (int | int))"));
		@Test public void test_8392() { testValid(test_8392_query); }

		private static final SubtypeQuery test_8393_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_8393() { testValid(test_8393_query); }

		private static final SubtypeQuery test_8394_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("(int | (any & any))"));
		@Test public void test_8394() { testValid(test_8394_query); }

		private static final SubtypeQuery test_8395_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("(!any | (any & any))"));
		@Test public void test_8395() { testValid(test_8395_query); }

		private static final SubtypeQuery test_8396_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_8396() { testValid(test_8396_query); }

		private static final SubtypeQuery test_8397_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_8397() { testValid(test_8397_query); }

		private static final SubtypeQuery test_8398_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_8398() { testValid(test_8398_query); }

		private static final SubtypeQuery test_8399_query = createSubtypeQuery(parseWhiley("((any & any) | (any | any))"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_8399() { testValid(test_8399_query); }

		private static final SubtypeQuery test_8400_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("!int"));
		@Test public void test_8400() { testValid(test_8400_query); }

		private static final SubtypeQuery test_8401_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("(any | any)"));
		@Test public void test_8401() { testValid(test_8401_query); }

		private static final SubtypeQuery test_8402_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("(any & any)"));
		@Test public void test_8402() { testValid(test_8402_query); }

		private static final SubtypeQuery test_8403_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{{int, int}}"));
		@Test public void test_8403() { testValid(test_8403_query); }

		private static final SubtypeQuery test_8404_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("!(int | int)"));
		@Test public void test_8404() { testValid(test_8404_query); }

		private static final SubtypeQuery test_8405_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{{any, any}, any}"));
		@Test public void test_8405() { testValid(test_8405_query); }

		private static final SubtypeQuery test_8406_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{{any, int}, any}"));
		@Test public void test_8406() { testValid(test_8406_query); }

		private static final SubtypeQuery test_8407_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{{any}, int}"));
		@Test public void test_8407() { testValid(test_8407_query); }

		private static final SubtypeQuery test_8408_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{{any, any}, int}"));
		@Test public void test_8408() { testValid(test_8408_query); }

		private static final SubtypeQuery test_8409_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{(any | int), int}"));
		@Test public void test_8409() { testValid(test_8409_query); }

		private static final SubtypeQuery test_8410_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_8410() { testValid(test_8410_query); }

		private static final SubtypeQuery test_8411_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{!any, {int}}"));
		@Test public void test_8411() { testValid(test_8411_query); }

		private static final SubtypeQuery test_8412_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_8412() { testValid(test_8412_query); }

		private static final SubtypeQuery test_8413_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_8413() { testValid(test_8413_query); }

		private static final SubtypeQuery test_8414_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{any, !any}"));
		@Test public void test_8414() { testValid(test_8414_query); }

		private static final SubtypeQuery test_8415_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{{any}, !int}"));
		@Test public void test_8415() { testValid(test_8415_query); }

		private static final SubtypeQuery test_8416_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_8416() { testValid(test_8416_query); }

		private static final SubtypeQuery test_8417_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_8417() { testValid(test_8417_query); }

		private static final SubtypeQuery test_8418_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{(int & int), !int}"));
		@Test public void test_8418() { testValid(test_8418_query); }

		private static final SubtypeQuery test_8419_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_8419() { testValid(test_8419_query); }

		private static final SubtypeQuery test_8420_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_8420() { testValid(test_8420_query); }

		private static final SubtypeQuery test_8421_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_8421() { testValid(test_8421_query); }

		private static final SubtypeQuery test_8422_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_8422() { testValid(test_8422_query); }

		private static final SubtypeQuery test_8423_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_8423() { testValid(test_8423_query); }

		private static final SubtypeQuery test_8424_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_8424() { testValid(test_8424_query); }

		private static final SubtypeQuery test_8425_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_8425() { testValid(test_8425_query); }

		private static final SubtypeQuery test_8426_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{any, {any, int}}"));
		@Test public void test_8426() { testValid(test_8426_query); }

		private static final SubtypeQuery test_8427_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_8427() { testValid(test_8427_query); }

		private static final SubtypeQuery test_8428_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_8428() { testValid(test_8428_query); }

		private static final SubtypeQuery test_8429_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_8429() { testValid(test_8429_query); }

		private static final SubtypeQuery test_8430_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_8430() { testValid(test_8430_query); }

		private static final SubtypeQuery test_8431_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_8431() { testValid(test_8431_query); }

		private static final SubtypeQuery test_8432_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_8432() { testValid(test_8432_query); }

		private static final SubtypeQuery test_8433_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_8433() { testValid(test_8433_query); }

		private static final SubtypeQuery test_8434_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_8434() { testValid(test_8434_query); }

		private static final SubtypeQuery test_8435_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_8435() { testValid(test_8435_query); }

		private static final SubtypeQuery test_8436_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_8436() { testValid(test_8436_query); }

		private static final SubtypeQuery test_8437_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{int, (int | int)}"));
		@Test public void test_8437() { testValid(test_8437_query); }

		private static final SubtypeQuery test_8438_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_8438() { testValid(test_8438_query); }

		private static final SubtypeQuery test_8439_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{any, (any & any)}"));
		@Test public void test_8439() { testValid(test_8439_query); }

		private static final SubtypeQuery test_8440_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_8440() { testValid(test_8440_query); }

		private static final SubtypeQuery test_8441_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_8441() { testValid(test_8441_query); }

		private static final SubtypeQuery test_8442_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_8442() { testValid(test_8442_query); }

		private static final SubtypeQuery test_8443_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_8443() { testValid(test_8443_query); }

		private static final SubtypeQuery test_8444_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_8444() { testValid(test_8444_query); }

		private static final SubtypeQuery test_8445_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_8445() { testValid(test_8445_query); }

		private static final SubtypeQuery test_8446_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_8446() { testValid(test_8446_query); }

		private static final SubtypeQuery test_8447_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_8447() { testValid(test_8447_query); }

		private static final SubtypeQuery test_8448_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{any, (any & int)}"));
		@Test public void test_8448() { testValid(test_8448_query); }

		private static final SubtypeQuery test_8449_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_8449() { testValid(test_8449_query); }

		private static final SubtypeQuery test_8450_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_8450() { testValid(test_8450_query); }

		private static final SubtypeQuery test_8451_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_8451() { testValid(test_8451_query); }

		private static final SubtypeQuery test_8452_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{int, (int & int)}"));
		@Test public void test_8452() { testValid(test_8452_query); }

		private static final SubtypeQuery test_8453_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_8453() { testValid(test_8453_query); }

		private static final SubtypeQuery test_8454_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_8454() { testValid(test_8454_query); }

		private static final SubtypeQuery test_8455_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_8455() { testValid(test_8455_query); }

		private static final SubtypeQuery test_8456_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("(!any | any)"));
		@Test public void test_8456() { testValid(test_8456_query); }

		private static final SubtypeQuery test_8457_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("({int, any} | any)"));
		@Test public void test_8457() { testValid(test_8457_query); }

		private static final SubtypeQuery test_8458_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("({any, int} | any)"));
		@Test public void test_8458() { testValid(test_8458_query); }

		private static final SubtypeQuery test_8459_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("((int & int) | any)"));
		@Test public void test_8459() { testValid(test_8459_query); }

		private static final SubtypeQuery test_8460_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("({int, int} | int)"));
		@Test public void test_8460() { testValid(test_8460_query); }

		private static final SubtypeQuery test_8461_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("((any | any) | int)"));
		@Test public void test_8461() { testValid(test_8461_query); }

		private static final SubtypeQuery test_8462_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("((int | any) | int)"));
		@Test public void test_8462() { testValid(test_8462_query); }

		private static final SubtypeQuery test_8463_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("(any | {any})"));
		@Test public void test_8463() { testValid(test_8463_query); }

		private static final SubtypeQuery test_8464_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("(int | {any})"));
		@Test public void test_8464() { testValid(test_8464_query); }

		private static final SubtypeQuery test_8465_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("({any, any} | {any})"));
		@Test public void test_8465() { testValid(test_8465_query); }

		private static final SubtypeQuery test_8466_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("(any | {int})"));
		@Test public void test_8466() { testValid(test_8466_query); }

		private static final SubtypeQuery test_8467_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("((any | any) | {int})"));
		@Test public void test_8467() { testValid(test_8467_query); }

		private static final SubtypeQuery test_8468_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("(!int | !any)"));
		@Test public void test_8468() { testValid(test_8468_query); }

		private static final SubtypeQuery test_8469_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("({int, any} | !any)"));
		@Test public void test_8469() { testValid(test_8469_query); }

		private static final SubtypeQuery test_8470_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("((any | any) | !any)"));
		@Test public void test_8470() { testValid(test_8470_query); }

		private static final SubtypeQuery test_8471_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("({int} | !int)"));
		@Test public void test_8471() { testValid(test_8471_query); }

		private static final SubtypeQuery test_8472_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("(!any | !int)"));
		@Test public void test_8472() { testValid(test_8472_query); }

		private static final SubtypeQuery test_8473_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("(!int | {any, any})"));
		@Test public void test_8473() { testValid(test_8473_query); }

		private static final SubtypeQuery test_8474_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_8474() { testValid(test_8474_query); }

		private static final SubtypeQuery test_8475_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_8475() { testValid(test_8475_query); }

		private static final SubtypeQuery test_8476_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_8476() { testValid(test_8476_query); }

		private static final SubtypeQuery test_8477_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_8477() { testValid(test_8477_query); }

		private static final SubtypeQuery test_8478_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_8478() { testValid(test_8478_query); }

		private static final SubtypeQuery test_8479_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_8479() { testValid(test_8479_query); }

		private static final SubtypeQuery test_8480_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("({int} | (any | any))"));
		@Test public void test_8480() { testValid(test_8480_query); }

		private static final SubtypeQuery test_8481_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_8481() { testValid(test_8481_query); }

		private static final SubtypeQuery test_8482_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_8482() { testValid(test_8482_query); }

		private static final SubtypeQuery test_8483_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_8483() { testValid(test_8483_query); }

		private static final SubtypeQuery test_8484_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_8484() { testValid(test_8484_query); }

		private static final SubtypeQuery test_8485_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_8485() { testValid(test_8485_query); }

		private static final SubtypeQuery test_8486_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_8486() { testValid(test_8486_query); }

		private static final SubtypeQuery test_8487_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("(int | (any | int))"));
		@Test public void test_8487() { testValid(test_8487_query); }

		private static final SubtypeQuery test_8488_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_8488() { testValid(test_8488_query); }

		private static final SubtypeQuery test_8489_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_8489() { testValid(test_8489_query); }

		private static final SubtypeQuery test_8490_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_8490() { testValid(test_8490_query); }

		private static final SubtypeQuery test_8491_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_8491() { testValid(test_8491_query); }

		private static final SubtypeQuery test_8492_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("(!any | (int | int))"));
		@Test public void test_8492() { testValid(test_8492_query); }

		private static final SubtypeQuery test_8493_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_8493() { testValid(test_8493_query); }

		private static final SubtypeQuery test_8494_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("(int | (any & any))"));
		@Test public void test_8494() { testValid(test_8494_query); }

		private static final SubtypeQuery test_8495_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("(!any | (any & any))"));
		@Test public void test_8495() { testValid(test_8495_query); }

		private static final SubtypeQuery test_8496_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_8496() { testValid(test_8496_query); }

		private static final SubtypeQuery test_8497_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_8497() { testValid(test_8497_query); }

		private static final SubtypeQuery test_8498_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_8498() { testValid(test_8498_query); }

		private static final SubtypeQuery test_8499_query = createSubtypeQuery(parseWhiley("((any | int) | (int | any))"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_8499() { testValid(test_8499_query); }

		private static final SubtypeQuery test_8500_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("!int"));
		@Test public void test_8500() { testValid(test_8500_query); }

		private static final SubtypeQuery test_8501_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("(any | any)"));
		@Test public void test_8501() { testValid(test_8501_query); }

		private static final SubtypeQuery test_8502_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("(any & any)"));
		@Test public void test_8502() { testValid(test_8502_query); }

		private static final SubtypeQuery test_8503_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{{int, int}}"));
		@Test public void test_8503() { testValid(test_8503_query); }

		private static final SubtypeQuery test_8504_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("!(int | int)"));
		@Test public void test_8504() { testValid(test_8504_query); }

		private static final SubtypeQuery test_8505_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{{any, any}, any}"));
		@Test public void test_8505() { testValid(test_8505_query); }

		private static final SubtypeQuery test_8506_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{{any, int}, any}"));
		@Test public void test_8506() { testValid(test_8506_query); }

		private static final SubtypeQuery test_8507_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{{any}, int}"));
		@Test public void test_8507() { testValid(test_8507_query); }

		private static final SubtypeQuery test_8508_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{{any, any}, int}"));
		@Test public void test_8508() { testValid(test_8508_query); }

		private static final SubtypeQuery test_8509_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{(any | int), int}"));
		@Test public void test_8509() { testValid(test_8509_query); }

		private static final SubtypeQuery test_8510_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_8510() { testValid(test_8510_query); }

		private static final SubtypeQuery test_8511_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{!any, {int}}"));
		@Test public void test_8511() { testValid(test_8511_query); }

		private static final SubtypeQuery test_8512_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_8512() { testValid(test_8512_query); }

		private static final SubtypeQuery test_8513_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_8513() { testValid(test_8513_query); }

		private static final SubtypeQuery test_8514_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{any, !any}"));
		@Test public void test_8514() { testValid(test_8514_query); }

		private static final SubtypeQuery test_8515_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{{any}, !int}"));
		@Test public void test_8515() { testValid(test_8515_query); }

		private static final SubtypeQuery test_8516_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_8516() { testValid(test_8516_query); }

		private static final SubtypeQuery test_8517_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_8517() { testValid(test_8517_query); }

		private static final SubtypeQuery test_8518_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{(int & int), !int}"));
		@Test public void test_8518() { testValid(test_8518_query); }

		private static final SubtypeQuery test_8519_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_8519() { testValid(test_8519_query); }

		private static final SubtypeQuery test_8520_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_8520() { testValid(test_8520_query); }

		private static final SubtypeQuery test_8521_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_8521() { testValid(test_8521_query); }

		private static final SubtypeQuery test_8522_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_8522() { testValid(test_8522_query); }

		private static final SubtypeQuery test_8523_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_8523() { testValid(test_8523_query); }

		private static final SubtypeQuery test_8524_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_8524() { testValid(test_8524_query); }

		private static final SubtypeQuery test_8525_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_8525() { testValid(test_8525_query); }

		private static final SubtypeQuery test_8526_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{any, {any, int}}"));
		@Test public void test_8526() { testValid(test_8526_query); }

		private static final SubtypeQuery test_8527_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_8527() { testValid(test_8527_query); }

		private static final SubtypeQuery test_8528_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_8528() { testValid(test_8528_query); }

		private static final SubtypeQuery test_8529_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_8529() { testValid(test_8529_query); }

		private static final SubtypeQuery test_8530_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_8530() { testValid(test_8530_query); }

		private static final SubtypeQuery test_8531_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_8531() { testValid(test_8531_query); }

		private static final SubtypeQuery test_8532_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_8532() { testValid(test_8532_query); }

		private static final SubtypeQuery test_8533_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_8533() { testValid(test_8533_query); }

		private static final SubtypeQuery test_8534_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_8534() { testValid(test_8534_query); }

		private static final SubtypeQuery test_8535_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_8535() { testValid(test_8535_query); }

		private static final SubtypeQuery test_8536_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_8536() { testValid(test_8536_query); }

		private static final SubtypeQuery test_8537_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{int, (int | int)}"));
		@Test public void test_8537() { testValid(test_8537_query); }

		private static final SubtypeQuery test_8538_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_8538() { testValid(test_8538_query); }

		private static final SubtypeQuery test_8539_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{any, (any & any)}"));
		@Test public void test_8539() { testValid(test_8539_query); }

		private static final SubtypeQuery test_8540_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_8540() { testValid(test_8540_query); }

		private static final SubtypeQuery test_8541_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_8541() { testValid(test_8541_query); }

		private static final SubtypeQuery test_8542_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_8542() { testValid(test_8542_query); }

		private static final SubtypeQuery test_8543_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_8543() { testValid(test_8543_query); }

		private static final SubtypeQuery test_8544_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_8544() { testValid(test_8544_query); }

		private static final SubtypeQuery test_8545_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_8545() { testValid(test_8545_query); }

		private static final SubtypeQuery test_8546_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_8546() { testValid(test_8546_query); }

		private static final SubtypeQuery test_8547_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_8547() { testValid(test_8547_query); }

		private static final SubtypeQuery test_8548_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{any, (any & int)}"));
		@Test public void test_8548() { testValid(test_8548_query); }

		private static final SubtypeQuery test_8549_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_8549() { testValid(test_8549_query); }

		private static final SubtypeQuery test_8550_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_8550() { testValid(test_8550_query); }

		private static final SubtypeQuery test_8551_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_8551() { testValid(test_8551_query); }

		private static final SubtypeQuery test_8552_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{int, (int & int)}"));
		@Test public void test_8552() { testValid(test_8552_query); }

		private static final SubtypeQuery test_8553_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_8553() { testValid(test_8553_query); }

		private static final SubtypeQuery test_8554_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_8554() { testValid(test_8554_query); }

		private static final SubtypeQuery test_8555_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_8555() { testValid(test_8555_query); }

		private static final SubtypeQuery test_8556_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("(!any | any)"));
		@Test public void test_8556() { testValid(test_8556_query); }

		private static final SubtypeQuery test_8557_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("({int, any} | any)"));
		@Test public void test_8557() { testValid(test_8557_query); }

		private static final SubtypeQuery test_8558_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("({any, int} | any)"));
		@Test public void test_8558() { testValid(test_8558_query); }

		private static final SubtypeQuery test_8559_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("((int & int) | any)"));
		@Test public void test_8559() { testValid(test_8559_query); }

		private static final SubtypeQuery test_8560_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("({int, int} | int)"));
		@Test public void test_8560() { testValid(test_8560_query); }

		private static final SubtypeQuery test_8561_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("((any | any) | int)"));
		@Test public void test_8561() { testValid(test_8561_query); }

		private static final SubtypeQuery test_8562_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("((int | any) | int)"));
		@Test public void test_8562() { testValid(test_8562_query); }

		private static final SubtypeQuery test_8563_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("(any | {any})"));
		@Test public void test_8563() { testValid(test_8563_query); }

		private static final SubtypeQuery test_8564_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("(int | {any})"));
		@Test public void test_8564() { testValid(test_8564_query); }

		private static final SubtypeQuery test_8565_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("({any, any} | {any})"));
		@Test public void test_8565() { testValid(test_8565_query); }

		private static final SubtypeQuery test_8566_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("(any | {int})"));
		@Test public void test_8566() { testValid(test_8566_query); }

		private static final SubtypeQuery test_8567_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("((any | any) | {int})"));
		@Test public void test_8567() { testValid(test_8567_query); }

		private static final SubtypeQuery test_8568_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("(!int | !any)"));
		@Test public void test_8568() { testValid(test_8568_query); }

		private static final SubtypeQuery test_8569_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("({int, any} | !any)"));
		@Test public void test_8569() { testValid(test_8569_query); }

		private static final SubtypeQuery test_8570_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("((any | any) | !any)"));
		@Test public void test_8570() { testValid(test_8570_query); }

		private static final SubtypeQuery test_8571_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("({int} | !int)"));
		@Test public void test_8571() { testValid(test_8571_query); }

		private static final SubtypeQuery test_8572_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("(!any | !int)"));
		@Test public void test_8572() { testValid(test_8572_query); }

		private static final SubtypeQuery test_8573_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("(!int | {any, any})"));
		@Test public void test_8573() { testValid(test_8573_query); }

		private static final SubtypeQuery test_8574_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_8574() { testValid(test_8574_query); }

		private static final SubtypeQuery test_8575_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_8575() { testValid(test_8575_query); }

		private static final SubtypeQuery test_8576_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_8576() { testValid(test_8576_query); }

		private static final SubtypeQuery test_8577_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_8577() { testValid(test_8577_query); }

		private static final SubtypeQuery test_8578_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_8578() { testValid(test_8578_query); }

		private static final SubtypeQuery test_8579_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_8579() { testValid(test_8579_query); }

		private static final SubtypeQuery test_8580_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("({int} | (any | any))"));
		@Test public void test_8580() { testValid(test_8580_query); }

		private static final SubtypeQuery test_8581_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_8581() { testValid(test_8581_query); }

		private static final SubtypeQuery test_8582_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_8582() { testValid(test_8582_query); }

		private static final SubtypeQuery test_8583_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_8583() { testValid(test_8583_query); }

		private static final SubtypeQuery test_8584_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_8584() { testValid(test_8584_query); }

		private static final SubtypeQuery test_8585_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_8585() { testValid(test_8585_query); }

		private static final SubtypeQuery test_8586_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_8586() { testValid(test_8586_query); }

		private static final SubtypeQuery test_8587_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("(int | (any | int))"));
		@Test public void test_8587() { testValid(test_8587_query); }

		private static final SubtypeQuery test_8588_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_8588() { testValid(test_8588_query); }

		private static final SubtypeQuery test_8589_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_8589() { testValid(test_8589_query); }

		private static final SubtypeQuery test_8590_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_8590() { testValid(test_8590_query); }

		private static final SubtypeQuery test_8591_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_8591() { testValid(test_8591_query); }

		private static final SubtypeQuery test_8592_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("(!any | (int | int))"));
		@Test public void test_8592() { testValid(test_8592_query); }

		private static final SubtypeQuery test_8593_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_8593() { testValid(test_8593_query); }

		private static final SubtypeQuery test_8594_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("(int | (any & any))"));
		@Test public void test_8594() { testValid(test_8594_query); }

		private static final SubtypeQuery test_8595_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("(!any | (any & any))"));
		@Test public void test_8595() { testValid(test_8595_query); }

		private static final SubtypeQuery test_8596_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_8596() { testValid(test_8596_query); }

		private static final SubtypeQuery test_8597_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_8597() { testValid(test_8597_query); }

		private static final SubtypeQuery test_8598_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_8598() { testValid(test_8598_query); }

		private static final SubtypeQuery test_8599_query = createSubtypeQuery(parseWhiley("((any & int) | (int | any))"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_8599() { testValid(test_8599_query); }

		private static final SubtypeQuery test_8600_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("!int"));
		@Test public void test_8600() { testValid(test_8600_query); }

		private static final SubtypeQuery test_8601_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("(any | any)"));
		@Test public void test_8601() { testValid(test_8601_query); }

		private static final SubtypeQuery test_8602_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("(any & any)"));
		@Test public void test_8602() { testValid(test_8602_query); }

		private static final SubtypeQuery test_8603_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{{int, int}}"));
		@Test public void test_8603() { testValid(test_8603_query); }

		private static final SubtypeQuery test_8604_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("!(int | int)"));
		@Test public void test_8604() { testValid(test_8604_query); }

		private static final SubtypeQuery test_8605_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{{any, any}, any}"));
		@Test public void test_8605() { testValid(test_8605_query); }

		private static final SubtypeQuery test_8606_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{{any, int}, any}"));
		@Test public void test_8606() { testValid(test_8606_query); }

		private static final SubtypeQuery test_8607_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{{any}, int}"));
		@Test public void test_8607() { testValid(test_8607_query); }

		private static final SubtypeQuery test_8608_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{{any, any}, int}"));
		@Test public void test_8608() { testValid(test_8608_query); }

		private static final SubtypeQuery test_8609_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{(any | int), int}"));
		@Test public void test_8609() { testValid(test_8609_query); }

		private static final SubtypeQuery test_8610_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_8610() { testValid(test_8610_query); }

		private static final SubtypeQuery test_8611_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{!any, {int}}"));
		@Test public void test_8611() { testValid(test_8611_query); }

		private static final SubtypeQuery test_8612_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_8612() { testValid(test_8612_query); }

		private static final SubtypeQuery test_8613_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_8613() { testValid(test_8613_query); }

		private static final SubtypeQuery test_8614_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{any, !any}"));
		@Test public void test_8614() { testValid(test_8614_query); }

		private static final SubtypeQuery test_8615_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{{any}, !int}"));
		@Test public void test_8615() { testValid(test_8615_query); }

		private static final SubtypeQuery test_8616_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_8616() { testValid(test_8616_query); }

		private static final SubtypeQuery test_8617_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_8617() { testValid(test_8617_query); }

		private static final SubtypeQuery test_8618_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{(int & int), !int}"));
		@Test public void test_8618() { testValid(test_8618_query); }

		private static final SubtypeQuery test_8619_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_8619() { testValid(test_8619_query); }

		private static final SubtypeQuery test_8620_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_8620() { testValid(test_8620_query); }

		private static final SubtypeQuery test_8621_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_8621() { testValid(test_8621_query); }

		private static final SubtypeQuery test_8622_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_8622() { testValid(test_8622_query); }

		private static final SubtypeQuery test_8623_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_8623() { testValid(test_8623_query); }

		private static final SubtypeQuery test_8624_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_8624() { testValid(test_8624_query); }

		private static final SubtypeQuery test_8625_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_8625() { testValid(test_8625_query); }

		private static final SubtypeQuery test_8626_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{any, {any, int}}"));
		@Test public void test_8626() { testValid(test_8626_query); }

		private static final SubtypeQuery test_8627_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_8627() { testValid(test_8627_query); }

		private static final SubtypeQuery test_8628_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_8628() { testValid(test_8628_query); }

		private static final SubtypeQuery test_8629_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_8629() { testValid(test_8629_query); }

		private static final SubtypeQuery test_8630_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_8630() { testValid(test_8630_query); }

		private static final SubtypeQuery test_8631_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_8631() { testValid(test_8631_query); }

		private static final SubtypeQuery test_8632_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_8632() { testValid(test_8632_query); }

		private static final SubtypeQuery test_8633_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_8633() { testValid(test_8633_query); }

		private static final SubtypeQuery test_8634_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_8634() { testValid(test_8634_query); }

		private static final SubtypeQuery test_8635_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_8635() { testValid(test_8635_query); }

		private static final SubtypeQuery test_8636_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_8636() { testValid(test_8636_query); }

		private static final SubtypeQuery test_8637_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{int, (int | int)}"));
		@Test public void test_8637() { testValid(test_8637_query); }

		private static final SubtypeQuery test_8638_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_8638() { testValid(test_8638_query); }

		private static final SubtypeQuery test_8639_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{any, (any & any)}"));
		@Test public void test_8639() { testValid(test_8639_query); }

		private static final SubtypeQuery test_8640_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_8640() { testValid(test_8640_query); }

		private static final SubtypeQuery test_8641_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_8641() { testValid(test_8641_query); }

		private static final SubtypeQuery test_8642_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_8642() { testValid(test_8642_query); }

		private static final SubtypeQuery test_8643_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_8643() { testValid(test_8643_query); }

		private static final SubtypeQuery test_8644_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_8644() { testValid(test_8644_query); }

		private static final SubtypeQuery test_8645_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_8645() { testValid(test_8645_query); }

		private static final SubtypeQuery test_8646_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_8646() { testValid(test_8646_query); }

		private static final SubtypeQuery test_8647_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_8647() { testValid(test_8647_query); }

		private static final SubtypeQuery test_8648_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{any, (any & int)}"));
		@Test public void test_8648() { testValid(test_8648_query); }

		private static final SubtypeQuery test_8649_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_8649() { testValid(test_8649_query); }

		private static final SubtypeQuery test_8650_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_8650() { testValid(test_8650_query); }

		private static final SubtypeQuery test_8651_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_8651() { testValid(test_8651_query); }

		private static final SubtypeQuery test_8652_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{int, (int & int)}"));
		@Test public void test_8652() { testValid(test_8652_query); }

		private static final SubtypeQuery test_8653_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_8653() { testValid(test_8653_query); }

		private static final SubtypeQuery test_8654_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_8654() { testValid(test_8654_query); }

		private static final SubtypeQuery test_8655_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_8655() { testValid(test_8655_query); }

		private static final SubtypeQuery test_8656_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("(!any | any)"));
		@Test public void test_8656() { testValid(test_8656_query); }

		private static final SubtypeQuery test_8657_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("({int, any} | any)"));
		@Test public void test_8657() { testValid(test_8657_query); }

		private static final SubtypeQuery test_8658_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("({any, int} | any)"));
		@Test public void test_8658() { testValid(test_8658_query); }

		private static final SubtypeQuery test_8659_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("((int & int) | any)"));
		@Test public void test_8659() { testValid(test_8659_query); }

		private static final SubtypeQuery test_8660_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("({int, int} | int)"));
		@Test public void test_8660() { testValid(test_8660_query); }

		private static final SubtypeQuery test_8661_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("((any | any) | int)"));
		@Test public void test_8661() { testValid(test_8661_query); }

		private static final SubtypeQuery test_8662_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("((int | any) | int)"));
		@Test public void test_8662() { testValid(test_8662_query); }

		private static final SubtypeQuery test_8663_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("(any | {any})"));
		@Test public void test_8663() { testValid(test_8663_query); }

		private static final SubtypeQuery test_8664_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("(int | {any})"));
		@Test public void test_8664() { testValid(test_8664_query); }

		private static final SubtypeQuery test_8665_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("({any, any} | {any})"));
		@Test public void test_8665() { testValid(test_8665_query); }

		private static final SubtypeQuery test_8666_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("(any | {int})"));
		@Test public void test_8666() { testValid(test_8666_query); }

		private static final SubtypeQuery test_8667_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("((any | any) | {int})"));
		@Test public void test_8667() { testValid(test_8667_query); }

		private static final SubtypeQuery test_8668_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("(!int | !any)"));
		@Test public void test_8668() { testValid(test_8668_query); }

		private static final SubtypeQuery test_8669_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("({int, any} | !any)"));
		@Test public void test_8669() { testValid(test_8669_query); }

		private static final SubtypeQuery test_8670_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("((any | any) | !any)"));
		@Test public void test_8670() { testValid(test_8670_query); }

		private static final SubtypeQuery test_8671_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("({int} | !int)"));
		@Test public void test_8671() { testValid(test_8671_query); }

		private static final SubtypeQuery test_8672_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("(!any | !int)"));
		@Test public void test_8672() { testValid(test_8672_query); }

		private static final SubtypeQuery test_8673_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("(!int | {any, any})"));
		@Test public void test_8673() { testValid(test_8673_query); }

		private static final SubtypeQuery test_8674_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_8674() { testValid(test_8674_query); }

		private static final SubtypeQuery test_8675_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_8675() { testValid(test_8675_query); }

		private static final SubtypeQuery test_8676_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_8676() { testValid(test_8676_query); }

		private static final SubtypeQuery test_8677_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_8677() { testValid(test_8677_query); }

		private static final SubtypeQuery test_8678_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_8678() { testValid(test_8678_query); }

		private static final SubtypeQuery test_8679_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_8679() { testValid(test_8679_query); }

		private static final SubtypeQuery test_8680_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("({int} | (any | any))"));
		@Test public void test_8680() { testValid(test_8680_query); }

		private static final SubtypeQuery test_8681_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_8681() { testValid(test_8681_query); }

		private static final SubtypeQuery test_8682_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_8682() { testValid(test_8682_query); }

		private static final SubtypeQuery test_8683_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_8683() { testValid(test_8683_query); }

		private static final SubtypeQuery test_8684_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_8684() { testValid(test_8684_query); }

		private static final SubtypeQuery test_8685_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_8685() { testValid(test_8685_query); }

		private static final SubtypeQuery test_8686_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_8686() { testValid(test_8686_query); }

		private static final SubtypeQuery test_8687_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("(int | (any | int))"));
		@Test public void test_8687() { testValid(test_8687_query); }

		private static final SubtypeQuery test_8688_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_8688() { testValid(test_8688_query); }

		private static final SubtypeQuery test_8689_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_8689() { testValid(test_8689_query); }

		private static final SubtypeQuery test_8690_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_8690() { testValid(test_8690_query); }

		private static final SubtypeQuery test_8691_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_8691() { testValid(test_8691_query); }

		private static final SubtypeQuery test_8692_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("(!any | (int | int))"));
		@Test public void test_8692() { testValid(test_8692_query); }

		private static final SubtypeQuery test_8693_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_8693() { testValid(test_8693_query); }

		private static final SubtypeQuery test_8694_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("(int | (any & any))"));
		@Test public void test_8694() { testValid(test_8694_query); }

		private static final SubtypeQuery test_8695_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("(!any | (any & any))"));
		@Test public void test_8695() { testValid(test_8695_query); }

		private static final SubtypeQuery test_8696_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_8696() { testValid(test_8696_query); }

		private static final SubtypeQuery test_8697_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_8697() { testValid(test_8697_query); }

		private static final SubtypeQuery test_8698_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_8698() { testValid(test_8698_query); }

		private static final SubtypeQuery test_8699_query = createSubtypeQuery(parseWhiley("((int & int) | (int | any))"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_8699() { testValid(test_8699_query); }

		private static final SubtypeQuery test_8700_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("!int"));
		@Test public void test_8700() { testValid(test_8700_query); }

		private static final SubtypeQuery test_8701_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("(any | any)"));
		@Test public void test_8701() { testValid(test_8701_query); }

		private static final SubtypeQuery test_8702_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("(any & any)"));
		@Test public void test_8702() { testValid(test_8702_query); }

		private static final SubtypeQuery test_8703_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{{int, int}}"));
		@Test public void test_8703() { testValid(test_8703_query); }

		private static final SubtypeQuery test_8704_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("!(int | int)"));
		@Test public void test_8704() { testValid(test_8704_query); }

		private static final SubtypeQuery test_8705_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{{any, any}, any}"));
		@Test public void test_8705() { testValid(test_8705_query); }

		private static final SubtypeQuery test_8706_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{{any, int}, any}"));
		@Test public void test_8706() { testValid(test_8706_query); }

		private static final SubtypeQuery test_8707_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{{any}, int}"));
		@Test public void test_8707() { testValid(test_8707_query); }

		private static final SubtypeQuery test_8708_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{{any, any}, int}"));
		@Test public void test_8708() { testValid(test_8708_query); }

		private static final SubtypeQuery test_8709_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{(any | int), int}"));
		@Test public void test_8709() { testValid(test_8709_query); }

		private static final SubtypeQuery test_8710_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_8710() { testValid(test_8710_query); }

		private static final SubtypeQuery test_8711_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{!any, {int}}"));
		@Test public void test_8711() { testValid(test_8711_query); }

		private static final SubtypeQuery test_8712_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_8712() { testValid(test_8712_query); }

		private static final SubtypeQuery test_8713_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_8713() { testValid(test_8713_query); }

		private static final SubtypeQuery test_8714_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{any, !any}"));
		@Test public void test_8714() { testValid(test_8714_query); }

		private static final SubtypeQuery test_8715_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{{any}, !int}"));
		@Test public void test_8715() { testValid(test_8715_query); }

		private static final SubtypeQuery test_8716_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_8716() { testValid(test_8716_query); }

		private static final SubtypeQuery test_8717_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_8717() { testValid(test_8717_query); }

		private static final SubtypeQuery test_8718_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{(int & int), !int}"));
		@Test public void test_8718() { testValid(test_8718_query); }

		private static final SubtypeQuery test_8719_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_8719() { testValid(test_8719_query); }

		private static final SubtypeQuery test_8720_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_8720() { testValid(test_8720_query); }

		private static final SubtypeQuery test_8721_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_8721() { testValid(test_8721_query); }

		private static final SubtypeQuery test_8722_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_8722() { testValid(test_8722_query); }

		private static final SubtypeQuery test_8723_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_8723() { testValid(test_8723_query); }

		private static final SubtypeQuery test_8724_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_8724() { testValid(test_8724_query); }

		private static final SubtypeQuery test_8725_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_8725() { testValid(test_8725_query); }

		private static final SubtypeQuery test_8726_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{any, {any, int}}"));
		@Test public void test_8726() { testValid(test_8726_query); }

		private static final SubtypeQuery test_8727_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_8727() { testValid(test_8727_query); }

		private static final SubtypeQuery test_8728_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_8728() { testValid(test_8728_query); }

		private static final SubtypeQuery test_8729_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_8729() { testValid(test_8729_query); }

		private static final SubtypeQuery test_8730_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_8730() { testValid(test_8730_query); }

		private static final SubtypeQuery test_8731_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_8731() { testValid(test_8731_query); }

		private static final SubtypeQuery test_8732_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_8732() { testValid(test_8732_query); }

		private static final SubtypeQuery test_8733_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_8733() { testValid(test_8733_query); }

		private static final SubtypeQuery test_8734_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_8734() { testValid(test_8734_query); }

		private static final SubtypeQuery test_8735_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_8735() { testValid(test_8735_query); }

		private static final SubtypeQuery test_8736_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_8736() { testValid(test_8736_query); }

		private static final SubtypeQuery test_8737_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{int, (int | int)}"));
		@Test public void test_8737() { testValid(test_8737_query); }

		private static final SubtypeQuery test_8738_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_8738() { testValid(test_8738_query); }

		private static final SubtypeQuery test_8739_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{any, (any & any)}"));
		@Test public void test_8739() { testValid(test_8739_query); }

		private static final SubtypeQuery test_8740_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_8740() { testValid(test_8740_query); }

		private static final SubtypeQuery test_8741_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_8741() { testValid(test_8741_query); }

		private static final SubtypeQuery test_8742_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_8742() { testValid(test_8742_query); }

		private static final SubtypeQuery test_8743_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_8743() { testValid(test_8743_query); }

		private static final SubtypeQuery test_8744_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_8744() { testValid(test_8744_query); }

		private static final SubtypeQuery test_8745_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_8745() { testValid(test_8745_query); }

		private static final SubtypeQuery test_8746_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_8746() { testValid(test_8746_query); }

		private static final SubtypeQuery test_8747_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_8747() { testValid(test_8747_query); }

		private static final SubtypeQuery test_8748_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{any, (any & int)}"));
		@Test public void test_8748() { testValid(test_8748_query); }

		private static final SubtypeQuery test_8749_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_8749() { testValid(test_8749_query); }

		private static final SubtypeQuery test_8750_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_8750() { testValid(test_8750_query); }

		private static final SubtypeQuery test_8751_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_8751() { testValid(test_8751_query); }

		private static final SubtypeQuery test_8752_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{int, (int & int)}"));
		@Test public void test_8752() { testValid(test_8752_query); }

		private static final SubtypeQuery test_8753_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_8753() { testValid(test_8753_query); }

		private static final SubtypeQuery test_8754_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_8754() { testValid(test_8754_query); }

		private static final SubtypeQuery test_8755_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_8755() { testValid(test_8755_query); }

		private static final SubtypeQuery test_8756_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("(!any | any)"));
		@Test public void test_8756() { testValid(test_8756_query); }

		private static final SubtypeQuery test_8757_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("({int, any} | any)"));
		@Test public void test_8757() { testValid(test_8757_query); }

		private static final SubtypeQuery test_8758_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("({any, int} | any)"));
		@Test public void test_8758() { testValid(test_8758_query); }

		private static final SubtypeQuery test_8759_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("((int & int) | any)"));
		@Test public void test_8759() { testValid(test_8759_query); }

		private static final SubtypeQuery test_8760_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("({int, int} | int)"));
		@Test public void test_8760() { testValid(test_8760_query); }

		private static final SubtypeQuery test_8761_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("((any | any) | int)"));
		@Test public void test_8761() { testValid(test_8761_query); }

		private static final SubtypeQuery test_8762_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("((int | any) | int)"));
		@Test public void test_8762() { testValid(test_8762_query); }

		private static final SubtypeQuery test_8763_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("(any | {any})"));
		@Test public void test_8763() { testValid(test_8763_query); }

		private static final SubtypeQuery test_8764_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("(int | {any})"));
		@Test public void test_8764() { testValid(test_8764_query); }

		private static final SubtypeQuery test_8765_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("({any, any} | {any})"));
		@Test public void test_8765() { testValid(test_8765_query); }

		private static final SubtypeQuery test_8766_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("(any | {int})"));
		@Test public void test_8766() { testValid(test_8766_query); }

		private static final SubtypeQuery test_8767_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("((any | any) | {int})"));
		@Test public void test_8767() { testValid(test_8767_query); }

		private static final SubtypeQuery test_8768_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("(!int | !any)"));
		@Test public void test_8768() { testValid(test_8768_query); }

		private static final SubtypeQuery test_8769_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("({int, any} | !any)"));
		@Test public void test_8769() { testValid(test_8769_query); }

		private static final SubtypeQuery test_8770_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("((any | any) | !any)"));
		@Test public void test_8770() { testValid(test_8770_query); }

		private static final SubtypeQuery test_8771_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("({int} | !int)"));
		@Test public void test_8771() { testValid(test_8771_query); }

		private static final SubtypeQuery test_8772_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("(!any | !int)"));
		@Test public void test_8772() { testValid(test_8772_query); }

		private static final SubtypeQuery test_8773_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("(!int | {any, any})"));
		@Test public void test_8773() { testValid(test_8773_query); }

		private static final SubtypeQuery test_8774_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_8774() { testValid(test_8774_query); }

		private static final SubtypeQuery test_8775_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_8775() { testValid(test_8775_query); }

		private static final SubtypeQuery test_8776_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_8776() { testValid(test_8776_query); }

		private static final SubtypeQuery test_8777_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_8777() { testValid(test_8777_query); }

		private static final SubtypeQuery test_8778_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_8778() { testValid(test_8778_query); }

		private static final SubtypeQuery test_8779_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_8779() { testValid(test_8779_query); }

		private static final SubtypeQuery test_8780_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("({int} | (any | any))"));
		@Test public void test_8780() { testValid(test_8780_query); }

		private static final SubtypeQuery test_8781_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_8781() { testValid(test_8781_query); }

		private static final SubtypeQuery test_8782_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_8782() { testValid(test_8782_query); }

		private static final SubtypeQuery test_8783_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_8783() { testValid(test_8783_query); }

		private static final SubtypeQuery test_8784_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_8784() { testValid(test_8784_query); }

		private static final SubtypeQuery test_8785_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_8785() { testValid(test_8785_query); }

		private static final SubtypeQuery test_8786_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_8786() { testValid(test_8786_query); }

		private static final SubtypeQuery test_8787_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("(int | (any | int))"));
		@Test public void test_8787() { testValid(test_8787_query); }

		private static final SubtypeQuery test_8788_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_8788() { testValid(test_8788_query); }

		private static final SubtypeQuery test_8789_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_8789() { testValid(test_8789_query); }

		private static final SubtypeQuery test_8790_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_8790() { testValid(test_8790_query); }

		private static final SubtypeQuery test_8791_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_8791() { testValid(test_8791_query); }

		private static final SubtypeQuery test_8792_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("(!any | (int | int))"));
		@Test public void test_8792() { testValid(test_8792_query); }

		private static final SubtypeQuery test_8793_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_8793() { testValid(test_8793_query); }

		private static final SubtypeQuery test_8794_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("(int | (any & any))"));
		@Test public void test_8794() { testValid(test_8794_query); }

		private static final SubtypeQuery test_8795_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("(!any | (any & any))"));
		@Test public void test_8795() { testValid(test_8795_query); }

		private static final SubtypeQuery test_8796_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_8796() { testValid(test_8796_query); }

		private static final SubtypeQuery test_8797_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_8797() { testValid(test_8797_query); }

		private static final SubtypeQuery test_8798_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_8798() { testValid(test_8798_query); }

		private static final SubtypeQuery test_8799_query = createSubtypeQuery(parseWhiley("(int | (any | int))"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_8799() { testValid(test_8799_query); }

		private static final SubtypeQuery test_8800_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("!int"));
		@Test public void test_8800() { testValid(test_8800_query); }

		private static final SubtypeQuery test_8801_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("(any | any)"));
		@Test public void test_8801() { testValid(test_8801_query); }

		private static final SubtypeQuery test_8802_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("(any & any)"));
		@Test public void test_8802() { testValid(test_8802_query); }

		private static final SubtypeQuery test_8803_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{{int, int}}"));
		@Test public void test_8803() { testValid(test_8803_query); }

		private static final SubtypeQuery test_8804_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("!(int | int)"));
		@Test public void test_8804() { testValid(test_8804_query); }

		private static final SubtypeQuery test_8805_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{{any, any}, any}"));
		@Test public void test_8805() { testValid(test_8805_query); }

		private static final SubtypeQuery test_8806_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{{any, int}, any}"));
		@Test public void test_8806() { testValid(test_8806_query); }

		private static final SubtypeQuery test_8807_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{{any}, int}"));
		@Test public void test_8807() { testValid(test_8807_query); }

		private static final SubtypeQuery test_8808_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{{any, any}, int}"));
		@Test public void test_8808() { testValid(test_8808_query); }

		private static final SubtypeQuery test_8809_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{(any | int), int}"));
		@Test public void test_8809() { testValid(test_8809_query); }

		private static final SubtypeQuery test_8810_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_8810() { testValid(test_8810_query); }

		private static final SubtypeQuery test_8811_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{!any, {int}}"));
		@Test public void test_8811() { testValid(test_8811_query); }

		private static final SubtypeQuery test_8812_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_8812() { testValid(test_8812_query); }

		private static final SubtypeQuery test_8813_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_8813() { testValid(test_8813_query); }

		private static final SubtypeQuery test_8814_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{any, !any}"));
		@Test public void test_8814() { testValid(test_8814_query); }

		private static final SubtypeQuery test_8815_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{{any}, !int}"));
		@Test public void test_8815() { testValid(test_8815_query); }

		private static final SubtypeQuery test_8816_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_8816() { testValid(test_8816_query); }

		private static final SubtypeQuery test_8817_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_8817() { testValid(test_8817_query); }

		private static final SubtypeQuery test_8818_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{(int & int), !int}"));
		@Test public void test_8818() { testValid(test_8818_query); }

		private static final SubtypeQuery test_8819_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_8819() { testValid(test_8819_query); }

		private static final SubtypeQuery test_8820_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_8820() { testValid(test_8820_query); }

		private static final SubtypeQuery test_8821_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_8821() { testValid(test_8821_query); }

		private static final SubtypeQuery test_8822_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_8822() { testValid(test_8822_query); }

		private static final SubtypeQuery test_8823_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_8823() { testValid(test_8823_query); }

		private static final SubtypeQuery test_8824_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_8824() { testValid(test_8824_query); }

		private static final SubtypeQuery test_8825_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_8825() { testValid(test_8825_query); }

		private static final SubtypeQuery test_8826_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{any, {any, int}}"));
		@Test public void test_8826() { testValid(test_8826_query); }

		private static final SubtypeQuery test_8827_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_8827() { testValid(test_8827_query); }

		private static final SubtypeQuery test_8828_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_8828() { testValid(test_8828_query); }

		private static final SubtypeQuery test_8829_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_8829() { testValid(test_8829_query); }

		private static final SubtypeQuery test_8830_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_8830() { testValid(test_8830_query); }

		private static final SubtypeQuery test_8831_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_8831() { testValid(test_8831_query); }

		private static final SubtypeQuery test_8832_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_8832() { testValid(test_8832_query); }

		private static final SubtypeQuery test_8833_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_8833() { testValid(test_8833_query); }

		private static final SubtypeQuery test_8834_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_8834() { testValid(test_8834_query); }

		private static final SubtypeQuery test_8835_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_8835() { testValid(test_8835_query); }

		private static final SubtypeQuery test_8836_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_8836() { testValid(test_8836_query); }

		private static final SubtypeQuery test_8837_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{int, (int | int)}"));
		@Test public void test_8837() { testValid(test_8837_query); }

		private static final SubtypeQuery test_8838_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_8838() { testValid(test_8838_query); }

		private static final SubtypeQuery test_8839_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{any, (any & any)}"));
		@Test public void test_8839() { testValid(test_8839_query); }

		private static final SubtypeQuery test_8840_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_8840() { testValid(test_8840_query); }

		private static final SubtypeQuery test_8841_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_8841() { testValid(test_8841_query); }

		private static final SubtypeQuery test_8842_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_8842() { testValid(test_8842_query); }

		private static final SubtypeQuery test_8843_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_8843() { testValid(test_8843_query); }

		private static final SubtypeQuery test_8844_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_8844() { testValid(test_8844_query); }

		private static final SubtypeQuery test_8845_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_8845() { testValid(test_8845_query); }

		private static final SubtypeQuery test_8846_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_8846() { testValid(test_8846_query); }

		private static final SubtypeQuery test_8847_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_8847() { testValid(test_8847_query); }

		private static final SubtypeQuery test_8848_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{any, (any & int)}"));
		@Test public void test_8848() { testValid(test_8848_query); }

		private static final SubtypeQuery test_8849_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_8849() { testValid(test_8849_query); }

		private static final SubtypeQuery test_8850_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_8850() { testValid(test_8850_query); }

		private static final SubtypeQuery test_8851_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_8851() { testValid(test_8851_query); }

		private static final SubtypeQuery test_8852_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{int, (int & int)}"));
		@Test public void test_8852() { testValid(test_8852_query); }

		private static final SubtypeQuery test_8853_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_8853() { testValid(test_8853_query); }

		private static final SubtypeQuery test_8854_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_8854() { testValid(test_8854_query); }

		private static final SubtypeQuery test_8855_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_8855() { testValid(test_8855_query); }

		private static final SubtypeQuery test_8856_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("(!any | any)"));
		@Test public void test_8856() { testValid(test_8856_query); }

		private static final SubtypeQuery test_8857_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("({int, any} | any)"));
		@Test public void test_8857() { testValid(test_8857_query); }

		private static final SubtypeQuery test_8858_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("({any, int} | any)"));
		@Test public void test_8858() { testValid(test_8858_query); }

		private static final SubtypeQuery test_8859_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("((int & int) | any)"));
		@Test public void test_8859() { testValid(test_8859_query); }

		private static final SubtypeQuery test_8860_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("({int, int} | int)"));
		@Test public void test_8860() { testValid(test_8860_query); }

		private static final SubtypeQuery test_8861_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("((any | any) | int)"));
		@Test public void test_8861() { testValid(test_8861_query); }

		private static final SubtypeQuery test_8862_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("((int | any) | int)"));
		@Test public void test_8862() { testValid(test_8862_query); }

		private static final SubtypeQuery test_8863_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("(any | {any})"));
		@Test public void test_8863() { testValid(test_8863_query); }

		private static final SubtypeQuery test_8864_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("(int | {any})"));
		@Test public void test_8864() { testValid(test_8864_query); }

		private static final SubtypeQuery test_8865_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("({any, any} | {any})"));
		@Test public void test_8865() { testValid(test_8865_query); }

		private static final SubtypeQuery test_8866_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("(any | {int})"));
		@Test public void test_8866() { testValid(test_8866_query); }

		private static final SubtypeQuery test_8867_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("((any | any) | {int})"));
		@Test public void test_8867() { testValid(test_8867_query); }

		private static final SubtypeQuery test_8868_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("(!int | !any)"));
		@Test public void test_8868() { testValid(test_8868_query); }

		private static final SubtypeQuery test_8869_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("({int, any} | !any)"));
		@Test public void test_8869() { testValid(test_8869_query); }

		private static final SubtypeQuery test_8870_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("((any | any) | !any)"));
		@Test public void test_8870() { testValid(test_8870_query); }

		private static final SubtypeQuery test_8871_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("({int} | !int)"));
		@Test public void test_8871() { testValid(test_8871_query); }

		private static final SubtypeQuery test_8872_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("(!any | !int)"));
		@Test public void test_8872() { testValid(test_8872_query); }

		private static final SubtypeQuery test_8873_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("(!int | {any, any})"));
		@Test public void test_8873() { testValid(test_8873_query); }

		private static final SubtypeQuery test_8874_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_8874() { testValid(test_8874_query); }

		private static final SubtypeQuery test_8875_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_8875() { testValid(test_8875_query); }

		private static final SubtypeQuery test_8876_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_8876() { testValid(test_8876_query); }

		private static final SubtypeQuery test_8877_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_8877() { testValid(test_8877_query); }

		private static final SubtypeQuery test_8878_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_8878() { testValid(test_8878_query); }

		private static final SubtypeQuery test_8879_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_8879() { testValid(test_8879_query); }

		private static final SubtypeQuery test_8880_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("({int} | (any | any))"));
		@Test public void test_8880() { testValid(test_8880_query); }

		private static final SubtypeQuery test_8881_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_8881() { testValid(test_8881_query); }

		private static final SubtypeQuery test_8882_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_8882() { testValid(test_8882_query); }

		private static final SubtypeQuery test_8883_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_8883() { testValid(test_8883_query); }

		private static final SubtypeQuery test_8884_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_8884() { testValid(test_8884_query); }

		private static final SubtypeQuery test_8885_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_8885() { testValid(test_8885_query); }

		private static final SubtypeQuery test_8886_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_8886() { testValid(test_8886_query); }

		private static final SubtypeQuery test_8887_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("(int | (any | int))"));
		@Test public void test_8887() { testValid(test_8887_query); }

		private static final SubtypeQuery test_8888_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_8888() { testValid(test_8888_query); }

		private static final SubtypeQuery test_8889_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_8889() { testValid(test_8889_query); }

		private static final SubtypeQuery test_8890_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_8890() { testValid(test_8890_query); }

		private static final SubtypeQuery test_8891_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_8891() { testValid(test_8891_query); }

		private static final SubtypeQuery test_8892_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("(!any | (int | int))"));
		@Test public void test_8892() { testValid(test_8892_query); }

		private static final SubtypeQuery test_8893_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_8893() { testValid(test_8893_query); }

		private static final SubtypeQuery test_8894_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("(int | (any & any))"));
		@Test public void test_8894() { testValid(test_8894_query); }

		private static final SubtypeQuery test_8895_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("(!any | (any & any))"));
		@Test public void test_8895() { testValid(test_8895_query); }

		private static final SubtypeQuery test_8896_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_8896() { testValid(test_8896_query); }

		private static final SubtypeQuery test_8897_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_8897() { testValid(test_8897_query); }

		private static final SubtypeQuery test_8898_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_8898() { testValid(test_8898_query); }

		private static final SubtypeQuery test_8899_query = createSubtypeQuery(parseWhiley("({int, any} | (any | int))"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_8899() { testValid(test_8899_query); }

		private static final SubtypeQuery test_8900_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("!int"));
		@Test public void test_8900() { testValid(test_8900_query); }

		private static final SubtypeQuery test_8901_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("(any | any)"));
		@Test public void test_8901() { testValid(test_8901_query); }

		private static final SubtypeQuery test_8902_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("(any & any)"));
		@Test public void test_8902() { testValid(test_8902_query); }

		private static final SubtypeQuery test_8903_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{{int, int}}"));
		@Test public void test_8903() { testValid(test_8903_query); }

		private static final SubtypeQuery test_8904_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("!(int | int)"));
		@Test public void test_8904() { testValid(test_8904_query); }

		private static final SubtypeQuery test_8905_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{{any, any}, any}"));
		@Test public void test_8905() { testValid(test_8905_query); }

		private static final SubtypeQuery test_8906_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{{any, int}, any}"));
		@Test public void test_8906() { testValid(test_8906_query); }

		private static final SubtypeQuery test_8907_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{{any}, int}"));
		@Test public void test_8907() { testValid(test_8907_query); }

		private static final SubtypeQuery test_8908_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{{any, any}, int}"));
		@Test public void test_8908() { testValid(test_8908_query); }

		private static final SubtypeQuery test_8909_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{(any | int), int}"));
		@Test public void test_8909() { testValid(test_8909_query); }

		private static final SubtypeQuery test_8910_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_8910() { testValid(test_8910_query); }

		private static final SubtypeQuery test_8911_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{!any, {int}}"));
		@Test public void test_8911() { testValid(test_8911_query); }

		private static final SubtypeQuery test_8912_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_8912() { testValid(test_8912_query); }

		private static final SubtypeQuery test_8913_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_8913() { testValid(test_8913_query); }

		private static final SubtypeQuery test_8914_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{any, !any}"));
		@Test public void test_8914() { testValid(test_8914_query); }

		private static final SubtypeQuery test_8915_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{{any}, !int}"));
		@Test public void test_8915() { testValid(test_8915_query); }

		private static final SubtypeQuery test_8916_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_8916() { testValid(test_8916_query); }

		private static final SubtypeQuery test_8917_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_8917() { testValid(test_8917_query); }

		private static final SubtypeQuery test_8918_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{(int & int), !int}"));
		@Test public void test_8918() { testValid(test_8918_query); }

		private static final SubtypeQuery test_8919_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_8919() { testValid(test_8919_query); }

		private static final SubtypeQuery test_8920_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_8920() { testValid(test_8920_query); }

		private static final SubtypeQuery test_8921_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_8921() { testValid(test_8921_query); }

		private static final SubtypeQuery test_8922_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_8922() { testValid(test_8922_query); }

		private static final SubtypeQuery test_8923_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_8923() { testValid(test_8923_query); }

		private static final SubtypeQuery test_8924_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_8924() { testValid(test_8924_query); }

		private static final SubtypeQuery test_8925_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_8925() { testValid(test_8925_query); }

		private static final SubtypeQuery test_8926_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{any, {any, int}}"));
		@Test public void test_8926() { testValid(test_8926_query); }

		private static final SubtypeQuery test_8927_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_8927() { testValid(test_8927_query); }

		private static final SubtypeQuery test_8928_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_8928() { testValid(test_8928_query); }

		private static final SubtypeQuery test_8929_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_8929() { testValid(test_8929_query); }

		private static final SubtypeQuery test_8930_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_8930() { testValid(test_8930_query); }

		private static final SubtypeQuery test_8931_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_8931() { testValid(test_8931_query); }

		private static final SubtypeQuery test_8932_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_8932() { testValid(test_8932_query); }

		private static final SubtypeQuery test_8933_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_8933() { testValid(test_8933_query); }

		private static final SubtypeQuery test_8934_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_8934() { testValid(test_8934_query); }

		private static final SubtypeQuery test_8935_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_8935() { testValid(test_8935_query); }

		private static final SubtypeQuery test_8936_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_8936() { testValid(test_8936_query); }

		private static final SubtypeQuery test_8937_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{int, (int | int)}"));
		@Test public void test_8937() { testValid(test_8937_query); }

		private static final SubtypeQuery test_8938_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_8938() { testValid(test_8938_query); }

		private static final SubtypeQuery test_8939_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{any, (any & any)}"));
		@Test public void test_8939() { testValid(test_8939_query); }

		private static final SubtypeQuery test_8940_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_8940() { testValid(test_8940_query); }

		private static final SubtypeQuery test_8941_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_8941() { testValid(test_8941_query); }

		private static final SubtypeQuery test_8942_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_8942() { testValid(test_8942_query); }

		private static final SubtypeQuery test_8943_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_8943() { testValid(test_8943_query); }

		private static final SubtypeQuery test_8944_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_8944() { testValid(test_8944_query); }

		private static final SubtypeQuery test_8945_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_8945() { testValid(test_8945_query); }

		private static final SubtypeQuery test_8946_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_8946() { testValid(test_8946_query); }

		private static final SubtypeQuery test_8947_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_8947() { testValid(test_8947_query); }

		private static final SubtypeQuery test_8948_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{any, (any & int)}"));
		@Test public void test_8948() { testValid(test_8948_query); }

		private static final SubtypeQuery test_8949_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_8949() { testValid(test_8949_query); }

		private static final SubtypeQuery test_8950_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_8950() { testValid(test_8950_query); }

		private static final SubtypeQuery test_8951_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_8951() { testValid(test_8951_query); }

		private static final SubtypeQuery test_8952_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{int, (int & int)}"));
		@Test public void test_8952() { testValid(test_8952_query); }

		private static final SubtypeQuery test_8953_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_8953() { testValid(test_8953_query); }

		private static final SubtypeQuery test_8954_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_8954() { testValid(test_8954_query); }

		private static final SubtypeQuery test_8955_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_8955() { testValid(test_8955_query); }

		private static final SubtypeQuery test_8956_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("(!any | any)"));
		@Test public void test_8956() { testValid(test_8956_query); }

		private static final SubtypeQuery test_8957_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("({int, any} | any)"));
		@Test public void test_8957() { testValid(test_8957_query); }

		private static final SubtypeQuery test_8958_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("({any, int} | any)"));
		@Test public void test_8958() { testValid(test_8958_query); }

		private static final SubtypeQuery test_8959_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("((int & int) | any)"));
		@Test public void test_8959() { testValid(test_8959_query); }

		private static final SubtypeQuery test_8960_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("({int, int} | int)"));
		@Test public void test_8960() { testValid(test_8960_query); }

		private static final SubtypeQuery test_8961_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("((any | any) | int)"));
		@Test public void test_8961() { testValid(test_8961_query); }

		private static final SubtypeQuery test_8962_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("((int | any) | int)"));
		@Test public void test_8962() { testValid(test_8962_query); }

		private static final SubtypeQuery test_8963_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("(any | {any})"));
		@Test public void test_8963() { testValid(test_8963_query); }

		private static final SubtypeQuery test_8964_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("(int | {any})"));
		@Test public void test_8964() { testValid(test_8964_query); }

		private static final SubtypeQuery test_8965_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("({any, any} | {any})"));
		@Test public void test_8965() { testValid(test_8965_query); }

		private static final SubtypeQuery test_8966_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("(any | {int})"));
		@Test public void test_8966() { testValid(test_8966_query); }

		private static final SubtypeQuery test_8967_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("((any | any) | {int})"));
		@Test public void test_8967() { testValid(test_8967_query); }

		private static final SubtypeQuery test_8968_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("(!int | !any)"));
		@Test public void test_8968() { testValid(test_8968_query); }

		private static final SubtypeQuery test_8969_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("({int, any} | !any)"));
		@Test public void test_8969() { testValid(test_8969_query); }

		private static final SubtypeQuery test_8970_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("((any | any) | !any)"));
		@Test public void test_8970() { testValid(test_8970_query); }

		private static final SubtypeQuery test_8971_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("({int} | !int)"));
		@Test public void test_8971() { testValid(test_8971_query); }

		private static final SubtypeQuery test_8972_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("(!any | !int)"));
		@Test public void test_8972() { testValid(test_8972_query); }

		private static final SubtypeQuery test_8973_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("(!int | {any, any})"));
		@Test public void test_8973() { testValid(test_8973_query); }

		private static final SubtypeQuery test_8974_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_8974() { testValid(test_8974_query); }

		private static final SubtypeQuery test_8975_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_8975() { testValid(test_8975_query); }

		private static final SubtypeQuery test_8976_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_8976() { testValid(test_8976_query); }

		private static final SubtypeQuery test_8977_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_8977() { testValid(test_8977_query); }

		private static final SubtypeQuery test_8978_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_8978() { testValid(test_8978_query); }

		private static final SubtypeQuery test_8979_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_8979() { testValid(test_8979_query); }

		private static final SubtypeQuery test_8980_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("({int} | (any | any))"));
		@Test public void test_8980() { testValid(test_8980_query); }

		private static final SubtypeQuery test_8981_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_8981() { testValid(test_8981_query); }

		private static final SubtypeQuery test_8982_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_8982() { testValid(test_8982_query); }

		private static final SubtypeQuery test_8983_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_8983() { testValid(test_8983_query); }

		private static final SubtypeQuery test_8984_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_8984() { testValid(test_8984_query); }

		private static final SubtypeQuery test_8985_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_8985() { testValid(test_8985_query); }

		private static final SubtypeQuery test_8986_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_8986() { testValid(test_8986_query); }

		private static final SubtypeQuery test_8987_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("(int | (any | int))"));
		@Test public void test_8987() { testValid(test_8987_query); }

		private static final SubtypeQuery test_8988_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_8988() { testValid(test_8988_query); }

		private static final SubtypeQuery test_8989_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_8989() { testValid(test_8989_query); }

		private static final SubtypeQuery test_8990_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_8990() { testValid(test_8990_query); }

		private static final SubtypeQuery test_8991_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_8991() { testValid(test_8991_query); }

		private static final SubtypeQuery test_8992_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("(!any | (int | int))"));
		@Test public void test_8992() { testValid(test_8992_query); }

		private static final SubtypeQuery test_8993_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_8993() { testValid(test_8993_query); }

		private static final SubtypeQuery test_8994_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("(int | (any & any))"));
		@Test public void test_8994() { testValid(test_8994_query); }

		private static final SubtypeQuery test_8995_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("(!any | (any & any))"));
		@Test public void test_8995() { testValid(test_8995_query); }

		private static final SubtypeQuery test_8996_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_8996() { testValid(test_8996_query); }

		private static final SubtypeQuery test_8997_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_8997() { testValid(test_8997_query); }

		private static final SubtypeQuery test_8998_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_8998() { testValid(test_8998_query); }

		private static final SubtypeQuery test_8999_query = createSubtypeQuery(parseWhiley("((any | any) | (any | int))"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_8999() { testValid(test_8999_query); }

	}
	public static class Part_9 {
		private static final SubtypeQuery test_9000_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("!int"));
		@Test public void test_9000() { testValid(test_9000_query); }

		private static final SubtypeQuery test_9001_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("(any | any)"));
		@Test public void test_9001() { testValid(test_9001_query); }

		private static final SubtypeQuery test_9002_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("(any & any)"));
		@Test public void test_9002() { testValid(test_9002_query); }

		private static final SubtypeQuery test_9003_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{{int, int}}"));
		@Test public void test_9003() { testValid(test_9003_query); }

		private static final SubtypeQuery test_9004_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("!(int | int)"));
		@Test public void test_9004() { testValid(test_9004_query); }

		private static final SubtypeQuery test_9005_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{{any, any}, any}"));
		@Test public void test_9005() { testValid(test_9005_query); }

		private static final SubtypeQuery test_9006_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{{any, int}, any}"));
		@Test public void test_9006() { testValid(test_9006_query); }

		private static final SubtypeQuery test_9007_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{{any}, int}"));
		@Test public void test_9007() { testValid(test_9007_query); }

		private static final SubtypeQuery test_9008_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{{any, any}, int}"));
		@Test public void test_9008() { testValid(test_9008_query); }

		private static final SubtypeQuery test_9009_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{(any | int), int}"));
		@Test public void test_9009() { testValid(test_9009_query); }

		private static final SubtypeQuery test_9010_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_9010() { testValid(test_9010_query); }

		private static final SubtypeQuery test_9011_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{!any, {int}}"));
		@Test public void test_9011() { testValid(test_9011_query); }

		private static final SubtypeQuery test_9012_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_9012() { testValid(test_9012_query); }

		private static final SubtypeQuery test_9013_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_9013() { testValid(test_9013_query); }

		private static final SubtypeQuery test_9014_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{any, !any}"));
		@Test public void test_9014() { testValid(test_9014_query); }

		private static final SubtypeQuery test_9015_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{{any}, !int}"));
		@Test public void test_9015() { testValid(test_9015_query); }

		private static final SubtypeQuery test_9016_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_9016() { testValid(test_9016_query); }

		private static final SubtypeQuery test_9017_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_9017() { testValid(test_9017_query); }

		private static final SubtypeQuery test_9018_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{(int & int), !int}"));
		@Test public void test_9018() { testValid(test_9018_query); }

		private static final SubtypeQuery test_9019_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_9019() { testValid(test_9019_query); }

		private static final SubtypeQuery test_9020_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_9020() { testValid(test_9020_query); }

		private static final SubtypeQuery test_9021_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_9021() { testValid(test_9021_query); }

		private static final SubtypeQuery test_9022_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_9022() { testValid(test_9022_query); }

		private static final SubtypeQuery test_9023_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_9023() { testValid(test_9023_query); }

		private static final SubtypeQuery test_9024_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_9024() { testValid(test_9024_query); }

		private static final SubtypeQuery test_9025_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_9025() { testValid(test_9025_query); }

		private static final SubtypeQuery test_9026_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{any, {any, int}}"));
		@Test public void test_9026() { testValid(test_9026_query); }

		private static final SubtypeQuery test_9027_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_9027() { testValid(test_9027_query); }

		private static final SubtypeQuery test_9028_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_9028() { testValid(test_9028_query); }

		private static final SubtypeQuery test_9029_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_9029() { testValid(test_9029_query); }

		private static final SubtypeQuery test_9030_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_9030() { testValid(test_9030_query); }

		private static final SubtypeQuery test_9031_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_9031() { testValid(test_9031_query); }

		private static final SubtypeQuery test_9032_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_9032() { testValid(test_9032_query); }

		private static final SubtypeQuery test_9033_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_9033() { testValid(test_9033_query); }

		private static final SubtypeQuery test_9034_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_9034() { testValid(test_9034_query); }

		private static final SubtypeQuery test_9035_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_9035() { testValid(test_9035_query); }

		private static final SubtypeQuery test_9036_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_9036() { testValid(test_9036_query); }

		private static final SubtypeQuery test_9037_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{int, (int | int)}"));
		@Test public void test_9037() { testValid(test_9037_query); }

		private static final SubtypeQuery test_9038_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_9038() { testValid(test_9038_query); }

		private static final SubtypeQuery test_9039_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{any, (any & any)}"));
		@Test public void test_9039() { testValid(test_9039_query); }

		private static final SubtypeQuery test_9040_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_9040() { testValid(test_9040_query); }

		private static final SubtypeQuery test_9041_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_9041() { testValid(test_9041_query); }

		private static final SubtypeQuery test_9042_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_9042() { testValid(test_9042_query); }

		private static final SubtypeQuery test_9043_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_9043() { testValid(test_9043_query); }

		private static final SubtypeQuery test_9044_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_9044() { testValid(test_9044_query); }

		private static final SubtypeQuery test_9045_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_9045() { testValid(test_9045_query); }

		private static final SubtypeQuery test_9046_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_9046() { testValid(test_9046_query); }

		private static final SubtypeQuery test_9047_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_9047() { testValid(test_9047_query); }

		private static final SubtypeQuery test_9048_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{any, (any & int)}"));
		@Test public void test_9048() { testValid(test_9048_query); }

		private static final SubtypeQuery test_9049_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_9049() { testValid(test_9049_query); }

		private static final SubtypeQuery test_9050_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_9050() { testValid(test_9050_query); }

		private static final SubtypeQuery test_9051_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_9051() { testValid(test_9051_query); }

		private static final SubtypeQuery test_9052_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{int, (int & int)}"));
		@Test public void test_9052() { testValid(test_9052_query); }

		private static final SubtypeQuery test_9053_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_9053() { testValid(test_9053_query); }

		private static final SubtypeQuery test_9054_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_9054() { testValid(test_9054_query); }

		private static final SubtypeQuery test_9055_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_9055() { testValid(test_9055_query); }

		private static final SubtypeQuery test_9056_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("(!any | any)"));
		@Test public void test_9056() { testValid(test_9056_query); }

		private static final SubtypeQuery test_9057_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("({int, any} | any)"));
		@Test public void test_9057() { testValid(test_9057_query); }

		private static final SubtypeQuery test_9058_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("({any, int} | any)"));
		@Test public void test_9058() { testValid(test_9058_query); }

		private static final SubtypeQuery test_9059_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("((int & int) | any)"));
		@Test public void test_9059() { testValid(test_9059_query); }

		private static final SubtypeQuery test_9060_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("({int, int} | int)"));
		@Test public void test_9060() { testValid(test_9060_query); }

		private static final SubtypeQuery test_9061_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("((any | any) | int)"));
		@Test public void test_9061() { testValid(test_9061_query); }

		private static final SubtypeQuery test_9062_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("((int | any) | int)"));
		@Test public void test_9062() { testValid(test_9062_query); }

		private static final SubtypeQuery test_9063_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("(any | {any})"));
		@Test public void test_9063() { testValid(test_9063_query); }

		private static final SubtypeQuery test_9064_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("(int | {any})"));
		@Test public void test_9064() { testValid(test_9064_query); }

		private static final SubtypeQuery test_9065_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("({any, any} | {any})"));
		@Test public void test_9065() { testValid(test_9065_query); }

		private static final SubtypeQuery test_9066_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("(any | {int})"));
		@Test public void test_9066() { testValid(test_9066_query); }

		private static final SubtypeQuery test_9067_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("((any | any) | {int})"));
		@Test public void test_9067() { testValid(test_9067_query); }

		private static final SubtypeQuery test_9068_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("(!int | !any)"));
		@Test public void test_9068() { testValid(test_9068_query); }

		private static final SubtypeQuery test_9069_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("({int, any} | !any)"));
		@Test public void test_9069() { testValid(test_9069_query); }

		private static final SubtypeQuery test_9070_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("((any | any) | !any)"));
		@Test public void test_9070() { testValid(test_9070_query); }

		private static final SubtypeQuery test_9071_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("({int} | !int)"));
		@Test public void test_9071() { testValid(test_9071_query); }

		private static final SubtypeQuery test_9072_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("(!any | !int)"));
		@Test public void test_9072() { testValid(test_9072_query); }

		private static final SubtypeQuery test_9073_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("(!int | {any, any})"));
		@Test public void test_9073() { testValid(test_9073_query); }

		private static final SubtypeQuery test_9074_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_9074() { testValid(test_9074_query); }

		private static final SubtypeQuery test_9075_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_9075() { testValid(test_9075_query); }

		private static final SubtypeQuery test_9076_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_9076() { testValid(test_9076_query); }

		private static final SubtypeQuery test_9077_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_9077() { testValid(test_9077_query); }

		private static final SubtypeQuery test_9078_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_9078() { testValid(test_9078_query); }

		private static final SubtypeQuery test_9079_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_9079() { testValid(test_9079_query); }

		private static final SubtypeQuery test_9080_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("({int} | (any | any))"));
		@Test public void test_9080() { testValid(test_9080_query); }

		private static final SubtypeQuery test_9081_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_9081() { testValid(test_9081_query); }

		private static final SubtypeQuery test_9082_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_9082() { testValid(test_9082_query); }

		private static final SubtypeQuery test_9083_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_9083() { testValid(test_9083_query); }

		private static final SubtypeQuery test_9084_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_9084() { testValid(test_9084_query); }

		private static final SubtypeQuery test_9085_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_9085() { testValid(test_9085_query); }

		private static final SubtypeQuery test_9086_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_9086() { testValid(test_9086_query); }

		private static final SubtypeQuery test_9087_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("(int | (any | int))"));
		@Test public void test_9087() { testValid(test_9087_query); }

		private static final SubtypeQuery test_9088_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_9088() { testValid(test_9088_query); }

		private static final SubtypeQuery test_9089_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_9089() { testValid(test_9089_query); }

		private static final SubtypeQuery test_9090_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_9090() { testValid(test_9090_query); }

		private static final SubtypeQuery test_9091_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_9091() { testValid(test_9091_query); }

		private static final SubtypeQuery test_9092_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("(!any | (int | int))"));
		@Test public void test_9092() { testValid(test_9092_query); }

		private static final SubtypeQuery test_9093_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_9093() { testValid(test_9093_query); }

		private static final SubtypeQuery test_9094_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("(int | (any & any))"));
		@Test public void test_9094() { testValid(test_9094_query); }

		private static final SubtypeQuery test_9095_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("(!any | (any & any))"));
		@Test public void test_9095() { testValid(test_9095_query); }

		private static final SubtypeQuery test_9096_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_9096() { testValid(test_9096_query); }

		private static final SubtypeQuery test_9097_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_9097() { testValid(test_9097_query); }

		private static final SubtypeQuery test_9098_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_9098() { testValid(test_9098_query); }

		private static final SubtypeQuery test_9099_query = createSubtypeQuery(parseWhiley("((any | int) | (any | int))"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_9099() { testValid(test_9099_query); }

		private static final SubtypeQuery test_9100_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("!int"));
		@Test public void test_9100() { testValid(test_9100_query); }

		private static final SubtypeQuery test_9101_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("(any | any)"));
		@Test public void test_9101() { testValid(test_9101_query); }

		private static final SubtypeQuery test_9102_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("(any & any)"));
		@Test public void test_9102() { testValid(test_9102_query); }

		private static final SubtypeQuery test_9103_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{{int, int}}"));
		@Test public void test_9103() { testValid(test_9103_query); }

		private static final SubtypeQuery test_9104_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("!(int | int)"));
		@Test public void test_9104() { testValid(test_9104_query); }

		private static final SubtypeQuery test_9105_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{{any, any}, any}"));
		@Test public void test_9105() { testValid(test_9105_query); }

		private static final SubtypeQuery test_9106_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{{any, int}, any}"));
		@Test public void test_9106() { testValid(test_9106_query); }

		private static final SubtypeQuery test_9107_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{{any}, int}"));
		@Test public void test_9107() { testValid(test_9107_query); }

		private static final SubtypeQuery test_9108_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{{any, any}, int}"));
		@Test public void test_9108() { testValid(test_9108_query); }

		private static final SubtypeQuery test_9109_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{(any | int), int}"));
		@Test public void test_9109() { testValid(test_9109_query); }

		private static final SubtypeQuery test_9110_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_9110() { testValid(test_9110_query); }

		private static final SubtypeQuery test_9111_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{!any, {int}}"));
		@Test public void test_9111() { testValid(test_9111_query); }

		private static final SubtypeQuery test_9112_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_9112() { testValid(test_9112_query); }

		private static final SubtypeQuery test_9113_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_9113() { testValid(test_9113_query); }

		private static final SubtypeQuery test_9114_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{any, !any}"));
		@Test public void test_9114() { testValid(test_9114_query); }

		private static final SubtypeQuery test_9115_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{{any}, !int}"));
		@Test public void test_9115() { testValid(test_9115_query); }

		private static final SubtypeQuery test_9116_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_9116() { testValid(test_9116_query); }

		private static final SubtypeQuery test_9117_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_9117() { testValid(test_9117_query); }

		private static final SubtypeQuery test_9118_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{(int & int), !int}"));
		@Test public void test_9118() { testValid(test_9118_query); }

		private static final SubtypeQuery test_9119_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_9119() { testValid(test_9119_query); }

		private static final SubtypeQuery test_9120_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_9120() { testValid(test_9120_query); }

		private static final SubtypeQuery test_9121_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_9121() { testValid(test_9121_query); }

		private static final SubtypeQuery test_9122_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_9122() { testValid(test_9122_query); }

		private static final SubtypeQuery test_9123_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_9123() { testValid(test_9123_query); }

		private static final SubtypeQuery test_9124_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_9124() { testValid(test_9124_query); }

		private static final SubtypeQuery test_9125_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_9125() { testValid(test_9125_query); }

		private static final SubtypeQuery test_9126_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{any, {any, int}}"));
		@Test public void test_9126() { testValid(test_9126_query); }

		private static final SubtypeQuery test_9127_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_9127() { testValid(test_9127_query); }

		private static final SubtypeQuery test_9128_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_9128() { testValid(test_9128_query); }

		private static final SubtypeQuery test_9129_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_9129() { testValid(test_9129_query); }

		private static final SubtypeQuery test_9130_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_9130() { testValid(test_9130_query); }

		private static final SubtypeQuery test_9131_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_9131() { testValid(test_9131_query); }

		private static final SubtypeQuery test_9132_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_9132() { testValid(test_9132_query); }

		private static final SubtypeQuery test_9133_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_9133() { testValid(test_9133_query); }

		private static final SubtypeQuery test_9134_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_9134() { testValid(test_9134_query); }

		private static final SubtypeQuery test_9135_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_9135() { testValid(test_9135_query); }

		private static final SubtypeQuery test_9136_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_9136() { testValid(test_9136_query); }

		private static final SubtypeQuery test_9137_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{int, (int | int)}"));
		@Test public void test_9137() { testValid(test_9137_query); }

		private static final SubtypeQuery test_9138_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_9138() { testValid(test_9138_query); }

		private static final SubtypeQuery test_9139_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{any, (any & any)}"));
		@Test public void test_9139() { testValid(test_9139_query); }

		private static final SubtypeQuery test_9140_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_9140() { testValid(test_9140_query); }

		private static final SubtypeQuery test_9141_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_9141() { testValid(test_9141_query); }

		private static final SubtypeQuery test_9142_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_9142() { testValid(test_9142_query); }

		private static final SubtypeQuery test_9143_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_9143() { testValid(test_9143_query); }

		private static final SubtypeQuery test_9144_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_9144() { testValid(test_9144_query); }

		private static final SubtypeQuery test_9145_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_9145() { testValid(test_9145_query); }

		private static final SubtypeQuery test_9146_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_9146() { testValid(test_9146_query); }

		private static final SubtypeQuery test_9147_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_9147() { testValid(test_9147_query); }

		private static final SubtypeQuery test_9148_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{any, (any & int)}"));
		@Test public void test_9148() { testValid(test_9148_query); }

		private static final SubtypeQuery test_9149_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_9149() { testValid(test_9149_query); }

		private static final SubtypeQuery test_9150_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_9150() { testValid(test_9150_query); }

		private static final SubtypeQuery test_9151_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_9151() { testValid(test_9151_query); }

		private static final SubtypeQuery test_9152_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{int, (int & int)}"));
		@Test public void test_9152() { testValid(test_9152_query); }

		private static final SubtypeQuery test_9153_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_9153() { testValid(test_9153_query); }

		private static final SubtypeQuery test_9154_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_9154() { testValid(test_9154_query); }

		private static final SubtypeQuery test_9155_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_9155() { testValid(test_9155_query); }

		private static final SubtypeQuery test_9156_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("(!any | any)"));
		@Test public void test_9156() { testValid(test_9156_query); }

		private static final SubtypeQuery test_9157_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("({int, any} | any)"));
		@Test public void test_9157() { testValid(test_9157_query); }

		private static final SubtypeQuery test_9158_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("({any, int} | any)"));
		@Test public void test_9158() { testValid(test_9158_query); }

		private static final SubtypeQuery test_9159_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("((int & int) | any)"));
		@Test public void test_9159() { testValid(test_9159_query); }

		private static final SubtypeQuery test_9160_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("({int, int} | int)"));
		@Test public void test_9160() { testValid(test_9160_query); }

		private static final SubtypeQuery test_9161_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("((any | any) | int)"));
		@Test public void test_9161() { testValid(test_9161_query); }

		private static final SubtypeQuery test_9162_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("((int | any) | int)"));
		@Test public void test_9162() { testValid(test_9162_query); }

		private static final SubtypeQuery test_9163_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("(any | {any})"));
		@Test public void test_9163() { testValid(test_9163_query); }

		private static final SubtypeQuery test_9164_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("(int | {any})"));
		@Test public void test_9164() { testValid(test_9164_query); }

		private static final SubtypeQuery test_9165_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("({any, any} | {any})"));
		@Test public void test_9165() { testValid(test_9165_query); }

		private static final SubtypeQuery test_9166_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("(any | {int})"));
		@Test public void test_9166() { testValid(test_9166_query); }

		private static final SubtypeQuery test_9167_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("((any | any) | {int})"));
		@Test public void test_9167() { testValid(test_9167_query); }

		private static final SubtypeQuery test_9168_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("(!int | !any)"));
		@Test public void test_9168() { testValid(test_9168_query); }

		private static final SubtypeQuery test_9169_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("({int, any} | !any)"));
		@Test public void test_9169() { testValid(test_9169_query); }

		private static final SubtypeQuery test_9170_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("((any | any) | !any)"));
		@Test public void test_9170() { testValid(test_9170_query); }

		private static final SubtypeQuery test_9171_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("({int} | !int)"));
		@Test public void test_9171() { testValid(test_9171_query); }

		private static final SubtypeQuery test_9172_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("(!any | !int)"));
		@Test public void test_9172() { testValid(test_9172_query); }

		private static final SubtypeQuery test_9173_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("(!int | {any, any})"));
		@Test public void test_9173() { testValid(test_9173_query); }

		private static final SubtypeQuery test_9174_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_9174() { testValid(test_9174_query); }

		private static final SubtypeQuery test_9175_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_9175() { testValid(test_9175_query); }

		private static final SubtypeQuery test_9176_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_9176() { testValid(test_9176_query); }

		private static final SubtypeQuery test_9177_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_9177() { testValid(test_9177_query); }

		private static final SubtypeQuery test_9178_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_9178() { testValid(test_9178_query); }

		private static final SubtypeQuery test_9179_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_9179() { testValid(test_9179_query); }

		private static final SubtypeQuery test_9180_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("({int} | (any | any))"));
		@Test public void test_9180() { testValid(test_9180_query); }

		private static final SubtypeQuery test_9181_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_9181() { testValid(test_9181_query); }

		private static final SubtypeQuery test_9182_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_9182() { testValid(test_9182_query); }

		private static final SubtypeQuery test_9183_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_9183() { testValid(test_9183_query); }

		private static final SubtypeQuery test_9184_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_9184() { testValid(test_9184_query); }

		private static final SubtypeQuery test_9185_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_9185() { testValid(test_9185_query); }

		private static final SubtypeQuery test_9186_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_9186() { testValid(test_9186_query); }

		private static final SubtypeQuery test_9187_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("(int | (any | int))"));
		@Test public void test_9187() { testValid(test_9187_query); }

		private static final SubtypeQuery test_9188_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_9188() { testValid(test_9188_query); }

		private static final SubtypeQuery test_9189_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_9189() { testValid(test_9189_query); }

		private static final SubtypeQuery test_9190_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_9190() { testValid(test_9190_query); }

		private static final SubtypeQuery test_9191_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_9191() { testValid(test_9191_query); }

		private static final SubtypeQuery test_9192_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("(!any | (int | int))"));
		@Test public void test_9192() { testValid(test_9192_query); }

		private static final SubtypeQuery test_9193_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_9193() { testValid(test_9193_query); }

		private static final SubtypeQuery test_9194_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("(int | (any & any))"));
		@Test public void test_9194() { testValid(test_9194_query); }

		private static final SubtypeQuery test_9195_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("(!any | (any & any))"));
		@Test public void test_9195() { testValid(test_9195_query); }

		private static final SubtypeQuery test_9196_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_9196() { testValid(test_9196_query); }

		private static final SubtypeQuery test_9197_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_9197() { testValid(test_9197_query); }

		private static final SubtypeQuery test_9198_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_9198() { testValid(test_9198_query); }

		private static final SubtypeQuery test_9199_query = createSubtypeQuery(parseWhiley("((int | int) | (any | int))"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_9199() { testValid(test_9199_query); }

		private static final SubtypeQuery test_9200_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("!int"));
		@Test public void test_9200() { testInvalid(test_9200_query); }

		private static final SubtypeQuery test_9201_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("(any | any)"));
		@Test public void test_9201() { testInvalid(test_9201_query); }

		private static final SubtypeQuery test_9202_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("(any & any)"));
		@Test public void test_9202() { testInvalid(test_9202_query); }

		private static final SubtypeQuery test_9203_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{{int, int}}"));
		@Test public void test_9203() { testInvalid(test_9203_query); }

		private static final SubtypeQuery test_9204_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("!(int | int)"));
		@Test public void test_9204() { testInvalid(test_9204_query); }

		private static final SubtypeQuery test_9205_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{{any, any}, any}"));
		@Test public void test_9205() { testInvalid(test_9205_query); }

		private static final SubtypeQuery test_9206_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{{any, int}, any}"));
		@Test public void test_9206() { testInvalid(test_9206_query); }

		private static final SubtypeQuery test_9207_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{{any}, int}"));
		@Test public void test_9207() { testInvalid(test_9207_query); }

		private static final SubtypeQuery test_9208_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{{any, any}, int}"));
		@Test public void test_9208() { testInvalid(test_9208_query); }

		private static final SubtypeQuery test_9209_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{(any | int), int}"));
		@Test public void test_9209() { testInvalid(test_9209_query); }

		private static final SubtypeQuery test_9210_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_9210() { testInvalid(test_9210_query); }

		private static final SubtypeQuery test_9211_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{!any, {int}}"));
		@Test public void test_9211() { testValid(test_9211_query); }

		private static final SubtypeQuery test_9212_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_9212() { testInvalid(test_9212_query); }

		private static final SubtypeQuery test_9213_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_9213() { testInvalid(test_9213_query); }

		private static final SubtypeQuery test_9214_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{any, !any}"));
		@Test public void test_9214() { testValid(test_9214_query); }

		private static final SubtypeQuery test_9215_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{{any}, !int}"));
		@Test public void test_9215() { testInvalid(test_9215_query); }

		private static final SubtypeQuery test_9216_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_9216() { testInvalid(test_9216_query); }

		private static final SubtypeQuery test_9217_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_9217() { testInvalid(test_9217_query); }

		private static final SubtypeQuery test_9218_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{(int & int), !int}"));
		@Test public void test_9218() { testInvalid(test_9218_query); }

		private static final SubtypeQuery test_9219_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_9219() { testInvalid(test_9219_query); }

		private static final SubtypeQuery test_9220_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_9220() { testInvalid(test_9220_query); }

		private static final SubtypeQuery test_9221_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_9221() { testInvalid(test_9221_query); }

		private static final SubtypeQuery test_9222_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_9222() { testInvalid(test_9222_query); }

		private static final SubtypeQuery test_9223_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_9223() { testInvalid(test_9223_query); }

		private static final SubtypeQuery test_9224_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_9224() { testInvalid(test_9224_query); }

		private static final SubtypeQuery test_9225_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_9225() { testInvalid(test_9225_query); }

		private static final SubtypeQuery test_9226_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{any, {any, int}}"));
		@Test public void test_9226() { testInvalid(test_9226_query); }

		private static final SubtypeQuery test_9227_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_9227() { testInvalid(test_9227_query); }

		private static final SubtypeQuery test_9228_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_9228() { testInvalid(test_9228_query); }

		private static final SubtypeQuery test_9229_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_9229() { testValid(test_9229_query); }

		private static final SubtypeQuery test_9230_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_9230() { testInvalid(test_9230_query); }

		private static final SubtypeQuery test_9231_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_9231() { testInvalid(test_9231_query); }

		private static final SubtypeQuery test_9232_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_9232() { testInvalid(test_9232_query); }

		private static final SubtypeQuery test_9233_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_9233() { testInvalid(test_9233_query); }

		private static final SubtypeQuery test_9234_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_9234() { testInvalid(test_9234_query); }

		private static final SubtypeQuery test_9235_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_9235() { testInvalid(test_9235_query); }

		private static final SubtypeQuery test_9236_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_9236() { testInvalid(test_9236_query); }

		private static final SubtypeQuery test_9237_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{int, (int | int)}"));
		@Test public void test_9237() { testInvalid(test_9237_query); }

		private static final SubtypeQuery test_9238_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_9238() { testInvalid(test_9238_query); }

		private static final SubtypeQuery test_9239_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{any, (any & any)}"));
		@Test public void test_9239() { testInvalid(test_9239_query); }

		private static final SubtypeQuery test_9240_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_9240() { testInvalid(test_9240_query); }

		private static final SubtypeQuery test_9241_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_9241() { testValid(test_9241_query); }

		private static final SubtypeQuery test_9242_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_9242() { testInvalid(test_9242_query); }

		private static final SubtypeQuery test_9243_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_9243() { testInvalid(test_9243_query); }

		private static final SubtypeQuery test_9244_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_9244() { testInvalid(test_9244_query); }

		private static final SubtypeQuery test_9245_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_9245() { testInvalid(test_9245_query); }

		private static final SubtypeQuery test_9246_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_9246() { testInvalid(test_9246_query); }

		private static final SubtypeQuery test_9247_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_9247() { testInvalid(test_9247_query); }

		private static final SubtypeQuery test_9248_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{any, (any & int)}"));
		@Test public void test_9248() { testInvalid(test_9248_query); }

		private static final SubtypeQuery test_9249_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_9249() { testInvalid(test_9249_query); }

		private static final SubtypeQuery test_9250_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_9250() { testInvalid(test_9250_query); }

		private static final SubtypeQuery test_9251_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_9251() { testInvalid(test_9251_query); }

		private static final SubtypeQuery test_9252_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{int, (int & int)}"));
		@Test public void test_9252() { testInvalid(test_9252_query); }

		private static final SubtypeQuery test_9253_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_9253() { testInvalid(test_9253_query); }

		private static final SubtypeQuery test_9254_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_9254() { testInvalid(test_9254_query); }

		private static final SubtypeQuery test_9255_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_9255() { testInvalid(test_9255_query); }

		private static final SubtypeQuery test_9256_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("(!any | any)"));
		@Test public void test_9256() { testInvalid(test_9256_query); }

		private static final SubtypeQuery test_9257_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("({int, any} | any)"));
		@Test public void test_9257() { testInvalid(test_9257_query); }

		private static final SubtypeQuery test_9258_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("({any, int} | any)"));
		@Test public void test_9258() { testInvalid(test_9258_query); }

		private static final SubtypeQuery test_9259_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("((int & int) | any)"));
		@Test public void test_9259() { testInvalid(test_9259_query); }

		private static final SubtypeQuery test_9260_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("({int, int} | int)"));
		@Test public void test_9260() { testInvalid(test_9260_query); }

		private static final SubtypeQuery test_9261_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("((any | any) | int)"));
		@Test public void test_9261() { testInvalid(test_9261_query); }

		private static final SubtypeQuery test_9262_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("((int | any) | int)"));
		@Test public void test_9262() { testInvalid(test_9262_query); }

		private static final SubtypeQuery test_9263_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("(any | {any})"));
		@Test public void test_9263() { testInvalid(test_9263_query); }

		private static final SubtypeQuery test_9264_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("(int | {any})"));
		@Test public void test_9264() { testInvalid(test_9264_query); }

		private static final SubtypeQuery test_9265_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("({any, any} | {any})"));
		@Test public void test_9265() { testInvalid(test_9265_query); }

		private static final SubtypeQuery test_9266_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("(any | {int})"));
		@Test public void test_9266() { testInvalid(test_9266_query); }

		private static final SubtypeQuery test_9267_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("((any | any) | {int})"));
		@Test public void test_9267() { testInvalid(test_9267_query); }

		private static final SubtypeQuery test_9268_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("(!int | !any)"));
		@Test public void test_9268() { testInvalid(test_9268_query); }

		private static final SubtypeQuery test_9269_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("({int, any} | !any)"));
		@Test public void test_9269() { testInvalid(test_9269_query); }

		private static final SubtypeQuery test_9270_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("((any | any) | !any)"));
		@Test public void test_9270() { testInvalid(test_9270_query); }

		private static final SubtypeQuery test_9271_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("({int} | !int)"));
		@Test public void test_9271() { testInvalid(test_9271_query); }

		private static final SubtypeQuery test_9272_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("(!any | !int)"));
		@Test public void test_9272() { testInvalid(test_9272_query); }

		private static final SubtypeQuery test_9273_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("(!int | {any, any})"));
		@Test public void test_9273() { testInvalid(test_9273_query); }

		private static final SubtypeQuery test_9274_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_9274() { testInvalid(test_9274_query); }

		private static final SubtypeQuery test_9275_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_9275() { testInvalid(test_9275_query); }

		private static final SubtypeQuery test_9276_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_9276() { testInvalid(test_9276_query); }

		private static final SubtypeQuery test_9277_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_9277() { testInvalid(test_9277_query); }

		private static final SubtypeQuery test_9278_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_9278() { testInvalid(test_9278_query); }

		private static final SubtypeQuery test_9279_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_9279() { testInvalid(test_9279_query); }

		private static final SubtypeQuery test_9280_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("({int} | (any | any))"));
		@Test public void test_9280() { testInvalid(test_9280_query); }

		private static final SubtypeQuery test_9281_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_9281() { testInvalid(test_9281_query); }

		private static final SubtypeQuery test_9282_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_9282() { testInvalid(test_9282_query); }

		private static final SubtypeQuery test_9283_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_9283() { testInvalid(test_9283_query); }

		private static final SubtypeQuery test_9284_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_9284() { testInvalid(test_9284_query); }

		private static final SubtypeQuery test_9285_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_9285() { testInvalid(test_9285_query); }

		private static final SubtypeQuery test_9286_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_9286() { testInvalid(test_9286_query); }

		private static final SubtypeQuery test_9287_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("(int | (any | int))"));
		@Test public void test_9287() { testInvalid(test_9287_query); }

		private static final SubtypeQuery test_9288_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_9288() { testInvalid(test_9288_query); }

		private static final SubtypeQuery test_9289_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_9289() { testInvalid(test_9289_query); }

		private static final SubtypeQuery test_9290_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_9290() { testInvalid(test_9290_query); }

		private static final SubtypeQuery test_9291_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_9291() { testInvalid(test_9291_query); }

		private static final SubtypeQuery test_9292_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("(!any | (int | int))"));
		@Test public void test_9292() { testValid(test_9292_query); }

		private static final SubtypeQuery test_9293_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_9293() { testInvalid(test_9293_query); }

		private static final SubtypeQuery test_9294_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("(int | (any & any))"));
		@Test public void test_9294() { testInvalid(test_9294_query); }

		private static final SubtypeQuery test_9295_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("(!any | (any & any))"));
		@Test public void test_9295() { testInvalid(test_9295_query); }

		private static final SubtypeQuery test_9296_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_9296() { testInvalid(test_9296_query); }

		private static final SubtypeQuery test_9297_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_9297() { testInvalid(test_9297_query); }

		private static final SubtypeQuery test_9298_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_9298() { testInvalid(test_9298_query); }

		private static final SubtypeQuery test_9299_query = createSubtypeQuery(parseWhiley("(!any | (int | int))"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_9299() { testInvalid(test_9299_query); }

		private static final SubtypeQuery test_9300_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("!int"));
		@Test public void test_9300() { testInvalid(test_9300_query); }

		private static final SubtypeQuery test_9301_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("(any | any)"));
		@Test public void test_9301() { testInvalid(test_9301_query); }

		private static final SubtypeQuery test_9302_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("(any & any)"));
		@Test public void test_9302() { testInvalid(test_9302_query); }

		private static final SubtypeQuery test_9303_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{{int, int}}"));
		@Test public void test_9303() { testInvalid(test_9303_query); }

		private static final SubtypeQuery test_9304_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("!(int | int)"));
		@Test public void test_9304() { testInvalid(test_9304_query); }

		private static final SubtypeQuery test_9305_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{{any, any}, any}"));
		@Test public void test_9305() { testInvalid(test_9305_query); }

		private static final SubtypeQuery test_9306_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{{any, int}, any}"));
		@Test public void test_9306() { testInvalid(test_9306_query); }

		private static final SubtypeQuery test_9307_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{{any}, int}"));
		@Test public void test_9307() { testValid(test_9307_query); }

		private static final SubtypeQuery test_9308_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{{any, any}, int}"));
		@Test public void test_9308() { testValid(test_9308_query); }

		private static final SubtypeQuery test_9309_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{(any | int), int}"));
		@Test public void test_9309() { testValid(test_9309_query); }

		private static final SubtypeQuery test_9310_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_9310() { testInvalid(test_9310_query); }

		private static final SubtypeQuery test_9311_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{!any, {int}}"));
		@Test public void test_9311() { testValid(test_9311_query); }

		private static final SubtypeQuery test_9312_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_9312() { testInvalid(test_9312_query); }

		private static final SubtypeQuery test_9313_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_9313() { testInvalid(test_9313_query); }

		private static final SubtypeQuery test_9314_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{any, !any}"));
		@Test public void test_9314() { testValid(test_9314_query); }

		private static final SubtypeQuery test_9315_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{{any}, !int}"));
		@Test public void test_9315() { testInvalid(test_9315_query); }

		private static final SubtypeQuery test_9316_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_9316() { testInvalid(test_9316_query); }

		private static final SubtypeQuery test_9317_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_9317() { testInvalid(test_9317_query); }

		private static final SubtypeQuery test_9318_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{(int & int), !int}"));
		@Test public void test_9318() { testInvalid(test_9318_query); }

		private static final SubtypeQuery test_9319_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_9319() { testInvalid(test_9319_query); }

		private static final SubtypeQuery test_9320_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_9320() { testInvalid(test_9320_query); }

		private static final SubtypeQuery test_9321_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_9321() { testInvalid(test_9321_query); }

		private static final SubtypeQuery test_9322_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_9322() { testInvalid(test_9322_query); }

		private static final SubtypeQuery test_9323_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_9323() { testInvalid(test_9323_query); }

		private static final SubtypeQuery test_9324_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_9324() { testInvalid(test_9324_query); }

		private static final SubtypeQuery test_9325_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_9325() { testInvalid(test_9325_query); }

		private static final SubtypeQuery test_9326_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{any, {any, int}}"));
		@Test public void test_9326() { testInvalid(test_9326_query); }

		private static final SubtypeQuery test_9327_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_9327() { testInvalid(test_9327_query); }

		private static final SubtypeQuery test_9328_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_9328() { testInvalid(test_9328_query); }

		private static final SubtypeQuery test_9329_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_9329() { testValid(test_9329_query); }

		private static final SubtypeQuery test_9330_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_9330() { testInvalid(test_9330_query); }

		private static final SubtypeQuery test_9331_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_9331() { testInvalid(test_9331_query); }

		private static final SubtypeQuery test_9332_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_9332() { testInvalid(test_9332_query); }

		private static final SubtypeQuery test_9333_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_9333() { testInvalid(test_9333_query); }

		private static final SubtypeQuery test_9334_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_9334() { testInvalid(test_9334_query); }

		private static final SubtypeQuery test_9335_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_9335() { testInvalid(test_9335_query); }

		private static final SubtypeQuery test_9336_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_9336() { testInvalid(test_9336_query); }

		private static final SubtypeQuery test_9337_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{int, (int | int)}"));
		@Test public void test_9337() { testValid(test_9337_query); }

		private static final SubtypeQuery test_9338_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_9338() { testValid(test_9338_query); }

		private static final SubtypeQuery test_9339_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{any, (any & any)}"));
		@Test public void test_9339() { testInvalid(test_9339_query); }

		private static final SubtypeQuery test_9340_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_9340() { testInvalid(test_9340_query); }

		private static final SubtypeQuery test_9341_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_9341() { testValid(test_9341_query); }

		private static final SubtypeQuery test_9342_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_9342() { testInvalid(test_9342_query); }

		private static final SubtypeQuery test_9343_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_9343() { testInvalid(test_9343_query); }

		private static final SubtypeQuery test_9344_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_9344() { testValid(test_9344_query); }

		private static final SubtypeQuery test_9345_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_9345() { testValid(test_9345_query); }

		private static final SubtypeQuery test_9346_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_9346() { testValid(test_9346_query); }

		private static final SubtypeQuery test_9347_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_9347() { testValid(test_9347_query); }

		private static final SubtypeQuery test_9348_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{any, (any & int)}"));
		@Test public void test_9348() { testValid(test_9348_query); }

		private static final SubtypeQuery test_9349_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_9349() { testValid(test_9349_query); }

		private static final SubtypeQuery test_9350_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_9350() { testValid(test_9350_query); }

		private static final SubtypeQuery test_9351_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_9351() { testValid(test_9351_query); }

		private static final SubtypeQuery test_9352_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{int, (int & int)}"));
		@Test public void test_9352() { testValid(test_9352_query); }

		private static final SubtypeQuery test_9353_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_9353() { testValid(test_9353_query); }

		private static final SubtypeQuery test_9354_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_9354() { testValid(test_9354_query); }

		private static final SubtypeQuery test_9355_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_9355() { testValid(test_9355_query); }

		private static final SubtypeQuery test_9356_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("(!any | any)"));
		@Test public void test_9356() { testInvalid(test_9356_query); }

		private static final SubtypeQuery test_9357_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("({int, any} | any)"));
		@Test public void test_9357() { testInvalid(test_9357_query); }

		private static final SubtypeQuery test_9358_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("({any, int} | any)"));
		@Test public void test_9358() { testInvalid(test_9358_query); }

		private static final SubtypeQuery test_9359_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("((int & int) | any)"));
		@Test public void test_9359() { testInvalid(test_9359_query); }

		private static final SubtypeQuery test_9360_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("({int, int} | int)"));
		@Test public void test_9360() { testValid(test_9360_query); }

		private static final SubtypeQuery test_9361_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("((any | any) | int)"));
		@Test public void test_9361() { testInvalid(test_9361_query); }

		private static final SubtypeQuery test_9362_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("((int | any) | int)"));
		@Test public void test_9362() { testInvalid(test_9362_query); }

		private static final SubtypeQuery test_9363_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("(any | {any})"));
		@Test public void test_9363() { testInvalid(test_9363_query); }

		private static final SubtypeQuery test_9364_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("(int | {any})"));
		@Test public void test_9364() { testInvalid(test_9364_query); }

		private static final SubtypeQuery test_9365_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("({any, any} | {any})"));
		@Test public void test_9365() { testInvalid(test_9365_query); }

		private static final SubtypeQuery test_9366_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("(any | {int})"));
		@Test public void test_9366() { testInvalid(test_9366_query); }

		private static final SubtypeQuery test_9367_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("((any | any) | {int})"));
		@Test public void test_9367() { testInvalid(test_9367_query); }

		private static final SubtypeQuery test_9368_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("(!int | !any)"));
		@Test public void test_9368() { testInvalid(test_9368_query); }

		private static final SubtypeQuery test_9369_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("({int, any} | !any)"));
		@Test public void test_9369() { testInvalid(test_9369_query); }

		private static final SubtypeQuery test_9370_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("((any | any) | !any)"));
		@Test public void test_9370() { testInvalid(test_9370_query); }

		private static final SubtypeQuery test_9371_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("({int} | !int)"));
		@Test public void test_9371() { testInvalid(test_9371_query); }

		private static final SubtypeQuery test_9372_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("(!any | !int)"));
		@Test public void test_9372() { testInvalid(test_9372_query); }

		private static final SubtypeQuery test_9373_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("(!int | {any, any})"));
		@Test public void test_9373() { testInvalid(test_9373_query); }

		private static final SubtypeQuery test_9374_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_9374() { testInvalid(test_9374_query); }

		private static final SubtypeQuery test_9375_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_9375() { testInvalid(test_9375_query); }

		private static final SubtypeQuery test_9376_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_9376() { testValid(test_9376_query); }

		private static final SubtypeQuery test_9377_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_9377() { testInvalid(test_9377_query); }

		private static final SubtypeQuery test_9378_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_9378() { testValid(test_9378_query); }

		private static final SubtypeQuery test_9379_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_9379() { testValid(test_9379_query); }

		private static final SubtypeQuery test_9380_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("({int} | (any | any))"));
		@Test public void test_9380() { testInvalid(test_9380_query); }

		private static final SubtypeQuery test_9381_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_9381() { testInvalid(test_9381_query); }

		private static final SubtypeQuery test_9382_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_9382() { testInvalid(test_9382_query); }

		private static final SubtypeQuery test_9383_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_9383() { testInvalid(test_9383_query); }

		private static final SubtypeQuery test_9384_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_9384() { testInvalid(test_9384_query); }

		private static final SubtypeQuery test_9385_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_9385() { testInvalid(test_9385_query); }

		private static final SubtypeQuery test_9386_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_9386() { testInvalid(test_9386_query); }

		private static final SubtypeQuery test_9387_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("(int | (any | int))"));
		@Test public void test_9387() { testInvalid(test_9387_query); }

		private static final SubtypeQuery test_9388_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_9388() { testInvalid(test_9388_query); }

		private static final SubtypeQuery test_9389_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_9389() { testInvalid(test_9389_query); }

		private static final SubtypeQuery test_9390_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_9390() { testInvalid(test_9390_query); }

		private static final SubtypeQuery test_9391_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_9391() { testInvalid(test_9391_query); }

		private static final SubtypeQuery test_9392_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("(!any | (int | int))"));
		@Test public void test_9392() { testValid(test_9392_query); }

		private static final SubtypeQuery test_9393_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_9393() { testValid(test_9393_query); }

		private static final SubtypeQuery test_9394_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("(int | (any & any))"));
		@Test public void test_9394() { testInvalid(test_9394_query); }

		private static final SubtypeQuery test_9395_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("(!any | (any & any))"));
		@Test public void test_9395() { testInvalid(test_9395_query); }

		private static final SubtypeQuery test_9396_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_9396() { testInvalid(test_9396_query); }

		private static final SubtypeQuery test_9397_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_9397() { testInvalid(test_9397_query); }

		private static final SubtypeQuery test_9398_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_9398() { testInvalid(test_9398_query); }

		private static final SubtypeQuery test_9399_query = createSubtypeQuery(parseWhiley("({any, int} | (int | int))"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_9399() { testInvalid(test_9399_query); }

		private static final SubtypeQuery test_9400_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("!int"));
		@Test public void test_9400() { testValid(test_9400_query); }

		private static final SubtypeQuery test_9401_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("(any | any)"));
		@Test public void test_9401() { testValid(test_9401_query); }

		private static final SubtypeQuery test_9402_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("(any & any)"));
		@Test public void test_9402() { testValid(test_9402_query); }

		private static final SubtypeQuery test_9403_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{{int, int}}"));
		@Test public void test_9403() { testValid(test_9403_query); }

		private static final SubtypeQuery test_9404_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("!(int | int)"));
		@Test public void test_9404() { testValid(test_9404_query); }

		private static final SubtypeQuery test_9405_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{{any, any}, any}"));
		@Test public void test_9405() { testValid(test_9405_query); }

		private static final SubtypeQuery test_9406_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{{any, int}, any}"));
		@Test public void test_9406() { testValid(test_9406_query); }

		private static final SubtypeQuery test_9407_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{{any}, int}"));
		@Test public void test_9407() { testValid(test_9407_query); }

		private static final SubtypeQuery test_9408_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{{any, any}, int}"));
		@Test public void test_9408() { testValid(test_9408_query); }

		private static final SubtypeQuery test_9409_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{(any | int), int}"));
		@Test public void test_9409() { testValid(test_9409_query); }

		private static final SubtypeQuery test_9410_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_9410() { testValid(test_9410_query); }

		private static final SubtypeQuery test_9411_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{!any, {int}}"));
		@Test public void test_9411() { testValid(test_9411_query); }

		private static final SubtypeQuery test_9412_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_9412() { testValid(test_9412_query); }

		private static final SubtypeQuery test_9413_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_9413() { testValid(test_9413_query); }

		private static final SubtypeQuery test_9414_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{any, !any}"));
		@Test public void test_9414() { testValid(test_9414_query); }

		private static final SubtypeQuery test_9415_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{{any}, !int}"));
		@Test public void test_9415() { testValid(test_9415_query); }

		private static final SubtypeQuery test_9416_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_9416() { testValid(test_9416_query); }

		private static final SubtypeQuery test_9417_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_9417() { testValid(test_9417_query); }

		private static final SubtypeQuery test_9418_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{(int & int), !int}"));
		@Test public void test_9418() { testValid(test_9418_query); }

		private static final SubtypeQuery test_9419_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_9419() { testValid(test_9419_query); }

		private static final SubtypeQuery test_9420_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_9420() { testValid(test_9420_query); }

		private static final SubtypeQuery test_9421_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_9421() { testValid(test_9421_query); }

		private static final SubtypeQuery test_9422_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_9422() { testValid(test_9422_query); }

		private static final SubtypeQuery test_9423_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_9423() { testValid(test_9423_query); }

		private static final SubtypeQuery test_9424_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_9424() { testValid(test_9424_query); }

		private static final SubtypeQuery test_9425_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_9425() { testValid(test_9425_query); }

		private static final SubtypeQuery test_9426_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{any, {any, int}}"));
		@Test public void test_9426() { testValid(test_9426_query); }

		private static final SubtypeQuery test_9427_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_9427() { testValid(test_9427_query); }

		private static final SubtypeQuery test_9428_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_9428() { testValid(test_9428_query); }

		private static final SubtypeQuery test_9429_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_9429() { testValid(test_9429_query); }

		private static final SubtypeQuery test_9430_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_9430() { testValid(test_9430_query); }

		private static final SubtypeQuery test_9431_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_9431() { testValid(test_9431_query); }

		private static final SubtypeQuery test_9432_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_9432() { testValid(test_9432_query); }

		private static final SubtypeQuery test_9433_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_9433() { testValid(test_9433_query); }

		private static final SubtypeQuery test_9434_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_9434() { testValid(test_9434_query); }

		private static final SubtypeQuery test_9435_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_9435() { testValid(test_9435_query); }

		private static final SubtypeQuery test_9436_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_9436() { testValid(test_9436_query); }

		private static final SubtypeQuery test_9437_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{int, (int | int)}"));
		@Test public void test_9437() { testValid(test_9437_query); }

		private static final SubtypeQuery test_9438_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_9438() { testValid(test_9438_query); }

		private static final SubtypeQuery test_9439_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{any, (any & any)}"));
		@Test public void test_9439() { testValid(test_9439_query); }

		private static final SubtypeQuery test_9440_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_9440() { testValid(test_9440_query); }

		private static final SubtypeQuery test_9441_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_9441() { testValid(test_9441_query); }

		private static final SubtypeQuery test_9442_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_9442() { testValid(test_9442_query); }

		private static final SubtypeQuery test_9443_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_9443() { testValid(test_9443_query); }

		private static final SubtypeQuery test_9444_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_9444() { testValid(test_9444_query); }

		private static final SubtypeQuery test_9445_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_9445() { testValid(test_9445_query); }

		private static final SubtypeQuery test_9446_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_9446() { testValid(test_9446_query); }

		private static final SubtypeQuery test_9447_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_9447() { testValid(test_9447_query); }

		private static final SubtypeQuery test_9448_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{any, (any & int)}"));
		@Test public void test_9448() { testValid(test_9448_query); }

		private static final SubtypeQuery test_9449_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_9449() { testValid(test_9449_query); }

		private static final SubtypeQuery test_9450_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_9450() { testValid(test_9450_query); }

		private static final SubtypeQuery test_9451_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_9451() { testValid(test_9451_query); }

		private static final SubtypeQuery test_9452_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{int, (int & int)}"));
		@Test public void test_9452() { testValid(test_9452_query); }

		private static final SubtypeQuery test_9453_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_9453() { testValid(test_9453_query); }

		private static final SubtypeQuery test_9454_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_9454() { testValid(test_9454_query); }

		private static final SubtypeQuery test_9455_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_9455() { testValid(test_9455_query); }

		private static final SubtypeQuery test_9456_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("(!any | any)"));
		@Test public void test_9456() { testValid(test_9456_query); }

		private static final SubtypeQuery test_9457_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("({int, any} | any)"));
		@Test public void test_9457() { testValid(test_9457_query); }

		private static final SubtypeQuery test_9458_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("({any, int} | any)"));
		@Test public void test_9458() { testValid(test_9458_query); }

		private static final SubtypeQuery test_9459_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("((int & int) | any)"));
		@Test public void test_9459() { testValid(test_9459_query); }

		private static final SubtypeQuery test_9460_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("({int, int} | int)"));
		@Test public void test_9460() { testValid(test_9460_query); }

		private static final SubtypeQuery test_9461_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("((any | any) | int)"));
		@Test public void test_9461() { testValid(test_9461_query); }

		private static final SubtypeQuery test_9462_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("((int | any) | int)"));
		@Test public void test_9462() { testValid(test_9462_query); }

		private static final SubtypeQuery test_9463_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("(any | {any})"));
		@Test public void test_9463() { testValid(test_9463_query); }

		private static final SubtypeQuery test_9464_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("(int | {any})"));
		@Test public void test_9464() { testValid(test_9464_query); }

		private static final SubtypeQuery test_9465_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("({any, any} | {any})"));
		@Test public void test_9465() { testValid(test_9465_query); }

		private static final SubtypeQuery test_9466_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("(any | {int})"));
		@Test public void test_9466() { testValid(test_9466_query); }

		private static final SubtypeQuery test_9467_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("((any | any) | {int})"));
		@Test public void test_9467() { testValid(test_9467_query); }

		private static final SubtypeQuery test_9468_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("(!int | !any)"));
		@Test public void test_9468() { testValid(test_9468_query); }

		private static final SubtypeQuery test_9469_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("({int, any} | !any)"));
		@Test public void test_9469() { testValid(test_9469_query); }

		private static final SubtypeQuery test_9470_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("((any | any) | !any)"));
		@Test public void test_9470() { testValid(test_9470_query); }

		private static final SubtypeQuery test_9471_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("({int} | !int)"));
		@Test public void test_9471() { testValid(test_9471_query); }

		private static final SubtypeQuery test_9472_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("(!any | !int)"));
		@Test public void test_9472() { testValid(test_9472_query); }

		private static final SubtypeQuery test_9473_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("(!int | {any, any})"));
		@Test public void test_9473() { testValid(test_9473_query); }

		private static final SubtypeQuery test_9474_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_9474() { testValid(test_9474_query); }

		private static final SubtypeQuery test_9475_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_9475() { testValid(test_9475_query); }

		private static final SubtypeQuery test_9476_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_9476() { testValid(test_9476_query); }

		private static final SubtypeQuery test_9477_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_9477() { testValid(test_9477_query); }

		private static final SubtypeQuery test_9478_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_9478() { testValid(test_9478_query); }

		private static final SubtypeQuery test_9479_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_9479() { testValid(test_9479_query); }

		private static final SubtypeQuery test_9480_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("({int} | (any | any))"));
		@Test public void test_9480() { testValid(test_9480_query); }

		private static final SubtypeQuery test_9481_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_9481() { testValid(test_9481_query); }

		private static final SubtypeQuery test_9482_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_9482() { testValid(test_9482_query); }

		private static final SubtypeQuery test_9483_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_9483() { testValid(test_9483_query); }

		private static final SubtypeQuery test_9484_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_9484() { testValid(test_9484_query); }

		private static final SubtypeQuery test_9485_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_9485() { testValid(test_9485_query); }

		private static final SubtypeQuery test_9486_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_9486() { testValid(test_9486_query); }

		private static final SubtypeQuery test_9487_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("(int | (any | int))"));
		@Test public void test_9487() { testValid(test_9487_query); }

		private static final SubtypeQuery test_9488_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_9488() { testValid(test_9488_query); }

		private static final SubtypeQuery test_9489_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_9489() { testValid(test_9489_query); }

		private static final SubtypeQuery test_9490_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_9490() { testValid(test_9490_query); }

		private static final SubtypeQuery test_9491_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_9491() { testValid(test_9491_query); }

		private static final SubtypeQuery test_9492_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("(!any | (int | int))"));
		@Test public void test_9492() { testValid(test_9492_query); }

		private static final SubtypeQuery test_9493_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_9493() { testValid(test_9493_query); }

		private static final SubtypeQuery test_9494_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("(int | (any & any))"));
		@Test public void test_9494() { testValid(test_9494_query); }

		private static final SubtypeQuery test_9495_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("(!any | (any & any))"));
		@Test public void test_9495() { testValid(test_9495_query); }

		private static final SubtypeQuery test_9496_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_9496() { testValid(test_9496_query); }

		private static final SubtypeQuery test_9497_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_9497() { testValid(test_9497_query); }

		private static final SubtypeQuery test_9498_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_9498() { testValid(test_9498_query); }

		private static final SubtypeQuery test_9499_query = createSubtypeQuery(parseWhiley("(int | (any & any))"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_9499() { testValid(test_9499_query); }

		private static final SubtypeQuery test_9500_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("!int"));
		@Test public void test_9500() { testValid(test_9500_query); }

		private static final SubtypeQuery test_9501_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("(any | any)"));
		@Test public void test_9501() { testValid(test_9501_query); }

		private static final SubtypeQuery test_9502_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("(any & any)"));
		@Test public void test_9502() { testValid(test_9502_query); }

		private static final SubtypeQuery test_9503_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{{int, int}}"));
		@Test public void test_9503() { testValid(test_9503_query); }

		private static final SubtypeQuery test_9504_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("!(int | int)"));
		@Test public void test_9504() { testValid(test_9504_query); }

		private static final SubtypeQuery test_9505_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{{any, any}, any}"));
		@Test public void test_9505() { testValid(test_9505_query); }

		private static final SubtypeQuery test_9506_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{{any, int}, any}"));
		@Test public void test_9506() { testValid(test_9506_query); }

		private static final SubtypeQuery test_9507_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{{any}, int}"));
		@Test public void test_9507() { testValid(test_9507_query); }

		private static final SubtypeQuery test_9508_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{{any, any}, int}"));
		@Test public void test_9508() { testValid(test_9508_query); }

		private static final SubtypeQuery test_9509_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{(any | int), int}"));
		@Test public void test_9509() { testValid(test_9509_query); }

		private static final SubtypeQuery test_9510_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_9510() { testValid(test_9510_query); }

		private static final SubtypeQuery test_9511_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{!any, {int}}"));
		@Test public void test_9511() { testValid(test_9511_query); }

		private static final SubtypeQuery test_9512_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_9512() { testValid(test_9512_query); }

		private static final SubtypeQuery test_9513_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_9513() { testValid(test_9513_query); }

		private static final SubtypeQuery test_9514_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{any, !any}"));
		@Test public void test_9514() { testValid(test_9514_query); }

		private static final SubtypeQuery test_9515_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{{any}, !int}"));
		@Test public void test_9515() { testValid(test_9515_query); }

		private static final SubtypeQuery test_9516_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_9516() { testValid(test_9516_query); }

		private static final SubtypeQuery test_9517_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_9517() { testValid(test_9517_query); }

		private static final SubtypeQuery test_9518_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{(int & int), !int}"));
		@Test public void test_9518() { testValid(test_9518_query); }

		private static final SubtypeQuery test_9519_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_9519() { testValid(test_9519_query); }

		private static final SubtypeQuery test_9520_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_9520() { testValid(test_9520_query); }

		private static final SubtypeQuery test_9521_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_9521() { testValid(test_9521_query); }

		private static final SubtypeQuery test_9522_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_9522() { testValid(test_9522_query); }

		private static final SubtypeQuery test_9523_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_9523() { testValid(test_9523_query); }

		private static final SubtypeQuery test_9524_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_9524() { testValid(test_9524_query); }

		private static final SubtypeQuery test_9525_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_9525() { testValid(test_9525_query); }

		private static final SubtypeQuery test_9526_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{any, {any, int}}"));
		@Test public void test_9526() { testValid(test_9526_query); }

		private static final SubtypeQuery test_9527_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_9527() { testValid(test_9527_query); }

		private static final SubtypeQuery test_9528_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_9528() { testValid(test_9528_query); }

		private static final SubtypeQuery test_9529_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_9529() { testValid(test_9529_query); }

		private static final SubtypeQuery test_9530_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_9530() { testValid(test_9530_query); }

		private static final SubtypeQuery test_9531_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_9531() { testValid(test_9531_query); }

		private static final SubtypeQuery test_9532_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_9532() { testValid(test_9532_query); }

		private static final SubtypeQuery test_9533_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_9533() { testValid(test_9533_query); }

		private static final SubtypeQuery test_9534_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_9534() { testValid(test_9534_query); }

		private static final SubtypeQuery test_9535_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_9535() { testValid(test_9535_query); }

		private static final SubtypeQuery test_9536_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_9536() { testValid(test_9536_query); }

		private static final SubtypeQuery test_9537_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{int, (int | int)}"));
		@Test public void test_9537() { testValid(test_9537_query); }

		private static final SubtypeQuery test_9538_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_9538() { testValid(test_9538_query); }

		private static final SubtypeQuery test_9539_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{any, (any & any)}"));
		@Test public void test_9539() { testValid(test_9539_query); }

		private static final SubtypeQuery test_9540_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_9540() { testValid(test_9540_query); }

		private static final SubtypeQuery test_9541_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_9541() { testValid(test_9541_query); }

		private static final SubtypeQuery test_9542_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_9542() { testValid(test_9542_query); }

		private static final SubtypeQuery test_9543_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_9543() { testValid(test_9543_query); }

		private static final SubtypeQuery test_9544_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_9544() { testValid(test_9544_query); }

		private static final SubtypeQuery test_9545_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_9545() { testValid(test_9545_query); }

		private static final SubtypeQuery test_9546_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_9546() { testValid(test_9546_query); }

		private static final SubtypeQuery test_9547_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_9547() { testValid(test_9547_query); }

		private static final SubtypeQuery test_9548_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{any, (any & int)}"));
		@Test public void test_9548() { testValid(test_9548_query); }

		private static final SubtypeQuery test_9549_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_9549() { testValid(test_9549_query); }

		private static final SubtypeQuery test_9550_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_9550() { testValid(test_9550_query); }

		private static final SubtypeQuery test_9551_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_9551() { testValid(test_9551_query); }

		private static final SubtypeQuery test_9552_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{int, (int & int)}"));
		@Test public void test_9552() { testValid(test_9552_query); }

		private static final SubtypeQuery test_9553_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_9553() { testValid(test_9553_query); }

		private static final SubtypeQuery test_9554_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_9554() { testValid(test_9554_query); }

		private static final SubtypeQuery test_9555_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_9555() { testValid(test_9555_query); }

		private static final SubtypeQuery test_9556_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("(!any | any)"));
		@Test public void test_9556() { testValid(test_9556_query); }

		private static final SubtypeQuery test_9557_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("({int, any} | any)"));
		@Test public void test_9557() { testValid(test_9557_query); }

		private static final SubtypeQuery test_9558_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("({any, int} | any)"));
		@Test public void test_9558() { testValid(test_9558_query); }

		private static final SubtypeQuery test_9559_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("((int & int) | any)"));
		@Test public void test_9559() { testValid(test_9559_query); }

		private static final SubtypeQuery test_9560_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("({int, int} | int)"));
		@Test public void test_9560() { testValid(test_9560_query); }

		private static final SubtypeQuery test_9561_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("((any | any) | int)"));
		@Test public void test_9561() { testValid(test_9561_query); }

		private static final SubtypeQuery test_9562_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("((int | any) | int)"));
		@Test public void test_9562() { testValid(test_9562_query); }

		private static final SubtypeQuery test_9563_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("(any | {any})"));
		@Test public void test_9563() { testValid(test_9563_query); }

		private static final SubtypeQuery test_9564_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("(int | {any})"));
		@Test public void test_9564() { testValid(test_9564_query); }

		private static final SubtypeQuery test_9565_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("({any, any} | {any})"));
		@Test public void test_9565() { testValid(test_9565_query); }

		private static final SubtypeQuery test_9566_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("(any | {int})"));
		@Test public void test_9566() { testValid(test_9566_query); }

		private static final SubtypeQuery test_9567_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("((any | any) | {int})"));
		@Test public void test_9567() { testValid(test_9567_query); }

		private static final SubtypeQuery test_9568_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("(!int | !any)"));
		@Test public void test_9568() { testValid(test_9568_query); }

		private static final SubtypeQuery test_9569_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("({int, any} | !any)"));
		@Test public void test_9569() { testValid(test_9569_query); }

		private static final SubtypeQuery test_9570_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("((any | any) | !any)"));
		@Test public void test_9570() { testValid(test_9570_query); }

		private static final SubtypeQuery test_9571_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("({int} | !int)"));
		@Test public void test_9571() { testValid(test_9571_query); }

		private static final SubtypeQuery test_9572_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("(!any | !int)"));
		@Test public void test_9572() { testValid(test_9572_query); }

		private static final SubtypeQuery test_9573_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("(!int | {any, any})"));
		@Test public void test_9573() { testValid(test_9573_query); }

		private static final SubtypeQuery test_9574_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_9574() { testValid(test_9574_query); }

		private static final SubtypeQuery test_9575_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_9575() { testValid(test_9575_query); }

		private static final SubtypeQuery test_9576_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_9576() { testValid(test_9576_query); }

		private static final SubtypeQuery test_9577_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_9577() { testValid(test_9577_query); }

		private static final SubtypeQuery test_9578_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_9578() { testValid(test_9578_query); }

		private static final SubtypeQuery test_9579_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_9579() { testValid(test_9579_query); }

		private static final SubtypeQuery test_9580_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("({int} | (any | any))"));
		@Test public void test_9580() { testValid(test_9580_query); }

		private static final SubtypeQuery test_9581_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_9581() { testValid(test_9581_query); }

		private static final SubtypeQuery test_9582_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_9582() { testValid(test_9582_query); }

		private static final SubtypeQuery test_9583_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_9583() { testValid(test_9583_query); }

		private static final SubtypeQuery test_9584_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_9584() { testValid(test_9584_query); }

		private static final SubtypeQuery test_9585_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_9585() { testValid(test_9585_query); }

		private static final SubtypeQuery test_9586_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_9586() { testValid(test_9586_query); }

		private static final SubtypeQuery test_9587_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("(int | (any | int))"));
		@Test public void test_9587() { testValid(test_9587_query); }

		private static final SubtypeQuery test_9588_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_9588() { testValid(test_9588_query); }

		private static final SubtypeQuery test_9589_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_9589() { testValid(test_9589_query); }

		private static final SubtypeQuery test_9590_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_9590() { testValid(test_9590_query); }

		private static final SubtypeQuery test_9591_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_9591() { testValid(test_9591_query); }

		private static final SubtypeQuery test_9592_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("(!any | (int | int))"));
		@Test public void test_9592() { testValid(test_9592_query); }

		private static final SubtypeQuery test_9593_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_9593() { testValid(test_9593_query); }

		private static final SubtypeQuery test_9594_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("(int | (any & any))"));
		@Test public void test_9594() { testValid(test_9594_query); }

		private static final SubtypeQuery test_9595_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("(!any | (any & any))"));
		@Test public void test_9595() { testValid(test_9595_query); }

		private static final SubtypeQuery test_9596_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_9596() { testValid(test_9596_query); }

		private static final SubtypeQuery test_9597_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_9597() { testValid(test_9597_query); }

		private static final SubtypeQuery test_9598_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_9598() { testValid(test_9598_query); }

		private static final SubtypeQuery test_9599_query = createSubtypeQuery(parseWhiley("(!any | (any & any))"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_9599() { testValid(test_9599_query); }

		private static final SubtypeQuery test_9600_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("!int"));
		@Test public void test_9600() { testValid(test_9600_query); }

		private static final SubtypeQuery test_9601_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("(any | any)"));
		@Test public void test_9601() { testValid(test_9601_query); }

		private static final SubtypeQuery test_9602_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("(any & any)"));
		@Test public void test_9602() { testValid(test_9602_query); }

		private static final SubtypeQuery test_9603_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{{int, int}}"));
		@Test public void test_9603() { testValid(test_9603_query); }

		private static final SubtypeQuery test_9604_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("!(int | int)"));
		@Test public void test_9604() { testValid(test_9604_query); }

		private static final SubtypeQuery test_9605_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{{any, any}, any}"));
		@Test public void test_9605() { testValid(test_9605_query); }

		private static final SubtypeQuery test_9606_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{{any, int}, any}"));
		@Test public void test_9606() { testValid(test_9606_query); }

		private static final SubtypeQuery test_9607_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{{any}, int}"));
		@Test public void test_9607() { testValid(test_9607_query); }

		private static final SubtypeQuery test_9608_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{{any, any}, int}"));
		@Test public void test_9608() { testValid(test_9608_query); }

		private static final SubtypeQuery test_9609_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{(any | int), int}"));
		@Test public void test_9609() { testValid(test_9609_query); }

		private static final SubtypeQuery test_9610_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_9610() { testValid(test_9610_query); }

		private static final SubtypeQuery test_9611_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{!any, {int}}"));
		@Test public void test_9611() { testValid(test_9611_query); }

		private static final SubtypeQuery test_9612_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_9612() { testValid(test_9612_query); }

		private static final SubtypeQuery test_9613_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_9613() { testValid(test_9613_query); }

		private static final SubtypeQuery test_9614_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{any, !any}"));
		@Test public void test_9614() { testValid(test_9614_query); }

		private static final SubtypeQuery test_9615_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{{any}, !int}"));
		@Test public void test_9615() { testValid(test_9615_query); }

		private static final SubtypeQuery test_9616_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_9616() { testValid(test_9616_query); }

		private static final SubtypeQuery test_9617_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_9617() { testValid(test_9617_query); }

		private static final SubtypeQuery test_9618_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{(int & int), !int}"));
		@Test public void test_9618() { testValid(test_9618_query); }

		private static final SubtypeQuery test_9619_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_9619() { testValid(test_9619_query); }

		private static final SubtypeQuery test_9620_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_9620() { testValid(test_9620_query); }

		private static final SubtypeQuery test_9621_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_9621() { testValid(test_9621_query); }

		private static final SubtypeQuery test_9622_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_9622() { testValid(test_9622_query); }

		private static final SubtypeQuery test_9623_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_9623() { testValid(test_9623_query); }

		private static final SubtypeQuery test_9624_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_9624() { testValid(test_9624_query); }

		private static final SubtypeQuery test_9625_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_9625() { testValid(test_9625_query); }

		private static final SubtypeQuery test_9626_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{any, {any, int}}"));
		@Test public void test_9626() { testValid(test_9626_query); }

		private static final SubtypeQuery test_9627_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_9627() { testValid(test_9627_query); }

		private static final SubtypeQuery test_9628_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_9628() { testValid(test_9628_query); }

		private static final SubtypeQuery test_9629_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_9629() { testValid(test_9629_query); }

		private static final SubtypeQuery test_9630_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_9630() { testValid(test_9630_query); }

		private static final SubtypeQuery test_9631_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_9631() { testValid(test_9631_query); }

		private static final SubtypeQuery test_9632_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_9632() { testValid(test_9632_query); }

		private static final SubtypeQuery test_9633_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_9633() { testValid(test_9633_query); }

		private static final SubtypeQuery test_9634_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_9634() { testValid(test_9634_query); }

		private static final SubtypeQuery test_9635_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_9635() { testValid(test_9635_query); }

		private static final SubtypeQuery test_9636_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_9636() { testValid(test_9636_query); }

		private static final SubtypeQuery test_9637_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{int, (int | int)}"));
		@Test public void test_9637() { testValid(test_9637_query); }

		private static final SubtypeQuery test_9638_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_9638() { testValid(test_9638_query); }

		private static final SubtypeQuery test_9639_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{any, (any & any)}"));
		@Test public void test_9639() { testValid(test_9639_query); }

		private static final SubtypeQuery test_9640_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_9640() { testValid(test_9640_query); }

		private static final SubtypeQuery test_9641_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_9641() { testValid(test_9641_query); }

		private static final SubtypeQuery test_9642_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_9642() { testValid(test_9642_query); }

		private static final SubtypeQuery test_9643_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_9643() { testValid(test_9643_query); }

		private static final SubtypeQuery test_9644_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_9644() { testValid(test_9644_query); }

		private static final SubtypeQuery test_9645_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_9645() { testValid(test_9645_query); }

		private static final SubtypeQuery test_9646_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_9646() { testValid(test_9646_query); }

		private static final SubtypeQuery test_9647_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_9647() { testValid(test_9647_query); }

		private static final SubtypeQuery test_9648_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{any, (any & int)}"));
		@Test public void test_9648() { testValid(test_9648_query); }

		private static final SubtypeQuery test_9649_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_9649() { testValid(test_9649_query); }

		private static final SubtypeQuery test_9650_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_9650() { testValid(test_9650_query); }

		private static final SubtypeQuery test_9651_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_9651() { testValid(test_9651_query); }

		private static final SubtypeQuery test_9652_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{int, (int & int)}"));
		@Test public void test_9652() { testValid(test_9652_query); }

		private static final SubtypeQuery test_9653_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_9653() { testValid(test_9653_query); }

		private static final SubtypeQuery test_9654_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_9654() { testValid(test_9654_query); }

		private static final SubtypeQuery test_9655_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_9655() { testValid(test_9655_query); }

		private static final SubtypeQuery test_9656_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("(!any | any)"));
		@Test public void test_9656() { testValid(test_9656_query); }

		private static final SubtypeQuery test_9657_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("({int, any} | any)"));
		@Test public void test_9657() { testValid(test_9657_query); }

		private static final SubtypeQuery test_9658_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("({any, int} | any)"));
		@Test public void test_9658() { testValid(test_9658_query); }

		private static final SubtypeQuery test_9659_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("((int & int) | any)"));
		@Test public void test_9659() { testValid(test_9659_query); }

		private static final SubtypeQuery test_9660_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("({int, int} | int)"));
		@Test public void test_9660() { testValid(test_9660_query); }

		private static final SubtypeQuery test_9661_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("((any | any) | int)"));
		@Test public void test_9661() { testValid(test_9661_query); }

		private static final SubtypeQuery test_9662_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("((int | any) | int)"));
		@Test public void test_9662() { testValid(test_9662_query); }

		private static final SubtypeQuery test_9663_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("(any | {any})"));
		@Test public void test_9663() { testValid(test_9663_query); }

		private static final SubtypeQuery test_9664_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("(int | {any})"));
		@Test public void test_9664() { testValid(test_9664_query); }

		private static final SubtypeQuery test_9665_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("({any, any} | {any})"));
		@Test public void test_9665() { testValid(test_9665_query); }

		private static final SubtypeQuery test_9666_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("(any | {int})"));
		@Test public void test_9666() { testValid(test_9666_query); }

		private static final SubtypeQuery test_9667_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("((any | any) | {int})"));
		@Test public void test_9667() { testValid(test_9667_query); }

		private static final SubtypeQuery test_9668_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("(!int | !any)"));
		@Test public void test_9668() { testValid(test_9668_query); }

		private static final SubtypeQuery test_9669_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("({int, any} | !any)"));
		@Test public void test_9669() { testValid(test_9669_query); }

		private static final SubtypeQuery test_9670_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("((any | any) | !any)"));
		@Test public void test_9670() { testValid(test_9670_query); }

		private static final SubtypeQuery test_9671_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("({int} | !int)"));
		@Test public void test_9671() { testValid(test_9671_query); }

		private static final SubtypeQuery test_9672_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("(!any | !int)"));
		@Test public void test_9672() { testValid(test_9672_query); }

		private static final SubtypeQuery test_9673_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("(!int | {any, any})"));
		@Test public void test_9673() { testValid(test_9673_query); }

		private static final SubtypeQuery test_9674_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_9674() { testValid(test_9674_query); }

		private static final SubtypeQuery test_9675_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_9675() { testValid(test_9675_query); }

		private static final SubtypeQuery test_9676_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_9676() { testValid(test_9676_query); }

		private static final SubtypeQuery test_9677_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_9677() { testValid(test_9677_query); }

		private static final SubtypeQuery test_9678_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_9678() { testValid(test_9678_query); }

		private static final SubtypeQuery test_9679_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_9679() { testValid(test_9679_query); }

		private static final SubtypeQuery test_9680_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("({int} | (any | any))"));
		@Test public void test_9680() { testValid(test_9680_query); }

		private static final SubtypeQuery test_9681_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_9681() { testValid(test_9681_query); }

		private static final SubtypeQuery test_9682_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_9682() { testValid(test_9682_query); }

		private static final SubtypeQuery test_9683_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_9683() { testValid(test_9683_query); }

		private static final SubtypeQuery test_9684_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_9684() { testValid(test_9684_query); }

		private static final SubtypeQuery test_9685_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_9685() { testValid(test_9685_query); }

		private static final SubtypeQuery test_9686_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_9686() { testValid(test_9686_query); }

		private static final SubtypeQuery test_9687_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("(int | (any | int))"));
		@Test public void test_9687() { testValid(test_9687_query); }

		private static final SubtypeQuery test_9688_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_9688() { testValid(test_9688_query); }

		private static final SubtypeQuery test_9689_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_9689() { testValid(test_9689_query); }

		private static final SubtypeQuery test_9690_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_9690() { testValid(test_9690_query); }

		private static final SubtypeQuery test_9691_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_9691() { testValid(test_9691_query); }

		private static final SubtypeQuery test_9692_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("(!any | (int | int))"));
		@Test public void test_9692() { testValid(test_9692_query); }

		private static final SubtypeQuery test_9693_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_9693() { testValid(test_9693_query); }

		private static final SubtypeQuery test_9694_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("(int | (any & any))"));
		@Test public void test_9694() { testValid(test_9694_query); }

		private static final SubtypeQuery test_9695_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("(!any | (any & any))"));
		@Test public void test_9695() { testValid(test_9695_query); }

		private static final SubtypeQuery test_9696_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_9696() { testValid(test_9696_query); }

		private static final SubtypeQuery test_9697_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_9697() { testValid(test_9697_query); }

		private static final SubtypeQuery test_9698_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_9698() { testValid(test_9698_query); }

		private static final SubtypeQuery test_9699_query = createSubtypeQuery(parseWhiley("({any, int} | (any & any))"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_9699() { testValid(test_9699_query); }

		private static final SubtypeQuery test_9700_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("!int"));
		@Test public void test_9700() { testValid(test_9700_query); }

		private static final SubtypeQuery test_9701_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("(any | any)"));
		@Test public void test_9701() { testValid(test_9701_query); }

		private static final SubtypeQuery test_9702_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("(any & any)"));
		@Test public void test_9702() { testValid(test_9702_query); }

		private static final SubtypeQuery test_9703_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{{int, int}}"));
		@Test public void test_9703() { testValid(test_9703_query); }

		private static final SubtypeQuery test_9704_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("!(int | int)"));
		@Test public void test_9704() { testValid(test_9704_query); }

		private static final SubtypeQuery test_9705_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{{any, any}, any}"));
		@Test public void test_9705() { testValid(test_9705_query); }

		private static final SubtypeQuery test_9706_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{{any, int}, any}"));
		@Test public void test_9706() { testValid(test_9706_query); }

		private static final SubtypeQuery test_9707_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{{any}, int}"));
		@Test public void test_9707() { testValid(test_9707_query); }

		private static final SubtypeQuery test_9708_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{{any, any}, int}"));
		@Test public void test_9708() { testValid(test_9708_query); }

		private static final SubtypeQuery test_9709_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{(any | int), int}"));
		@Test public void test_9709() { testValid(test_9709_query); }

		private static final SubtypeQuery test_9710_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_9710() { testValid(test_9710_query); }

		private static final SubtypeQuery test_9711_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{!any, {int}}"));
		@Test public void test_9711() { testValid(test_9711_query); }

		private static final SubtypeQuery test_9712_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_9712() { testValid(test_9712_query); }

		private static final SubtypeQuery test_9713_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_9713() { testValid(test_9713_query); }

		private static final SubtypeQuery test_9714_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{any, !any}"));
		@Test public void test_9714() { testValid(test_9714_query); }

		private static final SubtypeQuery test_9715_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{{any}, !int}"));
		@Test public void test_9715() { testValid(test_9715_query); }

		private static final SubtypeQuery test_9716_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_9716() { testValid(test_9716_query); }

		private static final SubtypeQuery test_9717_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_9717() { testValid(test_9717_query); }

		private static final SubtypeQuery test_9718_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{(int & int), !int}"));
		@Test public void test_9718() { testValid(test_9718_query); }

		private static final SubtypeQuery test_9719_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_9719() { testValid(test_9719_query); }

		private static final SubtypeQuery test_9720_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_9720() { testValid(test_9720_query); }

		private static final SubtypeQuery test_9721_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_9721() { testValid(test_9721_query); }

		private static final SubtypeQuery test_9722_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_9722() { testValid(test_9722_query); }

		private static final SubtypeQuery test_9723_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_9723() { testValid(test_9723_query); }

		private static final SubtypeQuery test_9724_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_9724() { testValid(test_9724_query); }

		private static final SubtypeQuery test_9725_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_9725() { testValid(test_9725_query); }

		private static final SubtypeQuery test_9726_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{any, {any, int}}"));
		@Test public void test_9726() { testValid(test_9726_query); }

		private static final SubtypeQuery test_9727_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_9727() { testValid(test_9727_query); }

		private static final SubtypeQuery test_9728_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_9728() { testValid(test_9728_query); }

		private static final SubtypeQuery test_9729_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_9729() { testValid(test_9729_query); }

		private static final SubtypeQuery test_9730_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_9730() { testValid(test_9730_query); }

		private static final SubtypeQuery test_9731_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_9731() { testValid(test_9731_query); }

		private static final SubtypeQuery test_9732_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_9732() { testValid(test_9732_query); }

		private static final SubtypeQuery test_9733_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_9733() { testValid(test_9733_query); }

		private static final SubtypeQuery test_9734_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_9734() { testValid(test_9734_query); }

		private static final SubtypeQuery test_9735_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_9735() { testValid(test_9735_query); }

		private static final SubtypeQuery test_9736_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_9736() { testValid(test_9736_query); }

		private static final SubtypeQuery test_9737_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{int, (int | int)}"));
		@Test public void test_9737() { testValid(test_9737_query); }

		private static final SubtypeQuery test_9738_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_9738() { testValid(test_9738_query); }

		private static final SubtypeQuery test_9739_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{any, (any & any)}"));
		@Test public void test_9739() { testValid(test_9739_query); }

		private static final SubtypeQuery test_9740_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_9740() { testValid(test_9740_query); }

		private static final SubtypeQuery test_9741_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_9741() { testValid(test_9741_query); }

		private static final SubtypeQuery test_9742_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_9742() { testValid(test_9742_query); }

		private static final SubtypeQuery test_9743_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_9743() { testValid(test_9743_query); }

		private static final SubtypeQuery test_9744_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_9744() { testValid(test_9744_query); }

		private static final SubtypeQuery test_9745_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_9745() { testValid(test_9745_query); }

		private static final SubtypeQuery test_9746_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_9746() { testValid(test_9746_query); }

		private static final SubtypeQuery test_9747_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_9747() { testValid(test_9747_query); }

		private static final SubtypeQuery test_9748_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{any, (any & int)}"));
		@Test public void test_9748() { testValid(test_9748_query); }

		private static final SubtypeQuery test_9749_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_9749() { testValid(test_9749_query); }

		private static final SubtypeQuery test_9750_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_9750() { testValid(test_9750_query); }

		private static final SubtypeQuery test_9751_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_9751() { testValid(test_9751_query); }

		private static final SubtypeQuery test_9752_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{int, (int & int)}"));
		@Test public void test_9752() { testValid(test_9752_query); }

		private static final SubtypeQuery test_9753_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_9753() { testValid(test_9753_query); }

		private static final SubtypeQuery test_9754_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_9754() { testValid(test_9754_query); }

		private static final SubtypeQuery test_9755_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_9755() { testValid(test_9755_query); }

		private static final SubtypeQuery test_9756_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("(!any | any)"));
		@Test public void test_9756() { testValid(test_9756_query); }

		private static final SubtypeQuery test_9757_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("({int, any} | any)"));
		@Test public void test_9757() { testValid(test_9757_query); }

		private static final SubtypeQuery test_9758_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("({any, int} | any)"));
		@Test public void test_9758() { testValid(test_9758_query); }

		private static final SubtypeQuery test_9759_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("((int & int) | any)"));
		@Test public void test_9759() { testValid(test_9759_query); }

		private static final SubtypeQuery test_9760_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("({int, int} | int)"));
		@Test public void test_9760() { testValid(test_9760_query); }

		private static final SubtypeQuery test_9761_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("((any | any) | int)"));
		@Test public void test_9761() { testValid(test_9761_query); }

		private static final SubtypeQuery test_9762_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("((int | any) | int)"));
		@Test public void test_9762() { testValid(test_9762_query); }

		private static final SubtypeQuery test_9763_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("(any | {any})"));
		@Test public void test_9763() { testValid(test_9763_query); }

		private static final SubtypeQuery test_9764_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("(int | {any})"));
		@Test public void test_9764() { testValid(test_9764_query); }

		private static final SubtypeQuery test_9765_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("({any, any} | {any})"));
		@Test public void test_9765() { testValid(test_9765_query); }

		private static final SubtypeQuery test_9766_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("(any | {int})"));
		@Test public void test_9766() { testValid(test_9766_query); }

		private static final SubtypeQuery test_9767_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("((any | any) | {int})"));
		@Test public void test_9767() { testValid(test_9767_query); }

		private static final SubtypeQuery test_9768_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("(!int | !any)"));
		@Test public void test_9768() { testValid(test_9768_query); }

		private static final SubtypeQuery test_9769_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("({int, any} | !any)"));
		@Test public void test_9769() { testValid(test_9769_query); }

		private static final SubtypeQuery test_9770_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("((any | any) | !any)"));
		@Test public void test_9770() { testValid(test_9770_query); }

		private static final SubtypeQuery test_9771_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("({int} | !int)"));
		@Test public void test_9771() { testValid(test_9771_query); }

		private static final SubtypeQuery test_9772_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("(!any | !int)"));
		@Test public void test_9772() { testValid(test_9772_query); }

		private static final SubtypeQuery test_9773_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("(!int | {any, any})"));
		@Test public void test_9773() { testValid(test_9773_query); }

		private static final SubtypeQuery test_9774_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_9774() { testValid(test_9774_query); }

		private static final SubtypeQuery test_9775_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_9775() { testValid(test_9775_query); }

		private static final SubtypeQuery test_9776_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_9776() { testValid(test_9776_query); }

		private static final SubtypeQuery test_9777_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_9777() { testValid(test_9777_query); }

		private static final SubtypeQuery test_9778_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_9778() { testValid(test_9778_query); }

		private static final SubtypeQuery test_9779_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_9779() { testValid(test_9779_query); }

		private static final SubtypeQuery test_9780_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("({int} | (any | any))"));
		@Test public void test_9780() { testValid(test_9780_query); }

		private static final SubtypeQuery test_9781_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_9781() { testValid(test_9781_query); }

		private static final SubtypeQuery test_9782_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_9782() { testValid(test_9782_query); }

		private static final SubtypeQuery test_9783_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_9783() { testValid(test_9783_query); }

		private static final SubtypeQuery test_9784_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_9784() { testValid(test_9784_query); }

		private static final SubtypeQuery test_9785_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_9785() { testValid(test_9785_query); }

		private static final SubtypeQuery test_9786_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_9786() { testValid(test_9786_query); }

		private static final SubtypeQuery test_9787_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("(int | (any | int))"));
		@Test public void test_9787() { testValid(test_9787_query); }

		private static final SubtypeQuery test_9788_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_9788() { testValid(test_9788_query); }

		private static final SubtypeQuery test_9789_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_9789() { testValid(test_9789_query); }

		private static final SubtypeQuery test_9790_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_9790() { testValid(test_9790_query); }

		private static final SubtypeQuery test_9791_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_9791() { testValid(test_9791_query); }

		private static final SubtypeQuery test_9792_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("(!any | (int | int))"));
		@Test public void test_9792() { testValid(test_9792_query); }

		private static final SubtypeQuery test_9793_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_9793() { testValid(test_9793_query); }

		private static final SubtypeQuery test_9794_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("(int | (any & any))"));
		@Test public void test_9794() { testValid(test_9794_query); }

		private static final SubtypeQuery test_9795_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("(!any | (any & any))"));
		@Test public void test_9795() { testValid(test_9795_query); }

		private static final SubtypeQuery test_9796_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_9796() { testValid(test_9796_query); }

		private static final SubtypeQuery test_9797_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_9797() { testValid(test_9797_query); }

		private static final SubtypeQuery test_9798_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_9798() { testValid(test_9798_query); }

		private static final SubtypeQuery test_9799_query = createSubtypeQuery(parseWhiley("((any | any) | (any & any))"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_9799() { testValid(test_9799_query); }

		private static final SubtypeQuery test_9800_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("!int"));
		@Test public void test_9800() { testValid(test_9800_query); }

		private static final SubtypeQuery test_9801_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("(any | any)"));
		@Test public void test_9801() { testValid(test_9801_query); }

		private static final SubtypeQuery test_9802_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("(any & any)"));
		@Test public void test_9802() { testValid(test_9802_query); }

		private static final SubtypeQuery test_9803_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{{int, int}}"));
		@Test public void test_9803() { testValid(test_9803_query); }

		private static final SubtypeQuery test_9804_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("!(int | int)"));
		@Test public void test_9804() { testValid(test_9804_query); }

		private static final SubtypeQuery test_9805_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{{any, any}, any}"));
		@Test public void test_9805() { testValid(test_9805_query); }

		private static final SubtypeQuery test_9806_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{{any, int}, any}"));
		@Test public void test_9806() { testValid(test_9806_query); }

		private static final SubtypeQuery test_9807_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{{any}, int}"));
		@Test public void test_9807() { testValid(test_9807_query); }

		private static final SubtypeQuery test_9808_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{{any, any}, int}"));
		@Test public void test_9808() { testValid(test_9808_query); }

		private static final SubtypeQuery test_9809_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{(any | int), int}"));
		@Test public void test_9809() { testValid(test_9809_query); }

		private static final SubtypeQuery test_9810_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_9810() { testValid(test_9810_query); }

		private static final SubtypeQuery test_9811_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{!any, {int}}"));
		@Test public void test_9811() { testValid(test_9811_query); }

		private static final SubtypeQuery test_9812_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_9812() { testValid(test_9812_query); }

		private static final SubtypeQuery test_9813_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_9813() { testValid(test_9813_query); }

		private static final SubtypeQuery test_9814_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{any, !any}"));
		@Test public void test_9814() { testValid(test_9814_query); }

		private static final SubtypeQuery test_9815_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{{any}, !int}"));
		@Test public void test_9815() { testValid(test_9815_query); }

		private static final SubtypeQuery test_9816_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_9816() { testValid(test_9816_query); }

		private static final SubtypeQuery test_9817_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_9817() { testValid(test_9817_query); }

		private static final SubtypeQuery test_9818_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{(int & int), !int}"));
		@Test public void test_9818() { testValid(test_9818_query); }

		private static final SubtypeQuery test_9819_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_9819() { testValid(test_9819_query); }

		private static final SubtypeQuery test_9820_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_9820() { testValid(test_9820_query); }

		private static final SubtypeQuery test_9821_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_9821() { testValid(test_9821_query); }

		private static final SubtypeQuery test_9822_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_9822() { testValid(test_9822_query); }

		private static final SubtypeQuery test_9823_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_9823() { testValid(test_9823_query); }

		private static final SubtypeQuery test_9824_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_9824() { testValid(test_9824_query); }

		private static final SubtypeQuery test_9825_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_9825() { testValid(test_9825_query); }

		private static final SubtypeQuery test_9826_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{any, {any, int}}"));
		@Test public void test_9826() { testValid(test_9826_query); }

		private static final SubtypeQuery test_9827_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_9827() { testValid(test_9827_query); }

		private static final SubtypeQuery test_9828_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_9828() { testValid(test_9828_query); }

		private static final SubtypeQuery test_9829_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_9829() { testValid(test_9829_query); }

		private static final SubtypeQuery test_9830_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_9830() { testValid(test_9830_query); }

		private static final SubtypeQuery test_9831_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_9831() { testValid(test_9831_query); }

		private static final SubtypeQuery test_9832_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_9832() { testValid(test_9832_query); }

		private static final SubtypeQuery test_9833_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_9833() { testValid(test_9833_query); }

		private static final SubtypeQuery test_9834_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_9834() { testValid(test_9834_query); }

		private static final SubtypeQuery test_9835_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_9835() { testValid(test_9835_query); }

		private static final SubtypeQuery test_9836_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_9836() { testValid(test_9836_query); }

		private static final SubtypeQuery test_9837_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{int, (int | int)}"));
		@Test public void test_9837() { testValid(test_9837_query); }

		private static final SubtypeQuery test_9838_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_9838() { testValid(test_9838_query); }

		private static final SubtypeQuery test_9839_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{any, (any & any)}"));
		@Test public void test_9839() { testValid(test_9839_query); }

		private static final SubtypeQuery test_9840_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_9840() { testValid(test_9840_query); }

		private static final SubtypeQuery test_9841_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_9841() { testValid(test_9841_query); }

		private static final SubtypeQuery test_9842_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_9842() { testValid(test_9842_query); }

		private static final SubtypeQuery test_9843_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_9843() { testValid(test_9843_query); }

		private static final SubtypeQuery test_9844_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_9844() { testValid(test_9844_query); }

		private static final SubtypeQuery test_9845_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_9845() { testValid(test_9845_query); }

		private static final SubtypeQuery test_9846_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_9846() { testValid(test_9846_query); }

		private static final SubtypeQuery test_9847_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_9847() { testValid(test_9847_query); }

		private static final SubtypeQuery test_9848_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{any, (any & int)}"));
		@Test public void test_9848() { testValid(test_9848_query); }

		private static final SubtypeQuery test_9849_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_9849() { testValid(test_9849_query); }

		private static final SubtypeQuery test_9850_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_9850() { testValid(test_9850_query); }

		private static final SubtypeQuery test_9851_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_9851() { testValid(test_9851_query); }

		private static final SubtypeQuery test_9852_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{int, (int & int)}"));
		@Test public void test_9852() { testValid(test_9852_query); }

		private static final SubtypeQuery test_9853_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_9853() { testValid(test_9853_query); }

		private static final SubtypeQuery test_9854_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_9854() { testValid(test_9854_query); }

		private static final SubtypeQuery test_9855_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_9855() { testValid(test_9855_query); }

		private static final SubtypeQuery test_9856_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("(!any | any)"));
		@Test public void test_9856() { testValid(test_9856_query); }

		private static final SubtypeQuery test_9857_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("({int, any} | any)"));
		@Test public void test_9857() { testValid(test_9857_query); }

		private static final SubtypeQuery test_9858_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("({any, int} | any)"));
		@Test public void test_9858() { testValid(test_9858_query); }

		private static final SubtypeQuery test_9859_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("((int & int) | any)"));
		@Test public void test_9859() { testValid(test_9859_query); }

		private static final SubtypeQuery test_9860_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("({int, int} | int)"));
		@Test public void test_9860() { testValid(test_9860_query); }

		private static final SubtypeQuery test_9861_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("((any | any) | int)"));
		@Test public void test_9861() { testValid(test_9861_query); }

		private static final SubtypeQuery test_9862_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("((int | any) | int)"));
		@Test public void test_9862() { testValid(test_9862_query); }

		private static final SubtypeQuery test_9863_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("(any | {any})"));
		@Test public void test_9863() { testValid(test_9863_query); }

		private static final SubtypeQuery test_9864_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("(int | {any})"));
		@Test public void test_9864() { testValid(test_9864_query); }

		private static final SubtypeQuery test_9865_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("({any, any} | {any})"));
		@Test public void test_9865() { testValid(test_9865_query); }

		private static final SubtypeQuery test_9866_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("(any | {int})"));
		@Test public void test_9866() { testValid(test_9866_query); }

		private static final SubtypeQuery test_9867_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("((any | any) | {int})"));
		@Test public void test_9867() { testValid(test_9867_query); }

		private static final SubtypeQuery test_9868_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("(!int | !any)"));
		@Test public void test_9868() { testValid(test_9868_query); }

		private static final SubtypeQuery test_9869_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("({int, any} | !any)"));
		@Test public void test_9869() { testValid(test_9869_query); }

		private static final SubtypeQuery test_9870_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("((any | any) | !any)"));
		@Test public void test_9870() { testValid(test_9870_query); }

		private static final SubtypeQuery test_9871_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("({int} | !int)"));
		@Test public void test_9871() { testValid(test_9871_query); }

		private static final SubtypeQuery test_9872_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("(!any | !int)"));
		@Test public void test_9872() { testValid(test_9872_query); }

		private static final SubtypeQuery test_9873_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("(!int | {any, any})"));
		@Test public void test_9873() { testValid(test_9873_query); }

		private static final SubtypeQuery test_9874_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_9874() { testValid(test_9874_query); }

		private static final SubtypeQuery test_9875_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_9875() { testValid(test_9875_query); }

		private static final SubtypeQuery test_9876_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_9876() { testValid(test_9876_query); }

		private static final SubtypeQuery test_9877_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_9877() { testValid(test_9877_query); }

		private static final SubtypeQuery test_9878_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_9878() { testValid(test_9878_query); }

		private static final SubtypeQuery test_9879_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_9879() { testValid(test_9879_query); }

		private static final SubtypeQuery test_9880_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("({int} | (any | any))"));
		@Test public void test_9880() { testValid(test_9880_query); }

		private static final SubtypeQuery test_9881_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_9881() { testValid(test_9881_query); }

		private static final SubtypeQuery test_9882_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_9882() { testValid(test_9882_query); }

		private static final SubtypeQuery test_9883_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_9883() { testValid(test_9883_query); }

		private static final SubtypeQuery test_9884_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_9884() { testValid(test_9884_query); }

		private static final SubtypeQuery test_9885_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_9885() { testValid(test_9885_query); }

		private static final SubtypeQuery test_9886_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_9886() { testValid(test_9886_query); }

		private static final SubtypeQuery test_9887_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("(int | (any | int))"));
		@Test public void test_9887() { testValid(test_9887_query); }

		private static final SubtypeQuery test_9888_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_9888() { testValid(test_9888_query); }

		private static final SubtypeQuery test_9889_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_9889() { testValid(test_9889_query); }

		private static final SubtypeQuery test_9890_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_9890() { testValid(test_9890_query); }

		private static final SubtypeQuery test_9891_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_9891() { testValid(test_9891_query); }

		private static final SubtypeQuery test_9892_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("(!any | (int | int))"));
		@Test public void test_9892() { testValid(test_9892_query); }

		private static final SubtypeQuery test_9893_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_9893() { testValid(test_9893_query); }

		private static final SubtypeQuery test_9894_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("(int | (any & any))"));
		@Test public void test_9894() { testValid(test_9894_query); }

		private static final SubtypeQuery test_9895_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("(!any | (any & any))"));
		@Test public void test_9895() { testValid(test_9895_query); }

		private static final SubtypeQuery test_9896_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_9896() { testValid(test_9896_query); }

		private static final SubtypeQuery test_9897_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_9897() { testValid(test_9897_query); }

		private static final SubtypeQuery test_9898_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_9898() { testValid(test_9898_query); }

		private static final SubtypeQuery test_9899_query = createSubtypeQuery(parseWhiley("((any | int) | (any & any))"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_9899() { testValid(test_9899_query); }

		private static final SubtypeQuery test_9900_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("!int"));
		@Test public void test_9900() { testValid(test_9900_query); }

		private static final SubtypeQuery test_9901_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("(any | any)"));
		@Test public void test_9901() { testValid(test_9901_query); }

		private static final SubtypeQuery test_9902_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("(any & any)"));
		@Test public void test_9902() { testValid(test_9902_query); }

		private static final SubtypeQuery test_9903_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{{int, int}}"));
		@Test public void test_9903() { testValid(test_9903_query); }

		private static final SubtypeQuery test_9904_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("!(int | int)"));
		@Test public void test_9904() { testValid(test_9904_query); }

		private static final SubtypeQuery test_9905_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{{any, any}, any}"));
		@Test public void test_9905() { testValid(test_9905_query); }

		private static final SubtypeQuery test_9906_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{{any, int}, any}"));
		@Test public void test_9906() { testValid(test_9906_query); }

		private static final SubtypeQuery test_9907_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{{any}, int}"));
		@Test public void test_9907() { testValid(test_9907_query); }

		private static final SubtypeQuery test_9908_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{{any, any}, int}"));
		@Test public void test_9908() { testValid(test_9908_query); }

		private static final SubtypeQuery test_9909_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{(any | int), int}"));
		@Test public void test_9909() { testValid(test_9909_query); }

		private static final SubtypeQuery test_9910_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{(any | any), {any}}"));
		@Test public void test_9910() { testValid(test_9910_query); }

		private static final SubtypeQuery test_9911_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{!any, {int}}"));
		@Test public void test_9911() { testValid(test_9911_query); }

		private static final SubtypeQuery test_9912_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{{int, int}, {int}}"));
		@Test public void test_9912() { testValid(test_9912_query); }

		private static final SubtypeQuery test_9913_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{(int | int), {int}}"));
		@Test public void test_9913() { testValid(test_9913_query); }

		private static final SubtypeQuery test_9914_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{any, !any}"));
		@Test public void test_9914() { testValid(test_9914_query); }

		private static final SubtypeQuery test_9915_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{{any}, !int}"));
		@Test public void test_9915() { testValid(test_9915_query); }

		private static final SubtypeQuery test_9916_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{{int, any}, !int}"));
		@Test public void test_9916() { testValid(test_9916_query); }

		private static final SubtypeQuery test_9917_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{{any, int}, !int}"));
		@Test public void test_9917() { testValid(test_9917_query); }

		private static final SubtypeQuery test_9918_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{(int & int), !int}"));
		@Test public void test_9918() { testValid(test_9918_query); }

		private static final SubtypeQuery test_9919_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{(int | any), {any, any}}"));
		@Test public void test_9919() { testValid(test_9919_query); }

		private static final SubtypeQuery test_9920_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{(any | int), {any, any}}"));
		@Test public void test_9920() { testValid(test_9920_query); }

		private static final SubtypeQuery test_9921_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{(int & any), {any, any}}"));
		@Test public void test_9921() { testValid(test_9921_query); }

		private static final SubtypeQuery test_9922_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{(any & int), {any, any}}"));
		@Test public void test_9922() { testValid(test_9922_query); }

		private static final SubtypeQuery test_9923_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{{int, any}, {int, any}}"));
		@Test public void test_9923() { testValid(test_9923_query); }

		private static final SubtypeQuery test_9924_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{(int | int), {int, any}}"));
		@Test public void test_9924() { testValid(test_9924_query); }

		private static final SubtypeQuery test_9925_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{(int & int), {int, any}}"));
		@Test public void test_9925() { testValid(test_9925_query); }

		private static final SubtypeQuery test_9926_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{any, {any, int}}"));
		@Test public void test_9926() { testValid(test_9926_query); }

		private static final SubtypeQuery test_9927_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{{any}, {any, int}}"));
		@Test public void test_9927() { testValid(test_9927_query); }

		private static final SubtypeQuery test_9928_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{{int, any}, {any, int}}"));
		@Test public void test_9928() { testValid(test_9928_query); }

		private static final SubtypeQuery test_9929_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{!any, {int, int}}"));
		@Test public void test_9929() { testValid(test_9929_query); }

		private static final SubtypeQuery test_9930_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{(int | any), {int, int}}"));
		@Test public void test_9930() { testValid(test_9930_query); }

		private static final SubtypeQuery test_9931_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{(int & int), {int, int}}"));
		@Test public void test_9931() { testValid(test_9931_query); }

		private static final SubtypeQuery test_9932_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{{any}, (any | any)}"));
		@Test public void test_9932() { testValid(test_9932_query); }

		private static final SubtypeQuery test_9933_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{(int & any), (any | any)}"));
		@Test public void test_9933() { testValid(test_9933_query); }

		private static final SubtypeQuery test_9934_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{(int | any), (int | any)}"));
		@Test public void test_9934() { testValid(test_9934_query); }

		private static final SubtypeQuery test_9935_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{(any | int), (int | any)}"));
		@Test public void test_9935() { testValid(test_9935_query); }

		private static final SubtypeQuery test_9936_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{{int, int}, (any | int)}"));
		@Test public void test_9936() { testValid(test_9936_query); }

		private static final SubtypeQuery test_9937_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{int, (int | int)}"));
		@Test public void test_9937() { testValid(test_9937_query); }

		private static final SubtypeQuery test_9938_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{{int, any}, (int | int)}"));
		@Test public void test_9938() { testValid(test_9938_query); }

		private static final SubtypeQuery test_9939_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{any, (any & any)}"));
		@Test public void test_9939() { testValid(test_9939_query); }

		private static final SubtypeQuery test_9940_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{{any}, (any & any)}"));
		@Test public void test_9940() { testValid(test_9940_query); }

		private static final SubtypeQuery test_9941_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{!any, (any & any)}"));
		@Test public void test_9941() { testValid(test_9941_query); }

		private static final SubtypeQuery test_9942_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{(any & any), (any & any)}"));
		@Test public void test_9942() { testValid(test_9942_query); }

		private static final SubtypeQuery test_9943_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{(int & int), (any & any)}"));
		@Test public void test_9943() { testValid(test_9943_query); }

		private static final SubtypeQuery test_9944_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{{int}, (int & any)}"));
		@Test public void test_9944() { testValid(test_9944_query); }

		private static final SubtypeQuery test_9945_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{{any, int}, (int & any)}"));
		@Test public void test_9945() { testValid(test_9945_query); }

		private static final SubtypeQuery test_9946_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{(int | any), (int & any)}"));
		@Test public void test_9946() { testValid(test_9946_query); }

		private static final SubtypeQuery test_9947_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{(int | int), (int & any)}"));
		@Test public void test_9947() { testValid(test_9947_query); }

		private static final SubtypeQuery test_9948_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{any, (any & int)}"));
		@Test public void test_9948() { testValid(test_9948_query); }

		private static final SubtypeQuery test_9949_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{{int}, (any & int)}"));
		@Test public void test_9949() { testValid(test_9949_query); }

		private static final SubtypeQuery test_9950_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{{any, any}, (any & int)}"));
		@Test public void test_9950() { testValid(test_9950_query); }

		private static final SubtypeQuery test_9951_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{{int, any}, (any & int)}"));
		@Test public void test_9951() { testValid(test_9951_query); }

		private static final SubtypeQuery test_9952_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{int, (int & int)}"));
		@Test public void test_9952() { testValid(test_9952_query); }

		private static final SubtypeQuery test_9953_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{{any}, (int & int)}"));
		@Test public void test_9953() { testValid(test_9953_query); }

		private static final SubtypeQuery test_9954_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{{any, int}, (int & int)}"));
		@Test public void test_9954() { testValid(test_9954_query); }

		private static final SubtypeQuery test_9955_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("{(any & int), (int & int)}"));
		@Test public void test_9955() { testValid(test_9955_query); }

		private static final SubtypeQuery test_9956_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("(!any | any)"));
		@Test public void test_9956() { testValid(test_9956_query); }

		private static final SubtypeQuery test_9957_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("({int, any} | any)"));
		@Test public void test_9957() { testValid(test_9957_query); }

		private static final SubtypeQuery test_9958_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("({any, int} | any)"));
		@Test public void test_9958() { testValid(test_9958_query); }

		private static final SubtypeQuery test_9959_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("((int & int) | any)"));
		@Test public void test_9959() { testValid(test_9959_query); }

		private static final SubtypeQuery test_9960_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("({int, int} | int)"));
		@Test public void test_9960() { testValid(test_9960_query); }

		private static final SubtypeQuery test_9961_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("((any | any) | int)"));
		@Test public void test_9961() { testValid(test_9961_query); }

		private static final SubtypeQuery test_9962_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("((int | any) | int)"));
		@Test public void test_9962() { testValid(test_9962_query); }

		private static final SubtypeQuery test_9963_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("(any | {any})"));
		@Test public void test_9963() { testValid(test_9963_query); }

		private static final SubtypeQuery test_9964_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("(int | {any})"));
		@Test public void test_9964() { testValid(test_9964_query); }

		private static final SubtypeQuery test_9965_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("({any, any} | {any})"));
		@Test public void test_9965() { testValid(test_9965_query); }

		private static final SubtypeQuery test_9966_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("(any | {int})"));
		@Test public void test_9966() { testValid(test_9966_query); }

		private static final SubtypeQuery test_9967_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("((any | any) | {int})"));
		@Test public void test_9967() { testValid(test_9967_query); }

		private static final SubtypeQuery test_9968_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("(!int | !any)"));
		@Test public void test_9968() { testValid(test_9968_query); }

		private static final SubtypeQuery test_9969_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("({int, any} | !any)"));
		@Test public void test_9969() { testValid(test_9969_query); }

		private static final SubtypeQuery test_9970_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("((any | any) | !any)"));
		@Test public void test_9970() { testValid(test_9970_query); }

		private static final SubtypeQuery test_9971_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("({int} | !int)"));
		@Test public void test_9971() { testValid(test_9971_query); }

		private static final SubtypeQuery test_9972_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("(!any | !int)"));
		@Test public void test_9972() { testValid(test_9972_query); }

		private static final SubtypeQuery test_9973_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("(!int | {any, any})"));
		@Test public void test_9973() { testValid(test_9973_query); }

		private static final SubtypeQuery test_9974_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("((any & int) | {any, any})"));
		@Test public void test_9974() { testValid(test_9974_query); }

		private static final SubtypeQuery test_9975_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("((any & any) | {int, any})"));
		@Test public void test_9975() { testValid(test_9975_query); }

		private static final SubtypeQuery test_9976_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("({int, int} | {any, int})"));
		@Test public void test_9976() { testValid(test_9976_query); }

		private static final SubtypeQuery test_9977_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("((any & any) | {int, int})"));
		@Test public void test_9977() { testValid(test_9977_query); }

		private static final SubtypeQuery test_9978_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("((int & any) | {int, int})"));
		@Test public void test_9978() { testValid(test_9978_query); }

		private static final SubtypeQuery test_9979_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("((any & int) | {int, int})"));
		@Test public void test_9979() { testValid(test_9979_query); }

		private static final SubtypeQuery test_9980_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("({int} | (any | any))"));
		@Test public void test_9980() { testValid(test_9980_query); }

		private static final SubtypeQuery test_9981_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("({any, int} | (any | any))"));
		@Test public void test_9981() { testValid(test_9981_query); }

		private static final SubtypeQuery test_9982_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("((any | any) | (any | any))"));
		@Test public void test_9982() { testValid(test_9982_query); }

		private static final SubtypeQuery test_9983_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("((any & any) | (any | any))"));
		@Test public void test_9983() { testValid(test_9983_query); }

		private static final SubtypeQuery test_9984_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("((any | int) | (int | any))"));
		@Test public void test_9984() { testValid(test_9984_query); }

		private static final SubtypeQuery test_9985_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("((any & int) | (int | any))"));
		@Test public void test_9985() { testValid(test_9985_query); }

		private static final SubtypeQuery test_9986_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("((int & int) | (int | any))"));
		@Test public void test_9986() { testValid(test_9986_query); }

		private static final SubtypeQuery test_9987_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("(int | (any | int))"));
		@Test public void test_9987() { testValid(test_9987_query); }

		private static final SubtypeQuery test_9988_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("({int, any} | (any | int))"));
		@Test public void test_9988() { testValid(test_9988_query); }

		private static final SubtypeQuery test_9989_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("((any | any) | (any | int))"));
		@Test public void test_9989() { testValid(test_9989_query); }

		private static final SubtypeQuery test_9990_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("((any | int) | (any | int))"));
		@Test public void test_9990() { testValid(test_9990_query); }

		private static final SubtypeQuery test_9991_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("((int | int) | (any | int))"));
		@Test public void test_9991() { testValid(test_9991_query); }

		private static final SubtypeQuery test_9992_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("(!any | (int | int))"));
		@Test public void test_9992() { testValid(test_9992_query); }

		private static final SubtypeQuery test_9993_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("({any, int} | (int | int))"));
		@Test public void test_9993() { testValid(test_9993_query); }

		private static final SubtypeQuery test_9994_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("(int | (any & any))"));
		@Test public void test_9994() { testValid(test_9994_query); }

		private static final SubtypeQuery test_9995_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("(!any | (any & any))"));
		@Test public void test_9995() { testValid(test_9995_query); }

		private static final SubtypeQuery test_9996_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("({any, int} | (any & any))"));
		@Test public void test_9996() { testValid(test_9996_query); }

		private static final SubtypeQuery test_9997_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("((any | any) | (any & any))"));
		@Test public void test_9997() { testValid(test_9997_query); }

		private static final SubtypeQuery test_9998_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("((any | int) | (any & any))"));
		@Test public void test_9998() { testValid(test_9998_query); }

		private static final SubtypeQuery test_9999_query = createSubtypeQuery(parseWhiley("((any & int) | (any & any))"),parseWhiley("((any & int) | (any & any))"));
		@Test public void test_9999() { testValid(test_9999_query); }

	}
}
